/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:36:22 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /usr/lib/libnfshared.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class AWDServerConnection, NSData, NSUserDefaults, NFAWDVersionInfo, NSObject;

@interface NFAWDLogger : NSObject {

	AWDServerConnection* _awdServer;
	unsigned long long _previousTransactionState;
	NSData* _uuid;
	unsigned long long _uuidRefTimestamp;
	NSUserDefaults* _userDefault;
	NSData* _tsmUuid;
	unsigned long long _tsmUuidRefTimestamp;
	NFAWDVersionInfo* _versionInfo;
	NSData* _deviceExceptionUuid;
	unsigned long long _previousVASTransactionState;
	NSObject*<OS_dispatch_queue> _awdSubmissionQueue;
	unsigned long long _middlewareExceptionCount;
	unsigned long long _previousCardIngestionSessionState;
	unsigned long long _previousExpressFelicaState;
	NSData* _activeAID;

}

@property (copy) NSData * activeAID;              //@synthesize activeAID=_activeAID - In the implementation block
+(id)sharedAWDLogger;
-(id)init;
-(void)dealloc;
-(unsigned long long)getTimestamp;
-(void)postAWDEvent:(id)arg1 ;
-(void)updateStats:(id)arg1 reset:(BOOL)arg2 ;
-(BOOL)incrementMiddlewareExceptionCountWithReset:(BOOL)arg1 ;
-(void)enableQueryMetricsListener;
-(void)postAWDFieldEventWithFieldOn:(BOOL)arg1 withTechnology:(unsigned)arg2 ;
-(void)postAWDCRSAuthInitEventWithStatus:(unsigned)arg1 ;
-(void)postAWDCRSAuthWithStatus:(unsigned)arg1 withMethod:(unsigned)arg2 ;
-(void)postAWDCRSAuthECommerceWithParameters:(id)arg1 ;
-(void)postAWDCRSDeAuthWithStatus:(unsigned)arg1 ;
-(void)postAWDSESelectEventWithAID:(id)arg1 ;
-(void)postAWDCRSActivationTimerExpiredWithVersion:(unsigned)arg1 withStatus:(unsigned)arg2 ;
-(void)postAWDExpressFelicaStarted:(BOOL)arg1 ;
-(void)postAWDCardIngestionSessionStateChangeTo:(unsigned)arg1 ;
-(void)postAWDCardIngestionReaderStateChangeWithType:(unsigned)arg1 errorCode:(unsigned)arg2 ;
-(void)postAWDHCIStartOfTransactionEventWithVersion:(unsigned)arg1 withStatus:(unsigned)arg2 ;
-(void)postAWDHCIEndOfTransactionEventWithParameters:(id)arg1 ;
-(void)postAWDTransactionLastRAPDU;
-(void)postAWDTransactionEndOfOperation;
-(void)postAWDAPNReceived;
-(void)postAWDSERemovedEvent:(unsigned)arg1 isIcf:(BOOL)arg2 hasCardEmulationStarted:(BOOL)arg3 hasExpressTransitStarted:(BOOL)arg4 ;
-(void)postAWDRestrictedModeFromContactlessMode:(BOOL)arg1 isIcf:(BOOL)arg2 ;
-(void)postAWDTSMStartWithParameters:(id)arg1 ;
-(void)postAWDTSMEndWithParameters:(id)arg1 ;
-(void)postAWDTSMEndOfSession;
-(void)postAWDTSMConnectivityException:(unsigned)arg1 ;
-(void)postAWDVersionInfo:(id)arg1 ;
-(void)postAWDVASSelectOSE:(id)arg1 ;
-(void)postAWDVASGetData:(id)arg1 ;
-(void)postAWDVASTransactionException:(unsigned)arg1 withSWStatus:(unsigned)arg2 ;
-(void)postAWDReaderModeExceptionForType:(unsigned)arg1 withErrorCode:(unsigned)arg2 ;
-(void)postAWDPLLUnlockEvent;
-(void)postAWDMiddlewareException:(unsigned)arg1 errorType:(unsigned)arg2 errorCode:(unsigned)arg3 checkMaxExceptionCounter:(BOOL)arg4 ;
-(NSData *)activeAID;
-(void)setActiveAID:(NSData *)arg1 ;
-(id)generateUUID;
@end

