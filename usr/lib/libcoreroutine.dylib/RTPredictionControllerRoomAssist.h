/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:37:27 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /usr/lib/libcoreroutine.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libcoreroutine.dylib/RTPredictionController.h>

@class RTLocationManager, RTMicroLocation;

@interface RTPredictionControllerRoomAssist : RTPredictionController {

	/*^block*/id _roomPredictionMonitorHandler;
	RTLocationManager* _locationManager;
	RTMicroLocation* _cachedMicroLocation;
	double _timeOfDayAddonWindowDuration;
	double _timeOfDayAddonMidnightOffset;

}

@property (nonatomic,copy) id roomPredictionMonitorHandler;                      //@synthesize roomPredictionMonitorHandler=_roomPredictionMonitorHandler - In the implementation block
@property (nonatomic,retain) RTLocationManager * locationManager;                //@synthesize locationManager=_locationManager - In the implementation block
@property (nonatomic,retain) RTMicroLocation * cachedMicroLocation;              //@synthesize cachedMicroLocation=_cachedMicroLocation - In the implementation block
@property (assign,nonatomic) double timeOfDayAddonWindowDuration;                //@synthesize timeOfDayAddonWindowDuration=_timeOfDayAddonWindowDuration - In the implementation block
@property (assign,nonatomic) double timeOfDayAddonMidnightOffset;                //@synthesize timeOfDayAddonMidnightOffset=_timeOfDayAddonMidnightOffset - In the implementation block
+(id)defaultProviders;
-(void)_unregisterForNotifications;
-(id)init;
-(void)dealloc;
-(RTLocationManager *)locationManager;
-(void)setLocationManager:(RTLocationManager *)arg1 ;
-(void)_setup;
-(void)_registerForNotifications;
-(void)onMicroLocationUpdate:(id)arg1 ;
-(void)stopMonitoringForPredictedRooms;
-(void)printRoomAssistModel:(/*^block*/id)arg1 ;
-(id)initWithExperts:(id)arg1 dataProviders:(id)arg2 defaultsManager:(id)arg3 authorizationManager:(id)arg4 persistenceManager:(id)arg5 dataProtectionManager:(id)arg6 metricManager:(id)arg7 locationTagger:(id)arg8 predictionTable:(id)arg9 ;
-(void)_updateRegisteredDefaults:(/*^block*/id)arg1 ;
-(void)updateValueForKey:(id)arg1 expectedClass:(Class)arg2 handler:(/*^block*/id)arg3 ;
-(void)onDefaultsUpdate:(id)arg1 ;
-(void)__processData:(/*^block*/id)arg1 ;
-(void)_buildExpertsWithHandler:(/*^block*/id)arg1 ;
-(void)_handleErrorWhileProcessingData:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)_processData:(/*^block*/id)arg1 ;
-(void)startMonitoringForPredictedRoomsWithHandler:(/*^block*/id)arg1 ;
-(void)fetchPredictedRoomsAtCurrentLocation:(/*^block*/id)arg1 ;
-(id)initWithExperts:(id)arg1 dataProviders:(id)arg2 defaultsManager:(id)arg3 authorizationManager:(id)arg4 persistenceManager:(id)arg5 dataProtectionManager:(id)arg6 metricManager:(id)arg7 locationTagger:(id)arg8 predictionTable:(id)arg9 locationManager:(id)arg10 ;
-(void)setTimeOfDayAddonWindowDuration:(double)arg1 ;
-(void)setTimeOfDayAddonMidnightOffset:(double)arg1 ;
-(void)_processMicroLocationUpdate:(id)arg1 ;
-(void)setCachedMicroLocation:(RTMicroLocation *)arg1 ;
-(double)timeOfDayAddonWindowDuration;
-(double)timeOfDayAddonMidnightOffset;
-(id)_createExpertsWithFeatureAddonArray:(id)arg1 dataSource:(id)arg2 ;
-(void)predictWithMicroLocation:(id)arg1 limit:(unsigned long long)arg2 minimumConfidence:(double)arg3 handler:(/*^block*/id)arg4 ;
-(RTMicroLocation *)cachedMicroLocation;
-(void)predictWithMicroLocation:(id)arg1 limit:(unsigned long long)arg2 handler:(/*^block*/id)arg3 ;
-(void)setRoomPredictionMonitorHandler:(id)arg1 ;
-(id)roomPredictionMonitorHandler;
@end

