/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:37:28 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /usr/lib/libcoreroutine.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSObject, NSMutableArray, RTDataProtectionManager, RTReachabilityManager, RTDeviceRegistry, NSUUID, RTBatteryManager;

@interface RTTaskScheduler : NSObject {

	BOOL _connected;
	NSObject*<OS_dispatch_queue> _queue;
	NSMutableArray* _tasks;
	RTDataProtectionManager* _dataProtectionManager;
	long long _encryptedDataAvailability;
	RTReachabilityManager* _reachabilityManager;
	long long _reachability;
	RTDeviceRegistry* _deviceRegistry;
	NSUUID* _pairedDeviceIdentifier;
	RTBatteryManager* _batteryManager;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                           //@synthesize queue=_queue - In the implementation block
@property (nonatomic,retain) NSMutableArray * tasks;                                       //@synthesize tasks=_tasks - In the implementation block
@property (nonatomic,retain) RTDataProtectionManager * dataProtectionManager;              //@synthesize dataProtectionManager=_dataProtectionManager - In the implementation block
@property (assign,nonatomic) long long encryptedDataAvailability;                          //@synthesize encryptedDataAvailability=_encryptedDataAvailability - In the implementation block
@property (nonatomic,retain) RTReachabilityManager * reachabilityManager;                  //@synthesize reachabilityManager=_reachabilityManager - In the implementation block
@property (assign,nonatomic) long long reachability;                                       //@synthesize reachability=_reachability - In the implementation block
@property (nonatomic,retain) RTDeviceRegistry * deviceRegistry;                            //@synthesize deviceRegistry=_deviceRegistry - In the implementation block
@property (nonatomic,retain) NSUUID * pairedDeviceIdentifier;                              //@synthesize pairedDeviceIdentifier=_pairedDeviceIdentifier - In the implementation block
@property (nonatomic,retain) RTBatteryManager * batteryManager;                            //@synthesize batteryManager=_batteryManager - In the implementation block
@property (assign,nonatomic) BOOL connected;                                               //@synthesize connected=_connected - In the implementation block
-(id)init;
-(void)dealloc;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSUUID *)pairedDeviceIdentifier;
-(void)setPairedDeviceIdentifier:(NSUUID *)arg1 ;
-(void)setConnected:(BOOL)arg1 ;
-(BOOL)connected;
-(void)setReachability:(long long)arg1 ;
-(long long)reachability;
-(id)scheduleTask:(id)arg1 ;
-(long long)encryptedDataAvailability;
-(RTDataProtectionManager *)dataProtectionManager;
-(void)setEncryptedDataAvailability:(long long)arg1 ;
-(void)setDataProtectionManager:(RTDataProtectionManager *)arg1 ;
-(RTReachabilityManager *)reachabilityManager;
-(void)setReachabilityManager:(RTReachabilityManager *)arg1 ;
-(id)taskForIdentifier:(id)arg1 ;
-(id)unscheduleTask:(id)arg1 ;
-(id)initWithDataProtectionManager:(id)arg1 reachabilityManager:(id)arg2 deviceRegistry:(id)arg3 batteryManager:(id)arg4 ;
-(void)onTaskDependencyUpdate:(id)arg1 ;
-(void)_scheduleTask:(id)arg1 delay:(double)arg2 ;
-(void)_addTask:(id)arg1 ;
-(void)createDispatchTimerForTask:(id)arg1 ;
-(void)_evaluateTasks:(id)arg1 forDependencyType:(long long)arg2 ;
-(id)dependencyState;
-(void)_evaluateTaskDependencies:(long long)arg1 ;
-(void)_onTaskDependencyUpdate:(id)arg1 ;
-(void)evaluateTaskDependencies:(long long)arg1 ;
-(id)scheduleTasks:(id)arg1 ;
-(id)unscheduleTasks:(id)arg1 ;
-(id)allTasks;
-(BOOL)taskScheduled:(id)arg1 ;
-(NSMutableArray *)tasks;
-(void)setTasks:(NSMutableArray *)arg1 ;
-(RTDeviceRegistry *)deviceRegistry;
-(void)setDeviceRegistry:(RTDeviceRegistry *)arg1 ;
-(RTBatteryManager *)batteryManager;
-(void)setBatteryManager:(RTBatteryManager *)arg1 ;
@end

