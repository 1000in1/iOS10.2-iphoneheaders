/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:37:27 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /usr/lib/libcoreroutine.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSObject, RTInvocationDispatcher, RTAuthorizationManager, RTLocationManager, RTDeviceLocationPredictor, RTVisitManager, RTMicroLocation, RTLocationOfInterest;

@interface RTLocationTagger : NSObject {

	BOOL _ready;
	BOOL _realtimeLocationTaggingAllowed;
	BOOL _historicLocationTaggingAllowed;
	NSObject*<OS_dispatch_queue> _queue;
	RTInvocationDispatcher* _dispatcher;
	RTAuthorizationManager* _authorizationManager;
	RTLocationManager* _locationManager;
	RTDeviceLocationPredictor* _deviceLocationPredictor;
	RTVisitManager* _visitManager;
	double _maximumEventLocationTaggingTimeInterval;
	RTMicroLocation* _currentMicroLocation;
	RTLocationOfInterest* _currentLocationOfInterest;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                               //@synthesize queue=_queue - In the implementation block
@property (assign,nonatomic) BOOL ready;                                                       //@synthesize ready=_ready - In the implementation block
@property (nonatomic,retain) RTInvocationDispatcher * dispatcher;                              //@synthesize dispatcher=_dispatcher - In the implementation block
@property (nonatomic,retain) RTAuthorizationManager * authorizationManager;                    //@synthesize authorizationManager=_authorizationManager - In the implementation block
@property (nonatomic,retain) RTLocationManager * locationManager;                              //@synthesize locationManager=_locationManager - In the implementation block
@property (nonatomic,retain) RTDeviceLocationPredictor * deviceLocationPredictor;              //@synthesize deviceLocationPredictor=_deviceLocationPredictor - In the implementation block
@property (nonatomic,retain) RTVisitManager * visitManager;                                    //@synthesize visitManager=_visitManager - In the implementation block
@property (assign,nonatomic) BOOL realtimeLocationTaggingAllowed;                              //@synthesize realtimeLocationTaggingAllowed=_realtimeLocationTaggingAllowed - In the implementation block
@property (assign,nonatomic) BOOL historicLocationTaggingAllowed;                              //@synthesize historicLocationTaggingAllowed=_historicLocationTaggingAllowed - In the implementation block
@property (assign,nonatomic) double maximumEventLocationTaggingTimeInterval;                   //@synthesize maximumEventLocationTaggingTimeInterval=_maximumEventLocationTaggingTimeInterval - In the implementation block
@property (nonatomic,retain) RTMicroLocation * currentMicroLocation;                           //@synthesize currentMicroLocation=_currentMicroLocation - In the implementation block
@property (nonatomic,retain) RTLocationOfInterest * currentLocationOfInterest;                 //@synthesize currentLocationOfInterest=_currentLocationOfInterest - In the implementation block
+(id)sharedInstance;
-(void)_unregisterForNotifications;
-(id)init;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(RTLocationManager *)locationManager;
-(void)setLocationManager:(RTLocationManager *)arg1 ;
-(void)_registerForNotifications;
-(void)shutdown;
-(RTAuthorizationManager *)authorizationManager;
-(void)setAuthorizationManager:(RTAuthorizationManager *)arg1 ;
-(id)initWithAuthorizationManager:(id)arg1 locationManager:(id)arg2 deviceLocationPredictor:(id)arg3 visitManager:(id)arg4 ;
-(void)onMicroLocationUpdate:(id)arg1 ;
-(RTVisitManager *)visitManager;
-(void)onLowConfidenceVisitNotification:(id)arg1 ;
-(void)onMagicalMomentsLocationUsageUpdate:(id)arg1 ;
-(void)onRoutineEnabledUpdate:(id)arg1 ;
-(void)setRealtimeLocationTaggingAllowed:(BOOL)arg1 ;
-(BOOL)realtimeLocationTaggingAllowed;
-(void)setHistoricLocationTaggingAllowed:(BOOL)arg1 ;
-(RTDeviceLocationPredictor *)deviceLocationPredictor;
-(void)setCurrentLocationOfInterest:(RTLocationOfInterest *)arg1 ;
-(RTLocationOfInterest *)currentLocationOfInterest;
-(void)_fetchLowConfidenceVisitIncident:(/*^block*/id)arg1 ;
-(RTInvocationDispatcher *)dispatcher;
-(void)onVisitManagerAvailable:(id)arg1 ;
-(void)_handleLowConfidenceVisitIncident:(id)arg1 ;
-(void)_armLocationTagger;
-(void)setCurrentMicroLocation:(RTMicroLocation *)arg1 ;
-(RTMicroLocation *)currentMicroLocation;
-(void)_disarmLocationTagger;
-(BOOL)ready;
-(BOOL)_validateObject:(id)arg1 ;
-(void)_performTagWithObject:(id)arg1 ;
-(void)tagObjectWithLocation:(id)arg1 handler:(/*^block*/id)arg2 ;
-(id)tagObjectWithLocation:(id)arg1 ;
-(void)setDispatcher:(RTInvocationDispatcher *)arg1 ;
-(void)setDeviceLocationPredictor:(RTDeviceLocationPredictor *)arg1 ;
-(void)setVisitManager:(RTVisitManager *)arg1 ;
-(BOOL)historicLocationTaggingAllowed;
-(double)maximumEventLocationTaggingTimeInterval;
-(void)setMaximumEventLocationTaggingTimeInterval:(double)arg1 ;
-(void)realtimeLocationTaggingAllowed:(/*^block*/id)arg1 ;
-(void)historicalLocationTaggingAllowed:(/*^block*/id)arg1 ;
-(void)tagObject:(id)arg1 withMicroLocationEvents:(id)arg2 minimumProbability:(double)arg3 ;
-(void)tagObject:(id)arg1 withLocationVisitEvents:(id)arg2 ;
-(void)setReady:(BOOL)arg1 ;
@end

