/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:54:57 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/Frameworks/HealthKit.framework/HealthKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HealthKit/HealthKit-Structs.h>
#import <HealthKit/HKSample.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSDateComponents, HKQuantity, NSDate;

@interface HKActivityCache : HKSample <NSCopying> {

	long long _cacheIndex;
	NSDateComponents* _dateComponents;
	long long _stepCount;
	long long _pushCount;
	long long _wheelchairUse;
	double _deepBreathingDuration;
	HKQuantity* _energyBurned;
	double _briskMinutes;
	double _activeHours;
	HKQuantity* _energyBurnedGoal;
	NSDate* _energyBurnedGoalDate;
	HKQuantity* _walkingAndRunningDistance;
	long long _flightsClimbed;
	long long _activeEnergyBurnedAnchor;
	long long _activeHoursAnchor;
	long long _briskMinutesAnchor;
	long long _energyBurnedGoalAnchor;
	long long _stepCountAnchor;
	long long _walkingAndRunningDistanceAnchor;
	long long _pushCountAnchor;
	long long _flightsClimbedAnchor;
	long long _workoutAnchor;
	long long _deepBreathingSessionAnchor;
	unsigned long long _knownFields;

}

@property (setter=_setCacheIndex:) long long cacheIndex; 
@property (setter=_setEnergyBurned:,retain) HKQuantity * energyBurned; 
@property (setter=_setBriskMinutes:) double briskMinutes; 
@property (setter=_setActiveHours:) double activeHours; 
@property (setter=_setEnergyBurnedGoal:,retain) HKQuantity * energyBurnedGoal; 
@property (setter=_setStepCount:) long long stepCount; 
@property (setter=_setDeepBreathingDuration:) double deepBreathingDuration; 
@property (setter=_setWalkingAndRunningDistance:,retain) HKQuantity * walkingAndRunningDistance; 
@property (setter=_setPushCount:) long long pushCount; 
@property (setter=_setWheelchairUse:) long long wheelchairUse; 
@property (setter=_setFlightsClimbed:) long long flightsClimbed; 
@property (setter=_setActiveEnergyBurnedAnchor:) long long activeEnergyBurnedAnchor; 
@property (setter=_setActiveHoursAnchor:) long long activeHoursAnchor; 
@property (setter=_setBriskMinutesAnchor:) long long briskMinutesAnchor; 
@property (setter=_setEnergyBurnedGoalAnchor:) long long energyBurnedGoalAnchor; 
@property (setter=_setStepCountAnchor:) long long stepCountAnchor; 
@property (setter=_setWalkingAndRunningDistanceAnchor:) long long walkingAndRunningDistanceAnchor; 
@property (setter=_setPushCountAnchor:) long long pushCountAnchor; 
@property (setter=_setWorkoutAnchor:) long long workoutAnchor; 
@property (setter=_setDeepBreathingSessionAnchor:) long long deepBreathingSessionAnchor; 
@property (setter=_setFlightsClimbedAnchor:) long long flightsClimbedAnchor; 
@property (setter=_setKnownFields:) unsigned long long knownFields; 
@property (readonly) NSDateComponents * dateComponents; 
@property (readonly) BOOL hasDateComponents; 
@property (readonly) BOOL hasEnergyBurned; 
@property (readonly) BOOL hasBriskMinutes; 
@property (readonly) BOOL hasActiveHours; 
@property (readonly) NSDate * energyBurnedGoalDate; 
@property (readonly) BOOL hasEnergyBurnedGoal; 
@property (readonly) double briskMinutesGoal; 
@property (readonly) BOOL hasBriskMinutesGoal; 
@property (readonly) double activeHoursGoal; 
@property (readonly) BOOL hasActiveHoursGoal; 
@property (readonly) double energyBurnedGoalPercentage; 
@property (readonly) BOOL hasEnergyBurnedGoalPercentage; 
@property (readonly) double briskMinutesGoalPercentage; 
@property (readonly) BOOL hasBriskMinutesGoalPercentage; 
@property (readonly) double activeHoursGoalPercentage; 
@property (readonly) BOOL hasActiveHoursGoalPercentage; 
@property (readonly) BOOL hasStepCount; 
@property (readonly) BOOL hasWalkingAndRunningDistance; 
@property (readonly) BOOL hasPushCount; 
@property (readonly) BOOL hasWheelchairUse; 
@property (readonly) BOOL hasDeepBreathingDuration; 
@property (readonly) BOOL hasFlightsClimbed; 
+(BOOL)supportsSecureCoding;
+(BOOL)_isConcreteObjectClass;
+(id)_newActivityCacheWithStartDate:(id)arg1 endDate:(id)arg2 dateComponents:(id)arg3 energyBurned:(id)arg4 energyBurnedGoal:(id)arg5 walkingAndRunningDistance:(id)arg6 metadata:(id)arg7 ;
+(id)_newActivityCacheWithUUID:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 dateComponents:(id)arg4 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)reset;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSDateComponents *)dateComponents;
-(long long)stepCount;
-(id)_valueDescription;
-(double)energyBurnedGoalPercentage;
-(double)briskMinutesGoalPercentage;
-(double)activeHoursGoalPercentage;
-(BOOL)hasEnergyBurnedGoalPercentage;
-(BOOL)hasBriskMinutesGoalPercentage;
-(BOOL)hasActiveHoursGoalPercentage;
-(BOOL)hasDateComponents;
-(long long)_minQuantityAnchor;
-(long long)_minCategoryAnchor;
-(void)_setQuantityAnchor:(long long)arg1 ;
-(void)_setCategoryAnchor:(long long)arg1 ;
-(unsigned long long)knownFields;
-(void)_setKnownFields:(unsigned long long)arg1 ;
-(BOOL)hasEnergyBurned;
-(BOOL)hasBriskMinutes;
-(BOOL)hasActiveHours;
-(BOOL)hasStepCount;
-(BOOL)hasEnergyBurnedGoal;
-(BOOL)hasWalkingAndRunningDistance;
-(BOOL)hasDeepBreathingDuration;
-(BOOL)hasPushCount;
-(BOOL)hasFlightsClimbed;
-(BOOL)hasWheelchairUse;
-(long long)cacheIndex;
-(HKQuantity *)energyBurned;
-(double)briskMinutes;
-(double)activeHours;
-(HKQuantity *)energyBurnedGoal;
-(HKQuantity *)walkingAndRunningDistance;
-(NSDate *)energyBurnedGoalDate;
-(long long)activeEnergyBurnedAnchor;
-(long long)activeHoursAnchor;
-(long long)briskMinutesAnchor;
-(long long)stepCountAnchor;
-(long long)walkingAndRunningDistanceAnchor;
-(long long)workoutAnchor;
-(long long)energyBurnedGoalAnchor;
-(double)deepBreathingDuration;
-(long long)deepBreathingSessionAnchor;
-(long long)pushCount;
-(long long)pushCountAnchor;
-(long long)flightsClimbed;
-(long long)flightsClimbedAnchor;
-(long long)wheelchairUse;
-(double)activeHoursGoal;
-(double)briskMinutesGoal;
-(double)_energyBurnedInKilocalories;
-(double)_energyBurnedGoalInKilocalories;
-(double)_walkingAndRunningDistanceInMeters;
-(void)_setEnergyBurnedGoal:(id)arg1 ;
-(void)_setStepCount:(long long)arg1 ;
-(void)_setFlightsClimbed:(long long)arg1 ;
-(void)_setWalkingAndRunningDistance:(id)arg1 ;
-(void)_setEnergyBurned:(id)arg1 ;
-(void)_setActiveHours:(double)arg1 ;
-(void)_setBriskMinutes:(double)arg1 ;
-(void)_setEnergyBurnedGoalDateOnly:(id)arg1 ;
-(void)_setPushCount:(long long)arg1 ;
-(void)_setWheelchairUse:(long long)arg1 ;
-(void)_setDeepBreathingDuration:(double)arg1 ;
-(BOOL)_isEqualToActivityCache:(id)arg1 ;
-(BOOL)hasBriskMinutesGoal;
-(BOOL)hasActiveHoursGoal;
-(void)_setCacheIndex:(long long)arg1 ;
-(void)_setEnergyBurnedGoal:(id)arg1 date:(id)arg2 ;
-(void)_setActiveEnergyBurnedAnchor:(long long)arg1 ;
-(void)_setActiveHoursAnchor:(long long)arg1 ;
-(void)_setBriskMinutesAnchor:(long long)arg1 ;
-(void)_setEnergyBurnedGoalAnchor:(long long)arg1 ;
-(void)_setStepCountAnchor:(long long)arg1 ;
-(void)_setFlightsClimbedAnchor:(long long)arg1 ;
-(void)_setWalkingAndRunningDistanceAnchor:(long long)arg1 ;
-(void)_setEnergyBurnedGoalOnly:(id)arg1 ;
-(void)_setWorkoutAnchor:(long long)arg1 ;
-(void)_setDeepBreathingSessionAnchor:(long long)arg1 ;
-(void)_setPushCountAnchor:(long long)arg1 ;
@end

