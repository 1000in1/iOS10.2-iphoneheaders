/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:54:57 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/Frameworks/HealthKit.framework/HealthKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSNumber, NSString, NSTimeZone, NSDictionary;

@interface _HKBehavior : NSObject {

	NSNumber* _overridenAreSwimmingSessionsAvailable;
	BOOL _isDeviceSupported;
	BOOL _isAppleInternalInstall;
	BOOL _isAppleWatch;
	BOOL _isCompanionCapable;
	BOOL _hasTelephonyCapability;
	BOOL _isCoachingEventLoggingEnabled;
	BOOL _requestsRemoteAuthorization;
	BOOL _canCreateSources;
	BOOL _shouldPruneOldSamples;
	BOOL _isTestingDevice;
	NSString* _hostWriteAuthorizationUsageDescription;
	NSString* _hostReadAuthorizationUsageDescription;

}

@property (assign,nonatomic) BOOL isDeviceSupported;                                       //@synthesize isDeviceSupported=_isDeviceSupported - In the implementation block
@property (assign,nonatomic) BOOL isAppleInternalInstall;                                  //@synthesize isAppleInternalInstall=_isAppleInternalInstall - In the implementation block
@property (assign,nonatomic) BOOL isAppleWatch;                                            //@synthesize isAppleWatch=_isAppleWatch - In the implementation block
@property (assign,nonatomic) BOOL isCompanionCapable;                                      //@synthesize isCompanionCapable=_isCompanionCapable - In the implementation block
@property (assign,nonatomic) BOOL hasTelephonyCapability;                                  //@synthesize hasTelephonyCapability=_hasTelephonyCapability - In the implementation block
@property (assign,nonatomic) BOOL isTestingDevice;                                         //@synthesize isTestingDevice=_isTestingDevice - In the implementation block
@property (assign,nonatomic) BOOL areSwimmingSessionsAvailable; 
@property (assign,nonatomic) BOOL isCoachingEventLoggingEnabled;                           //@synthesize isCoachingEventLoggingEnabled=_isCoachingEventLoggingEnabled - In the implementation block
@property (assign,nonatomic) BOOL requestsRemoteAuthorization;                             //@synthesize requestsRemoteAuthorization=_requestsRemoteAuthorization - In the implementation block
@property (assign,nonatomic) BOOL canCreateSources;                                        //@synthesize canCreateSources=_canCreateSources - In the implementation block
@property (assign,nonatomic) BOOL shouldPruneOldSamples;                                   //@synthesize shouldPruneOldSamples=_shouldPruneOldSamples - In the implementation block
@property (nonatomic,copy) NSString * hostWriteAuthorizationUsageDescription;              //@synthesize hostWriteAuthorizationUsageDescription=_hostWriteAuthorizationUsageDescription - In the implementation block
@property (nonatomic,copy) NSString * hostReadAuthorizationUsageDescription;               //@synthesize hostReadAuthorizationUsageDescription=_hostReadAuthorizationUsageDescription - In the implementation block
@property (nonatomic,copy,readonly) NSString * currentDeviceDisplayName; 
@property (nonatomic,copy,readonly) NSString * currentDeviceName; 
@property (nonatomic,copy,readonly) NSString * currentDeviceManufacturer; 
@property (nonatomic,copy,readonly) NSString * currentInternalDeviceModel; 
@property (nonatomic,copy,readonly) NSString * currentDeviceClass; 
@property (nonatomic,copy,readonly) NSString * currentDeviceProductType; 
@property (nonatomic,copy,readonly) NSString * currentOSBuild; 
@property (nonatomic,copy,readonly) NSString * currentOSVersion; 
@property (nonatomic,copy,readonly) NSTimeZone * localTimeZone; 
@property (nonatomic,readonly) NSDictionary * currentDiskUsage; 
@property (nonatomic,readonly) unsigned long long totalDiskCapacity; 
@property (nonatomic,readonly) unsigned long long currentDiskSpaceAvailable; 
+(BOOL)hasTelephonyCapability;
+(id)currentDeviceName;
+(id)currentDeviceManufacturer;
+(id)currentDeviceClass;
+(id)behaviorQueue;
+(BOOL)_isDeviceSupported;
+(BOOL)_isAppleInternalInstall;
+(BOOL)_hasTelephonyCapability;
+(BOOL)_shouldShowBuddy;
+(BOOL)_hasCompletedBuddy;
+(BOOL)_isSkipBuddyEnabled;
+(BOOL)_isForceBuddyEnabled;
+(void)setSharedBehavior:(id)arg1 ;
+(id)activePairedWatchWithoutSOSMedicalIDContactsSupport;
+(void)resetSharedBehavior;
+(BOOL)shouldShowBuddy;
+(BOOL)hasCompletedBuddy;
+(void)disableSkipBuddy;
+(void)disableForceBuddy;
+(BOOL)isAppleInternalInstall;
+(BOOL)allPairedWatchesMeetMinimumVersion:(int)arg1 ;
+(BOOL)isTestingDevice;
+(id)currentOSBuild;
+(BOOL)isDeviceSupported;
+(id)sharedBehavior;
+(BOOL)isCompanionCapable;
+(id)currentDeviceProductType;
+(id)currentDeviceDisplayName;
+(id)currentOSVersion;
+(BOOL)currentlyPairedWatchMeetsMinimumVersion:(int)arg1 ;
+(BOOL)hasPairedWatch;
+(BOOL)anyPairedWatchHasSOSModeCapability;
+(int)protocolVersionForNRDevice:(id)arg1 ;
+(BOOL)isRunningStoreDemoMode;
-(id)init;
-(NSTimeZone *)localTimeZone;
-(BOOL)hasTelephonyCapability;
-(BOOL)areSwimmingSessionsAvailable;
-(NSString *)hostWriteAuthorizationUsageDescription;
-(NSString *)hostReadAuthorizationUsageDescription;
-(NSString *)currentDeviceName;
-(NSString *)currentDeviceManufacturer;
-(NSString *)currentDeviceClass;
-(NSDictionary *)currentDiskUsage;
-(void)setAreSwimmingSessionsAvailable:(BOOL)arg1 ;
-(void)setIsDeviceSupported:(BOOL)arg1 ;
-(void)setIsAppleInternalInstall:(BOOL)arg1 ;
-(void)setIsAppleWatch:(BOOL)arg1 ;
-(void)setIsCompanionCapable:(BOOL)arg1 ;
-(void)setHasTelephonyCapability:(BOOL)arg1 ;
-(BOOL)isCoachingEventLoggingEnabled;
-(void)setIsCoachingEventLoggingEnabled:(BOOL)arg1 ;
-(void)setRequestsRemoteAuthorization:(BOOL)arg1 ;
-(void)setCanCreateSources:(BOOL)arg1 ;
-(void)setShouldPruneOldSamples:(BOOL)arg1 ;
-(void)setIsTestingDevice:(BOOL)arg1 ;
-(void)setHostWriteAuthorizationUsageDescription:(NSString *)arg1 ;
-(void)setHostReadAuthorizationUsageDescription:(NSString *)arg1 ;
-(BOOL)isAppleWatch;
-(BOOL)isAppleInternalInstall;
-(BOOL)isTestingDevice;
-(NSString *)currentOSBuild;
-(BOOL)isDeviceSupported;
-(BOOL)isCompanionCapable;
-(BOOL)shouldPruneOldSamples;
-(NSString *)currentDeviceProductType;
-(NSString *)currentDeviceDisplayName;
-(NSString *)currentInternalDeviceModel;
-(NSString *)currentOSVersion;
-(unsigned long long)totalDiskCapacity;
-(unsigned long long)currentDiskSpaceAvailable;
-(BOOL)requestsRemoteAuthorization;
-(BOOL)canCreateSources;
@end

