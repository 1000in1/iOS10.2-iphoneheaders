/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:54:41 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/Frameworks/CallKit.framework/CallKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue, CXCallDirectoryExtensionManagerDelegate;
@class CXCallDirectoryManager, NSObject, NSArray;

@interface CXCallDirectoryExtensionManager : NSObject {

	CXCallDirectoryManager* _manager;
	NSObject*<OS_dispatch_queue> _queue;
	id<CXCallDirectoryExtensionManagerDelegate> _delegate;
	NSObject*<OS_dispatch_queue> _delegateQueue;
	id _extensionMatchingContext;
	NSArray* _nsExtensions;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                                       //@synthesize queue=_queue - In the implementation block
@property (assign,nonatomic,__weak) id<CXCallDirectoryExtensionManagerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> delegateQueue;                               //@synthesize delegateQueue=_delegateQueue - In the implementation block
@property (nonatomic,retain) id extensionMatchingContext;                                              //@synthesize extensionMatchingContext=_extensionMatchingContext - In the implementation block
@property (setter=setNSExtensions:,nonatomic,retain) NSArray * nsExtensions;                           //@synthesize nsExtensions=_nsExtensions - In the implementation block
@property (nonatomic,readonly) CXCallDirectoryManager * manager;                                       //@synthesize manager=_manager - In the implementation block
@property (nonatomic,copy,readonly) NSArray * extensions; 
-(id)init;
-(void)setDelegate:(id<CXCallDirectoryExtensionManagerDelegate>)arg1 ;
-(void)dealloc;
-(id<CXCallDirectoryExtensionManagerDelegate>)delegate;
-(NSObject*<OS_dispatch_queue>)delegateQueue;
-(void)setDelegateQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id)extensionMatchingContext;
-(void)setExtensionMatchingContext:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSArray *)extensions;
-(CXCallDirectoryManager *)manager;
-(void)setDelegate:(id)arg1 queue:(id)arg2 ;
-(id)extensionWithIdentifier:(id)arg1 ;
-(void)extensionWithIdentifier:(id)arg1 inContainingAppWithProcessIdentifier:(int)arg2 completion:(/*^block*/id)arg3 ;
-(void)_beginMatchingExtensionsIfNecessary;
-(id)_baseExtensionMatchingAttributes;
-(void)setNSExtensions:(id)arg1 ;
-(NSArray *)nsExtensions;
-(id)_extensionsFromNSExtensions:(id)arg1 ;
-(id)_prioritizedExtensionsFromUnprioritizedExtensions:(id)arg1 usingProrities:(id)arg2 ;
-(void)extensionsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)_extensionsUpdated;
-(void)_nsExtensionForIdentifier:(id)arg1 containingAppBundleURL:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)setPrioritizedExtensionIdentifiers:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)beginMatchingExtensions;
-(void)prioritizedExtensionsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)setEnabled:(BOOL)arg1 forExtension:(id)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)isOnlyExtensionInContainingApp:(id)arg1 ;
@end

