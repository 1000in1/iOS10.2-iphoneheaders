/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:54:51 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/Frameworks/EventKit.framework/EventKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <EventKit/EKObject.h>

@class NSString, EKCalendar, NSURL, NSDate, NSTimeZone, NSArray;

@interface EKCalendarItem : EKObject {

	BOOL _haveCachedActionsState;
	unsigned long long _actionsStateCachedValue;

}

@property (nonatomic,readonly) NSString * UUID; 
@property (nonatomic,retain) EKCalendar * calendar; 
@property (nonatomic,readonly) NSString * calendarItemIdentifier; 
@property (nonatomic,readonly) NSString * calendarItemExternalIdentifier; 
@property (nonatomic,copy) NSString * title; 
@property (nonatomic,copy) NSString * location; 
@property (nonatomic,copy) NSString * notes; 
@property (nonatomic,copy) NSURL * URL; 
@property (nonatomic,readonly) NSDate * lastModifiedDate; 
@property (nonatomic,readonly) NSDate * creationDate; 
@property (nonatomic,copy) NSTimeZone * timeZone; 
@property (nonatomic,readonly) BOOL hasAlarms; 
@property (nonatomic,readonly) BOOL hasRecurrenceRules; 
@property (nonatomic,readonly) BOOL hasAttendees; 
@property (nonatomic,readonly) BOOL hasNotes; 
@property (nonatomic,readonly) NSArray * attendees; 
@property (nonatomic,copy) NSArray * alarms; 
@property (nonatomic,copy) NSArray * recurrenceRules; 
-(void)setTitle:(NSString *)arg1 ;
-(id)description;
-(NSString *)title;
-(id)action;
-(void)setTimeZone:(NSTimeZone *)arg1 ;
-(BOOL)isEditable;
-(NSURL *)URL;
-(void)setURL:(NSURL *)arg1 ;
-(unsigned long long)priority;
-(void)setPriority:(unsigned long long)arg1 ;
-(NSString *)UUID;
-(void)setAction:(id)arg1 ;
-(BOOL)isFloating;
-(NSString *)location;
-(NSTimeZone *)timeZone;
-(void)setCalendar:(EKCalendar *)arg1 ;
-(EKCalendar *)calendar;
-(void)setLocation:(NSString *)arg1 ;
-(id)attachments;
-(void)setAppLink:(id)arg1 ;
-(id)appLink;
-(int)sequenceNumber;
-(void)setAllDay:(BOOL)arg1 ;
-(void)setLastModifiedDate:(NSDate *)arg1 ;
-(id)lazyLoadRelationForKey:(id)arg1 ;
-(id)externalModificationTag;
-(void)setExternalModificationTag:(id)arg1 ;
-(BOOL)hasAlarms;
-(BOOL)rebase;
-(id)_persistentItem;
-(BOOL)hasNotes;
-(id)_locationRelation;
-(id)_clientLocationRelation;
-(id)_startLocationRelation;
-(id)calendarScale;
-(void)setCalendarScale:(id)arg1 ;
-(BOOL)isOrganizedBySharedCalendarOwner;
-(id)_alarmsRelation;
-(BOOL)_excludeAlarmDueToConnectionTrigger:(id)arg1 ;
-(id)findOriginalAlarmStartingWith:(id)arg1 ;
-(id)allAlarms;
-(id)_recurrencesRelation;
-(id)_attendeesRelation;
-(id)_selfAttendeeRelation;
-(id)_organizerRelation;
-(id)sharedItemCreatedByFirstName;
-(id)sharedItemCreatedByLastName;
-(id)sharedItemModifiedByFirstName;
-(id)sharedItemModifiedByLastName;
-(id)_attachmentsRelation;
-(id)contactIdentifiers;
-(void)rebaseWithOldPCI:(id)arg1 newPCI:(id)arg2 ;
-(void)setOrganizer:(id)arg1 ;
-(id)originalItem;
-(void)moveToCalendar:(id)arg1 ;
-(void)_moveToCalendarInternal:(id)arg1 ;
-(BOOL)isOnlyAlarmAcknowledgedPropertyDirty;
-(unsigned)modifiedProperties;
-(void)setModifiedProperties:(unsigned)arg1 ;
-(BOOL)defaultAlarmWasDeleted;
-(void)setDefaultAlarmWasDeleted:(BOOL)arg1 ;
-(BOOL)allowsCalendarModifications;
-(BOOL)allowsAlarmModifications;
-(void)setAllAlarms:(id)arg1 ;
-(void)snoozeAlarm:(id)arg1 withTimeIntervalFromNow:(double)arg2 ;
-(void)snoozeAlarm:(id)arg1 withLocation:(id)arg2 proximity:(long long)arg3 ;
-(BOOL)isAlarmAcknowledgedPropertyDirty;
-(void)removeAcknowledgedSnoozedAlarms;
-(void)removeAllSnoozedAlarms;
-(void)removeRecurrenceRule:(id)arg1 ;
-(id)attendeeForMe;
-(id)participantMatchingContact:(id)arg1 ;
-(void)setSharedItemCreatedByDisplayName:(id)arg1 ;
-(void)setSharedItemCreatedByAddress:(id)arg1 ;
-(void)setSharedItemCreatedByFirstName:(id)arg1 ;
-(void)setSharedItemCreatedByLastName:(id)arg1 ;
-(void)setSharedItemCreatedDate:(id)arg1 ;
-(id)sharedItemCreatedTimeZone;
-(void)setSharedItemCreatedTimeZone:(id)arg1 ;
-(void)setSharedItemModifiedByDisplayName:(id)arg1 ;
-(void)setSharedItemModifiedByEmailAddress:(id)arg1 ;
-(void)setSharedItemModifiedByFirstName:(id)arg1 ;
-(void)setSharedItemModifiedByLastName:(id)arg1 ;
-(void)setSharedItemModifiedDate:(id)arg1 ;
-(id)sharedItemModifiedTimeZone;
-(void)setSharedItemModifiedTimeZone:(id)arg1 ;
-(void)setContactIdentifiers:(id)arg1 ;
-(BOOL)canMoveToCalendar:(id)arg1 error:(id*)arg2 ;
-(void)updateWithAppLink:(id)arg1 usedSelectedText:(BOOL*)arg2 ;
-(void)_updateModifiedAlarmByAcknowledging;
-(NSDate *)lastModifiedDate;
-(void)setExternalID:(id)arg1 ;
-(id)clientLocation;
-(NSString *)calendarItemExternalIdentifier;
-(NSString *)notes;
-(void)setNotes:(NSString *)arg1 ;
-(id)preferredLocation;
-(id)startTimeZone;
-(id)endTimeZone;
-(BOOL)isAllDay;
-(void)setStartTimeZone:(id)arg1 ;
-(void)setEndTimeZone:(id)arg1 ;
-(BOOL)hasRecurrenceRules;
-(id)startDateForRecurrence;
-(id)organizer;
-(NSArray *)attendees;
-(BOOL)hasAttendees;
-(BOOL)isSelfOrganized;
-(void)removeAttendee:(id)arg1 ;
-(BOOL)isExternallyOrganizedInvitation;
-(void)setAttendees:(NSArray *)arg1 ;
-(id)externalID;
-(BOOL)allowsAttendeesModifications;
-(void)addAttendee:(id)arg1 ;
-(id)selfAttendee;
-(id)externalURI;
-(id)structuredLocation;
-(id)travelStartLocation;
-(void)setTravelStartLocation:(id)arg1 ;
-(unsigned long long)actionsState;
-(NSString *)calendarItemIdentifier;
-(id)sharedItemModifiedByDisplayName;
-(id)sharedItemModifiedDate;
-(id)sharedItemCreatedByDisplayName;
-(id)sharedItemCreatedDate;
-(id)sharedItemModifiedByEmailAddress;
-(id)sharedItemCreatedByEmailAddress;
-(id)exportToICS;
-(NSArray *)alarms;
-(void)setAlarms:(NSArray *)arg1 ;
-(void)setStructuredLocation:(id)arg1 ;
-(id)sortedAlarms;
-(long long)indexForAlarm:(id)arg1 ;
-(void)addAlarm:(id)arg1 ;
-(NSArray *)recurrenceRules;
-(long long)selfParticipantStatus;
-(BOOL)isSelfOrganizedInvitation;
-(void)removeAlarm:(id)arg1 ;
-(BOOL)canMoveToCalendar:(id)arg1 fromCalendar:(id)arg2 error:(id*)arg3 ;
-(BOOL)requiresDetach;
-(BOOL)allowsSpansOtherThanThisEvent;
-(void)setClientLocation:(id)arg1 ;
-(BOOL)allowsRecurrenceModifications;
-(void)setRecurrenceRules:(NSArray *)arg1 ;
-(void)addRecurrenceRule:(id)arg1 ;
-(NSDate *)creationDate;
-(void)setCreationDate:(NSDate *)arg1 ;
-(BOOL)validate:(id*)arg1 ;
@end

