/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:56:36 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <AVConference/AVConference-Structs.h>
@class NSArray;

@interface VCAudioPayload : NSObject {

	SoundDec_t* encoder;
	int payload;
	unsigned _codecSamplesPerFrame;
	unsigned blockSize;
	unsigned _codecSampleRate;
	unsigned _inputSampleRate;
	double _srcRatio;
	unsigned ttyBlockSize;
	unsigned encodedBytesPerFrame;
	unsigned bundleHeaderBytes;
	unsigned bitrate;
	NSArray* supportedBitrates;
	BOOL canBundle;
	BOOL canSetBitrate;
	BOOL forcingBitrate;
	BOOL useSBR;
	BOOL shouldReset;
	BOOL shouldLimitMaxPacketSize;
	BOOL dtxEnabled;
	BOOL payloadOctetAligned;
	int format;
	unsigned internalBundleFactor;

}

@property (nonatomic,readonly) int payload; 
@property (nonatomic,readonly) unsigned samplesPerFrame; 
@property (nonatomic,readonly) unsigned blockSize; 
@property (nonatomic,readonly) unsigned encodedBytesPerFrame; 
@property (nonatomic,readonly) unsigned bundleHeaderBytes; 
@property (nonatomic,readonly) unsigned bitrate; 
@property (nonatomic,readonly) NSArray * supportedBitrates; 
@property (nonatomic,readonly) BOOL canBundle; 
@property (nonatomic,readonly) BOOL useCookie; 
@property (assign,nonatomic) BOOL useSBR; 
@property (assign,nonatomic) unsigned sampleRate;                          //@synthesize codecSampleRate=_codecSampleRate - In the implementation block
@property (assign,nonatomic) BOOL dtxEnabled; 
@property (assign,nonatomic) BOOL payloadOctetAligned; 
+(BOOL)isPayloadSupported:(int)arg1 ;
+(unsigned)blockSizeForPayload:(int)arg1 ;
-(void)dealloc;
-(int)payload;
-(void)setSampleRate:(unsigned)arg1 ;
-(unsigned)sampleRate;
-(BOOL)useSBR;
-(void)setUseSBR:(BOOL)arg1 ;
-(unsigned)samplesPerFrame;
-(void)setPayloadOctetAligned:(BOOL)arg1 ;
-(BOOL)createEncoderWithInputFormat:(AudioStreamBasicDescription*)arg1 ;
-(unsigned)encodedBytesPerFrame;
-(void)resetEncoderWithSampleBuffer:(char*)arg1 numBytes:(int)arg2 ;
-(int)encodeAudio:(void*)arg1 numInputBytes:(int)arg2 outputBytes:(void*)arg3 numOutputBytes:(int)arg4 ;
-(BOOL)setBitrate:(unsigned)arg1 ;
-(void)setInternalBundleSamples:(unsigned)arg1 ;
-(id)initWithPayload:(int)arg1 blockSize:(unsigned)arg2 ;
-(unsigned)bitrate;
-(BOOL)dtxEnabled;
-(unsigned)blockSize;
-(BOOL)useCookie;
-(BOOL)getMagicCookie:(char*)arg1 withLength:(unsigned*)arg2 ;
-(BOOL)canBundle;
-(unsigned)bundleHeaderBytes;
-(void)resetEncoder;
-(float)qualityForBitRate:(unsigned)arg1 ;
-(void)setInputSampleRate:(unsigned)arg1 ;
-(BOOL)payloadOctetAligned;
-(BOOL)setupInputProperties;
-(BOOL)setupEncodeProperties;
-(BOOL)isDtxEmptyPacket:(unsigned)arg1 ;
-(NSArray *)supportedBitrates;
-(void)createSupportedBitrates;
-(unsigned)aacBitrate;
-(void)createSupportedBitratesForAACELD;
-(void)createSupportedBitratesForOpus;
-(void)createSupportedBitratesForAMR8k;
-(void)createSupportedBitratesForAMR16k;
-(void)setDtxEnabled:(BOOL)arg1 ;
-(unsigned)flags;
@end

