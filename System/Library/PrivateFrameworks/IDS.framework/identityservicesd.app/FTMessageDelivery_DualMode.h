/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:56:51 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/identityservicesd.app/identityservicesd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <identityservicesd/FTMessageDeliveryProtocol.h>
#import <libobjc.A.dylib/FTMessageQueueDelegate.h>

@class NSString, NSNumber, IDSBaseMessage, NSArray, FTMessageDelivery, FTMessageQueue;

@interface FTMessageDelivery_DualMode : NSObject <FTMessageDeliveryProtocol, FTMessageQueueDelegate> {

	FTMessageDelivery* _httpDelivery;
	FTMessageDelivery* _apsDelivery;
	FTMessageQueue* _dualModeQueue;
	NSString* _userAgent;
	NSNumber* _protocolVersion;

}

@property (setter=setUserAgent:,nonatomic,copy) NSString * userAgent;                          //@synthesize userAgent=_userAgent - In the implementation block
@property (setter=setProtocolVersion:,nonatomic,copy) NSNumber * protocolVersion;              //@synthesize protocolVersion=_protocolVersion - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) BOOL hasQueuedItems; 
@property (readonly) BOOL busy; 
@property (assign) BOOL retryInAirplaneMode; 
@property (assign) BOOL logToRegistration; 
@property (readonly) IDSBaseMessage * currentMessage; 
@property (readonly) NSArray * queuedMessages; 
@property (readonly) NSArray * allMessages; 
@property (readonly) long long maxMessageSize; 
@property (readonly) long long maxLargeMessageSize; 
@property (assign) unsigned long long maxConcurrentMessages; 
-(BOOL)_isInBackoffMode;
-(long long)_randomPercentageChanceForDualDelivery;
-(void)dequeueMessageIfNeeded;
-(BOOL)_shouldUseDuelDeliveryForMessage:(id)arg1 ;
-(void)handleTranslationAndDeliveryOnAPS:(id)arg1 ;
-(void)_enterBackOffMode;
-(id)initWithPreferedType:(long long)arg1 ;
-(void)invalidate;
-(NSString *)userAgent;
-(void)setUserAgent:(NSString *)arg1 ;
-(void)setProtocolVersion:(NSNumber *)arg1 ;
-(NSNumber *)protocolVersion;
-(NSArray *)queuedMessages;
-(void)queue:(id)arg1 hitTimeoutForMessage:(id)arg2 ;
-(BOOL)sendMessage:(id)arg1 ;
@end

