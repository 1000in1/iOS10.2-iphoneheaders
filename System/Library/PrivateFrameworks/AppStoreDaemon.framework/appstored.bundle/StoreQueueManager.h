/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:55:54 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/AppStoreDaemon.framework/appstored.bundle/appstored
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <appstored/appstored-Structs.h>
@class NSObject, NSNumber, ISOperationQueue, PerformStaleAutoUpdatesOperation, NSOperationQueue;

@interface StoreQueueManager : NSObject {

	BOOL _automaticDownloadsAreDisabled;
	NSObject*<OS_dispatch_queue> _callbackQueue;
	BOOL _checkAutomaticDownloadQueueOnEnable;
	NSObject*<OS_dispatch_queue> _dispatchQueue;
	BOOL _isRunning;
	NSNumber* _lastCheckedAccountID;
	ISOperationQueue* _operationQueue;
	PerformStaleAutoUpdatesOperation* _staleAutoUpdatesOperation;
	NSOperationQueue* _queue;

}
+(void)reportAnonymousPings:(id)arg1 ;
+(id)sharedInstance;
-(void)noteUpdatesStateChanged;
-(void)noteUpdatesStateChangedWithCompletion:(/*^block*/id)arg1 ;
-(void)postBulletinForInstalledUpdates;
-(void)reloadUpdatesWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)resetBackgroundTaskJobs;
-(void)showPendingUpdatesBadge;
-(BOOL)autoDownloadsEnabled;
-(void)hidePendingUpdatesBadge;
-(void)reloadUpdatesWithReason:(long long)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)checkQueue:(long long)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)getDownloadQueueWithType:(long long)arg1 completionBlock:(/*^block*/id)arg2 ;
-(BOOL)_shouldPerformAutomaticUpdates;
-(void)_performBackgroundCheckForJobName:(id)arg1 ;
-(void)_adjustCellularPolicyForAutoUpdates;
-(void)_promptForCellularAutoUpdates;
-(void)_reloadApplicationBadge;
-(void)_mergeQueueDownloads:(id)arg1 isAutoDownloadQueueRequest:(BOOL)arg2 storeCorrelationID:(id)arg3 ;
-(void)_dispatchCallbackAsync:(/*^block*/id)arg1 ;
-(id)_createClaimAppJobs:(id)arg1 URLResponse:(id)arg2 accountID:(id)arg3 purchaseID:(id)arg4 ;
-(void)_getUpdateableFirstPartyAppMetadataWithCompletion:(/*^block*/id)arg1 ;
-(void)_getUpdatesWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)_disableForcedBadge;
-(void)_sendChangeNotification;
-(id)_updateTitleForStoreItemData:(id)arg1 ;
-(BOOL)_shouldShowApplicationBadge;
-(long long)_readUpdateCount;
-(void)_setBadgeWithCount:(long long)arg1 ;
-(void)_reloadUpdatesWithReason:(long long)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)_resetBackgroundTaskJobs;
-(void)_showPendingUpdatesBadgeWithOverride:(BOOL)arg1 ;
-(void)_performBackgroundSoftwareUpdateCheckIfNeeded;
-(void)_setLastSoftwareUpdateCheckDate:(id)arg1 ;
-(double)_checkIntervalWithDefault:(double)arg1 bagKeys:(id)arg2 defaultsKey:(CFStringRef)arg3 ;
-(id)_jobForStoreItem:(id)arg1 accountID:(id)arg2 accountName:(id)arg3 ;
-(void)_performBackgroundSoftwareUpdateCheck;
-(double)_backgroundSoftwareUpdateCheckInterval;
-(double)_backgroundSoftwareUpdateCheckIntervalCellular;
-(void)_mergeAvailableUpdates:(id)arg1 reason:(long long)arg2 withCompletionBlock:(/*^block*/id)arg3 ;
-(id)_nextCheckDateWithInterval:(double)arg1 ;
-(void)_addUpdateCheckJobWithDate:(id)arg1 identifier:(id)arg2 allowsCellular:(BOOL)arg3 ;
-(void)_setCheckInterval:(double)arg1 forDefaultsKey:(CFStringRef)arg2 ;
-(void)disableAutomaticDownloadsWithReason:(id)arg1 ;
-(void)enableAutomaticDownloadsWithReason:(id)arg1 ;
-(BOOL)shouldPerformAutomaticUpdates;
-(void)verifyPendingUpdates:(id)arg1 ;
-(void)_setLastCheckedAccountID:(id)arg1 ;
-(void)_setSoftwareUpdateCheckInterval:(double)arg1 ;
-(void)_setSoftwareUpdateCheckIntervalCellular:(double)arg1 ;
-(void)_dispatchAsync:(/*^block*/id)arg1 ;
-(void)clearExpiredUpdateHistoryWithCompletionBlock:(/*^block*/id)arg1 ;
-(id)init;
-(void)stop;
-(void)start;
-(id)_bag;
-(id)_operationQueue;
-(void)getUpdatesWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)removeAllBulletins;
-(void)getUpdateableFirstPartyAppMetadataWithCompletion:(/*^block*/id)arg1 ;
-(void)refreshUpdateCountWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)updateAll:(/*^block*/id)arg1 ;
-(void)migrateUpdatesStoreWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)claimApplicationsWithOptions:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)managedApplicationRequestWithOptions:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)repairApplicationWithOptions:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
@end

