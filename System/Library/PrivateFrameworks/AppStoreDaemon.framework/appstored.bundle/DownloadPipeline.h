/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:55:53 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/AppStoreDaemon.framework/appstored.bundle/appstored
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSURLSessionDataDelegate.h>
#import <libobjc.A.dylib/ISOperationDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class ISOperationQueue, EventBus, DaemonDatabase, NSMutableSet, NSObject, SSMetricsController, NSMutableDictionary, NSMutableOrderedSet, NSMapTable, NSString;

@interface DownloadPipeline : NSObject <NSURLSessionDataDelegate, ISOperationDelegate> {

	ISOperationQueue* _authenticationChallengeQueue;
	ISOperationQueue* _backgroundOperationQueue;
	EventBus* _bus;
	DaemonDatabase* _database;
	NSMutableSet* _dirtyTaskStates;
	NSMutableSet* _downloadHandlerSessions;
	NSObject*<OS_dispatch_queue> _eventQueue;
	BOOL _holdingKeepAliveAssertion;
	SSMetricsController* _metricsController;
	NSMutableDictionary* _pendingInstallations;
	NSMutableOrderedSet* _preparationDownloadIDs;
	ISOperationQueue* _preparationOperationQueue;
	ISOperationQueue* _processingOperationQueue;
	NSObject*<OS_dispatch_source> _progressTimer;
	NSObject*<OS_dispatch_source> _reconnectTimer;
	NSMapTable* _taskStates;
	NSMutableDictionary* _urlSessions;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)_shouldCollectAppInstallationMetrics;
+(id)_metricsAppInstallEventsWithDownloadIDs:(id)arg1 installStatus:(unsigned long long)arg2 inDatabase:(id)arg3 ;
+(unsigned long long)_metricsAppInstallStatusForDownloadResult:(long long)arg1 ;
+(id)_metricsAppInstallEventsWithDownloadIDs:(id)arg1 installStatus:(unsigned long long)arg2 error:(id)arg3 inDatabase:(id)arg4 ;
+(unsigned long long)_metricsAppInstallTypeForJobType:(long long)arg1 ;
-(BOOL)_shouldSuppressDialogForError:(id)arg1 ;
-(void)_insertEventsIntoDatabase:(id)arg1 ;
-(void)_prepareDownloadsMatchingPredicate:(id)arg1 filtersExistingTasks:(BOOL)arg2 ;
-(void)_reloadKeepAliveAssertion;
-(id)restartDownloadsWithIdentifiers:(id)arg1 ;
-(void)addDownloadsWithIdentifiers:(id)arg1 ;
-(void)_startProgressTimer;
-(void)_processDownloadWithTaskState:(id)arg1 databaseTransaction:(id)arg2 ;
-(void)_attemptRecoveryForDownloadWithTaskState:(id)arg1 databaseSession:(id)arg2 ;
-(void)_processDownloadFailureWithTaskState:(id)arg1 cancelReason:(long long)arg2 ;
-(void)_failDownloadWithIdentifier:(long long)arg1 error:(id)arg2 transaction:(id)arg3 ;
-(void)_performDefaultHandlingForAuthenticationChallenge:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_setDownloadState:(id)arg1 forDownloadID:(long long)arg2 databaseTransaction:(id)arg3 ;
-(id)_applicationBundleIdentifierForDownloadIdentifier:(long long)arg1 databaseTransaction:(id)arg2 ;
-(void)_finishRecoveryWithOperation:(id)arg1 response:(id)arg2 ;
-(BOOL)_hasAutomaticUpdateTasks;
-(void)_finishDownloadWithOperation:(id)arg1 response:(id)arg2 ;
-(void)_resumePendingInstallForDownloadID:(long long)arg1 inSession:(id)arg2 ;
-(void)_finishPrepareOperationWithResponse:(id)arg1 ;
-(void)_finishDownloadWithTaskState:(id)arg1 databaseSession:(id)arg2 ;
-(void)reconnectWithURLSessionTasks;
-(void)_commitProgressTimer;
-(void)applyChangeset:(id)arg1 ;
-(void)applyExternalChangeset:(id)arg1 ;
-(BOOL)hasActiveTaskForDownloadIDs:(id)arg1 ;
-(void)prioritizeDownloadWithIdentifier:(id)arg1 ;
-(void)stopDownloadsWithIdentifiers:(id)arg1 reason:(long long)arg2 ;
-(id)_authenticationChallengeQueue;
-(void)URLSession:(id)arg1 _willRetryBackgroundDataTask:(id)arg2 withError:(id)arg3 ;
-(void)dealloc;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 task:(id)arg2 _willSendRequestForEstablishedConnection:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)initWithDescriptor:(id)arg1 ;
-(void)operation:(id)arg1 updatedProgress:(id)arg2 ;
-(void)_scheduleReconnect;
-(void)_handleEvent:(id)arg1 ;
@end

