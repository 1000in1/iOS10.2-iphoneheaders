/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:58:32 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSFastEnumeration.h>

@class NSMutableArray;

@interface TSCEUidTractList : NSObject <NSCopying, NSFastEnumeration> {

	unsigned char _stickyBits;
	NSMutableArray* _tracts;

}

@property (assign,nonatomic) unsigned char stickyBits;              //@synthesize stickyBits=_stickyBits - In the implementation block
-(id)includedUidsTract;
-(void)addToExcludedUidsTractRowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(void)addToExcludedUidsTractColumnUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(void)dropTract:(id)arg1 ;
-(void)addToIncludedUidsTractColumnUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 rowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 isRangeRef:(BOOL)arg3 ;
-(id)activeUidTract;
-(void)addToIncludedUidsTractColumnUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 rowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 ;
-(void)setStickyBits:(unsigned char)arg1 ;
-(unsigned char)stickyBits;
-(id)preMoveRegionUidTract;
-(BOOL)remapUsingUidMap:(const UUIDMap<TSP::UUIDMap>*)arg1 ;
-(void)appendUidTract:(id)arg1 ;
-(BOOL)remapUsingColumnUidMap:(const UUIDMap<TSP::UUIDMap>*)arg1 rowUidMap:(const UUIDMap<TSP::UUIDMap>*)arg2 clearIfMissing:(BOOL)arg3 ;
-(id)firstTractWithPurpose:(unsigned char)arg1 ;
-(void)addTractAtFront:(id)arg1 ;
-(id)excludedUidsTract;
-(void)removeFromExcludedUidsTractColumnUidsSet:(const unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(void)removeFromExcludedUidsTractRowUidsSet:(const unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(unsigned char)tractCount;
-(id)preMergeUidTract;
-(void)addToIncludedUidsTractColumnUid:(const UUIDData<TSP::UUIDData>*)arg1 rowUid:(const UUIDData<TSP::UUIDData>*)arg2 ;
-(void)removeFromExcludedUidsTractColumnUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(void)removeFromExcludedUidsTractRowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(id)uidTractAtIndex:(unsigned char)arg1 ;
-(void)pruneMergeUidTractsAtAndAboveIndex:(unsigned char)arg1 ;
-(unsigned long long)countByEnumeratingWithState:(SCD_Struct_TS23*)arg1 objects:(id*)arg2 count:(unsigned long long)arg3 ;
-(void)dealloc;
-(id)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)saveToArchive:(ASTNodeArrayArchive_ASTUidTractList*)arg1 ;
-(id)initWithArchive:(const ASTNodeArrayArchive_ASTUidTractList*)arg1 ;
@end

