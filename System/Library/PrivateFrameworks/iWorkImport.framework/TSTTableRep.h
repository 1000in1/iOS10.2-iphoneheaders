/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:58:37 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSWPTextHostRep.h>
#import <UIKit/UITextFieldDelegate.h>

@protocol TSTTableAnimationController, TSTTableChromeProvider, TSTCanvasReferenceController, TSTTableRepDelegate, TSTTableKnobTrackerVisitorProtocol;
@class NSMutableArray, TSTTableCellTextEditingRep, TSTTableReferences, CAShapeLayer, CALayer, TSTCellSelection, TSTSelectionDragController, TSDKnobTracker, NSSet, TSWPStorage, TSWPHyperlinkField, TSKHighlightArrayController, TSTSearchReference, NSMutableDictionary, TSTTableInfo, TSTTableModel, TSTLayout, TSTMasterLayout, TSTAnimation, NSString;

@interface TSTTableRep : TSWPTextHostRep <UITextFieldDelegate> {

	CGRect mCanvasVisibleRect;
	CGRect mSearchSelectionBounds;
	double mCurrentScreenScale;
	TSUCellRect mDirtyCellRange;
	BOOL mRecursivelyDrawingInContext;
	NSMutableArray* mAnimationStack;
	id<TSTTableAnimationController> mAnimationController;
	TSTTableCellTextEditingRep* mContainedTextEditingRep;
	TSUCellCoord mRatingsDragCellID;
	id<TSTTableChromeProvider> mTableChrome;
	TSTTableReferences* mReferences;
	CAShapeLayer* mHighlightedHyperlinkLayer;
	BOOL mIsAspectOperationInProgress;
	BOOL mIsZoomOperationInProgress;
	BOOL mIsZoomToEditOperationInProgress;
	TSUCellRect mZoomToEditVisibleCellRange;
	CAShapeLayer* mFindSelectionHighlightLayer;
	CALayer* mTableCollaboratorCursorLayer;
	TSTCellSelection* mSourceFillSelection;
	TSTCellSelection* mTargetFillSelection;
	BOOL mWPEndedTableNameEditing;
	BOOL _settingSelection;
	TSTSelectionDragController* mCellDragController;
	BOOL mSelectionDragAbortedOnNewSelection;
	BOOL mDragByHandleOnly;
	BOOL mSelectionUsesBezierPath;
	BOOL mSelectsCellOnInitialTap;
	BOOL mUsesWholeChromeResizer;
	id<TSTCanvasReferenceController> mCanvasReferenceController;
	id<TSTTableRepDelegate> mDelegate;
	TSDKnobTracker*<TSTTableKnobTrackerVisitorProtocol> mVisitorKnobTracker;
	NSSet* mVisibleFillKnobs;
	TSUCellCoord mEditingHyperlinkCellID;
	TSWPStorage* mHyperlinkParentStorage;
	BOOL mHyperlinkModified;
	BOOL mInspectingHyperlinkInEditingStorage;
	TSWPHyperlinkField* mHyperlinkField;
	CAShapeLayer* mCellEditingMaskLayer;
	TSKHighlightArrayController* mBodyHighlightArrayController;
	TSKHighlightArrayController* mFrozenCornerHighlightArrayController;
	TSKHighlightArrayController* mFrozenColumnsHighlightArrayController;
	TSKHighlightArrayController* mFrozenRowsHighlightArrayController;
	TSKHighlightArrayController* mBodyPulseArrayController;
	TSKHighlightArrayController* mFrozenCornerPulseArrayController;
	TSKHighlightArrayController* mFrozenColumnsPulseArrayController;
	TSKHighlightArrayController* mFrozenRowsPulseArrayController;
	TSTSearchReference* mPreviousSearchReference;
	BOOL mTableNameValid;
	NSMutableDictionary* mChildTextReps;

}

@property (assign,nonatomic) TSTSelectionDragController * cellDragController; 
@property (assign,nonatomic) TSUCellCoord ratingsDragCellID; 
@property (nonatomic,retain) NSMutableDictionary * childTextReps; 
@property (assign,getter=isTableNameValid,nonatomic) BOOL tableNameValid; 
@property (nonatomic,readonly) TSTTableInfo * tableInfo; 
@property (nonatomic,readonly) TSTTableModel * tableModel; 
@property (nonatomic,readonly) TSTLayout * tableLayout; 
@property (nonatomic,readonly) TSTMasterLayout * masterLayout; 
@property (assign,nonatomic) id<TSTTableAnimationController> animationController; 
@property (nonatomic,readonly) id<TSTTableRepDelegate> delegate; 
@property (nonatomic,readonly) CGAffineTransform transformToCanvas; 
@property (nonatomic,readonly) CGAffineTransform transformFromCanvas; 
@property (nonatomic,readonly) CGRect canvasVisibleRect; 
@property (nonatomic,readonly) id<TSTTableChromeProvider> tableChrome; 
@property (nonatomic,readonly) id<TSTCanvasReferenceController> canvasReferenceController; 
@property (nonatomic,readonly) TSTCellSelection * selection; 
@property (nonatomic,readonly) long long selectionType; 
@property (nonatomic,readonly) BOOL isZoomToEditOperationInProgress; 
@property (nonatomic,readonly) TSTAnimation * currentAnimation; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2 mixingTypeContext:(id)arg3 ;
+(unsigned long long)p_countOfIdenticalCellsBetweenOutgoingTableModel:(id)arg1 incomingTableModel:(id)arg2 ;
+(Class)tableRepDelegateClass;
-(TSTTableModel *)tableModel;
-(id)hyperlinkRegions;
-(id)initWithLayout:(id)arg1 canvas:(id)arg2 ;
-(void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(BOOL)arg3 ;
-(void)updateFromLayout;
-(CGRect)layerFrameInScaledCanvas;
-(void)setTextureStage:(unsigned long long)arg1 ;
-(BOOL)canDrawInParallel;
-(id)textureForContext:(id)arg1 ;
-(id)hitRep:(CGPoint)arg1 ;
-(id)hitRepChrome:(CGPoint)arg1 ;
-(id)childReps;
-(void)addAdditionalChildLayersToArray:(id)arg1 ;
-(void)recursivelyDrawInContext:(CGContextRef)arg1 ;
-(void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 ;
-(void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2 ;
-(void)recursivelyPerformSelector:(SEL)arg1 ;
-(void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2 ;
-(id)repForDragging;
-(void)updateChildrenFromLayout;
-(TSTMasterLayout *)masterLayout;
-(TSTTableInfo *)tableInfo;
-(CGAffineTransform)transformToCanvas;
-(CGAffineTransform)transformFromCanvas;
-(id)editorSelection;
-(NSMutableDictionary *)childTextReps;
-(TSTAnimation *)currentAnimation;
-(void)setChildTextReps:(NSMutableDictionary *)arg1 ;
-(BOOL)p_shouldPerformOnChildTextReps:(SEL)arg1 ;
-(CGRect)deviceBoundsForCellRange:(TSUCellRect)arg1 ;
-(TSUCellCoord)p_cellIDForHyperlinkField:(id)arg1 ;
-(id)p_columnForCellID:(TSUCellCoord)arg1 ;
-(CGAffineTransform)p_horizontalAlignmentTransformForHyperlinkWithBounds:(CGRect)arg1 inCell:(TSUCellCoord)arg2 ;
-(CGRect)naturalBoundsRectForHyperlinkField:(id)arg1 ;
-(void)validateVisibleRect;
-(BOOL)isTableNameValid;
-(void)setTableNameValid:(BOOL)arg1 ;
-(id<TSTTableChromeProvider>)tableChrome;
-(CGRect)canvasVisibleRect;
-(BOOL)mustDrawOnMainThreadForInteractiveCanvas;
-(void)pushAnimation:(id)arg1 ;
-(void)popAnimation;
-(void)p_removeObservers;
-(void)p_addObservers;
-(void)asyncPostTextChangedInRange:(TSUCellRect)arg1 ;
-(void)invalidateEditingCell;
-(CGRect)canvasBoundsForCellRange:(TSUCellRect)arg1 ;
-(CGRect)boundsForCellSelection:(TSUCellCoord)arg1 ;
-(void)contentsRectForCellRangeAcrossSpaces:(TSUCellRect)arg1 contentsCenterInfo:(SCD_Struct_TS637*)arg2 canvasFrame:(CGRect*)arg3 contentsRect:(CGRect*)arg4 ;
-(id)hyperlinkContainerRep;
-(void)validateStrokesInEditingSpillingTextRange;
-(void)willUpdateLayer:(id)arg1 ;
-(BOOL)isFullyVisibleWithBorder:(int)arg1 ;
-(void)screenScaleDidChange;
-(void)updateDynamicModeForEditingSpillText;
-(BOOL)wantsActivityLine;
-(void)didDrawCellImageFill:(id)arg1 inCellRange:(TSUCellRect)arg2 ;
-(id)overlayLayers;
-(CGRect)p_alignedLayerFrameForLayoutSpace:(id)arg1 transform:(CGAffineTransform)arg2 ;
-(void)validateFrozenHeaderCorner;
-(void)validateFrozenHeaderRows;
-(void)validateFrozenHeaderColumns;
-(void)validateFrozenHeaderTableBodyMask;
-(void)invalidateFrozenHeaders;
-(BOOL)canDrawInBackgroundDuringScroll;
-(id)p_textImageForPath:(CGPathRef)arg1 shouldPulsate:(BOOL)arg2 ;
-(id<TSTCanvasReferenceController>)canvasReferenceController;
-(TSTSelectionDragController *)cellDragController;
-(void)setCellDragController:(TSTSelectionDragController *)arg1 ;
-(TSUCellCoord)ratingsDragCellID;
-(void)setRatingsDragCellID:(TSUCellCoord)arg1 ;
-(BOOL)isZoomToEditOperationInProgress;
-(TSTLayout *)tableLayout;
-(void)dealloc;
-(NSString *)description;
-(id<TSTTableRepDelegate>)delegate;
-(void)setAnimationController:(id<TSTTableAnimationController>)arg1 ;
-(id<TSTTableAnimationController>)animationController;
-(void)drawLayer:(id)arg1 inContext:(CGContextRef)arg2 ;
-(id)actionForLayer:(id)arg1 forKey:(id)arg2 ;
-(TSTCellSelection *)selection;
-(void)drawInContext:(CGContextRef)arg1 ;
-(void)willBeRemoved;
-(long long)selectionType;
-(BOOL)isDraggable;
-(void)viewScaleDidChange;
@end

