/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:58:36 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_semaphore;
#import <iWorkImport/iWorkImport-Structs.h>
@class TSUWeakReference, NSCondition, NSMutableDictionary, NSMutableArray, NSObject;

@interface TSKAccessController : NSObject {

	TSUWeakReference* _delegate;
	opaque_pthread_rwlock_t _rwLock;
	BOOL _secondaryThreadWriting;
	BOOL _thenReadingOnMainThread;
	NSCondition* _cond;
	NSMutableDictionary* _signalIdentifiers;
	NSMutableDictionary* _waitIdentifiers;
	CFRunLoopSourceRef _mainThreadPingSource;
	NSMutableArray* _pendingMainThreadInvocations;
	SCD_Struct_TS571* _readerInfo[64];
	SCD_Struct_TS570 _mainThreadTicketInfo;
	unsigned _readerCount;
	NSMutableArray* _writerQueue;
	NSObject*<OS_dispatch_semaphore> _outstandingTicketReadLock;
	unsigned _outstandingTicketCount;
	BOOL _writeLockHeld;
	unsigned long long _writeBlockedMainThreadCount;
	unsigned long long _mainThreadWriteCount;

}
-(void)performReadAllowingOverlappingImplicitRead:(SEL)arg1 thenWrite:(SEL)arg2 thenReadOnMainThread:(SEL)arg3 withTarget:(id)arg4 argument:(void*)arg5 passReadResultToMainThreadRead:(BOOL)arg6 ;
-(void)signalIdentifier:(id)arg1 ;
-(BOOL)hasRead;
-(BOOL)waitOnIdentifier:(id)arg1 untilDate:(id)arg2 releaseReadWhileWaiting:(BOOL)arg3 ;
-(void)performRead:(/*^block*/id)arg1 ;
-(void)performWrite:(/*^block*/id)arg1 blockMainThread:(BOOL)arg2 ;
-(BOOL)hasWrite;
-(void)performRead:(SEL)arg1 withTarget:(id)arg2 argument:(void*)arg3 ;
-(void)performReadWithTicket:(id)arg1 block:(/*^block*/id)arg2 ;
-(BOOL)p_hasRead;
-(BOOL)p_isMainThread;
-(void)p_readUnlock;
-(BOOL)p_hasWrite;
-(BOOL)p_waitWithCondition:(id)arg1 untilDate:(id)arg2 ;
-(void)p_signalThread:(id)arg1 ;
-(void)p_willAcquireReadLock;
-(void)p_readLock;
-(SCD_Struct_TS570*)p_ticketInfoForCurrentThread;
-(void)p_finishReadForTicketInfo:(SCD_Struct_TS570*)arg1 ;
-(void)i_startReadForTicket:(id)arg1 ;
-(void)p_readLockTakingRealLock:(BOOL)arg1 ;
-(void)p_readUnlockReleasingRealLock:(BOOL)arg1 ;
-(void)i_finishReadForTicket:(id)arg1 ;
-(SCD_Struct_TS570*)p_ticketInfoForTicket:(id)arg1 ;
-(void)p_willAcquireWriteLock;
-(void)p_enqueueWriteAndBlock;
-(void)p_writeLockAndBlockMainThread:(BOOL)arg1 ;
-(void)p_writeUnlock;
-(void)p_unblockMainThread;
-(void)p_dequeueWrite;
-(void)performWrite:(/*^block*/id)arg1 ;
-(void)performRead:(SEL)arg1 thenWrite:(SEL)arg2 thenReadOnMainThread:(SEL)arg3 withTarget:(id)arg4 argument:(void*)arg5 ;
-(void)p_performRead:(SEL)arg1 eagerlyBlockingMainThread:(BOOL)arg2 thenWrite:(SEL)arg3 thenReadOnMainThread:(SEL)arg4 withTarget:(id)arg5 argument:(void*)arg6 passReadResultToMainThreadRead:(BOOL)arg7 ;
-(void)p_blockMainThread;
-(void)p_scheduleMainThreadRead:(id)arg1 ;
-(void)p_signalMainThreadWriteComplete;
-(void)p_didAcquireReadLock;
-(id)p_threadIdentifier;
-(void)p_willRelinquishReadLock;
-(void)waitOnIdentifier:(id)arg1 ;
-(void)p_didAcquireWriteLock;
-(void)p_blockMainThreadForWrite;
-(void)p_asyncPerformSelectorOnMainThread:(SEL)arg1 withTarget:(id)arg2 argument:(void*)arg3 ;
-(void)p_willRelinquishWriteLock;
-(void)performRead:(SEL)arg1 withTarget:(id)arg2 argument:(void*)arg3 argument2:(void*)arg4 ;
-(void)p_performReadOnMainThread:(id)arg1 ;
-(void)p_flushPendingMainThreadBlocksQueueAcquiringLock:(BOOL)arg1 ;
-(void)spinMainThreadRunLoopUntil:(SEL)arg1 onTarget:(id)arg2 ;
-(void)performReadGrantingTicket:(/*^block*/id)arg1 ;
-(void)performWrite:(SEL)arg1 withTarget:(id)arg2 argument:(void*)arg3 ;
-(void)performRead:(SEL)arg1 thenReadOnMainThread:(SEL)arg2 withTarget:(id)arg3 argument:(void*)arg4 ;
-(void)performRead:(SEL)arg1 thenWrite:(SEL)arg2 thenReadOnMainThread:(SEL)arg3 withTarget:(id)arg4 argument:(void*)arg5 passReadResultToMainThreadRead:(BOOL)arg6 ;
-(BOOL)currentThreadHasWriteLock;
-(id)init;
-(void)dealloc;
-(id)initWithDelegate:(id)arg1 ;
@end

