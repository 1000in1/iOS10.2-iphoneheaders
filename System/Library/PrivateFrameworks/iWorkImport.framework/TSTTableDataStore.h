/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:58:37 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSPContainedObject.h>

@class TSTTileIDKeyDict, TSTTableHeaderStorage, TSPLazyReference, TSTTableDataList, TSKCustomFormatList, NSMutableDictionary, TSTMergeRegionMap;

@interface TSTTableDataStore : TSPContainedObject {

	TSTTableRBTreeNode_s* mColumnTileIndex;
	TSTTableRBTreeNode_s* mRowTileIndex;
	TSTTileIDKeyDict* mTileStorage;
	TSTTableHeaderStorage* mRowHeaderStorage;
	TSPLazyReference* mColumnHeaderStorageReference;
	TSPLazyReference* mConditionalStyleSetTableReference;
	TSPLazyReference* mStringTableReference;
	TSTTableDataList* mStyleTableList;
	TSPLazyReference* mFormulaTableReference;
	TSPLazyReference* mFormulaErrorTableReference;
	TSPLazyReference* mRichTextPayloadTableReference;
	TSPLazyReference* mFormatTableReference;
	TSTTableDataList* mMultipleChoiceListFormatTableList;
	TSPLazyReference* mCommentStorageTableReference;
	TSPLazyReference* mImportWarningSetTableReference;
	TSKCustomFormatList* mPasteboardCustomFormatList;
	NSMutableDictionary* mPasteboardCustomFormatMap;
	unsigned short mNextRowStripID;
	unsigned short mNextColumnStripID;
	TSTMergeRegionMap* mMergedCellRanges;
	unsigned mCellCount;
	BOOL mCellCountValid;
	unsigned char mStorageVersion;

}

@property (nonatomic,readonly) TSTTableDataList * conditionalStyleSetDataList; 
@property (nonatomic,readonly) TSTTableDataList * stringDataList; 
@property (nonatomic,readonly) TSTTableDataList * styleDataList; 
@property (nonatomic,readonly) TSTTableDataList * formulaDataList; 
@property (nonatomic,readonly) TSTTableDataList * formulaErrorDataList; 
@property (nonatomic,readonly) TSTTableDataList * richTextPayloadDataList; 
@property (nonatomic,readonly) TSTTableDataList * formatDataList; 
@property (nonatomic,readonly) TSTTableDataList * multipleChoiceListFormatDataList; 
@property (nonatomic,readonly) TSTTableDataList * commentStorageDataList; 
@property (nonatomic,readonly) TSTTableDataList * importWarningSetDataList; 
@property (nonatomic,readonly) BOOL hasPasteboardCustomFormats; 
-(BOOL)hasPasteboardCustomFormats;
-(void)copyPasteboardCustomFormatsFromDataStore:(id)arg1 ;
-(BOOL)needToUpgradeCellStorage;
-(void)upgradeDataStoreCellStorage;
-(void)upgradeStyleDataLists;
-(id)initWithArchive:(const DataStore*)arg1 unarchiver:(id)arg2 owner:(id)arg3 ;
-(void)saveToArchive:(DataStore*)arg1 archiver:(id)arg2 isInTheDocument:(BOOL)arg3 ;
-(void)setStorageParentToInfo:(id)arg1 ;
-(BOOL)hasFormulaAtCellID:(TSUCellCoord)arg1 ;
-(TSTTableDataList *)commentStorageDataList;
-(id)indicesForValueOrCommentCellsInRange:(TSUCellRect)arg1 ;
-(TSTTableDataList *)richTextPayloadDataList;
-(TSTTableDataList *)formulaDataList;
-(TSTTableDataList *)conditionalStyleSetDataList;
-(id)addPasteboardCustomFormat:(id)arg1 toDocument:(id)arg2 updatingPasteboardFormat:(BOOL)arg3 ;
-(void)clearPasteboardCustomFormatMap;
-(TSTTableDataList *)formatDataList;
-(void)remapPasteboardCustomFormatKeys:(id)arg1 ;
-(TSUCellCoord)cellIDForCellWithRichTextStorage:(id)arg1 inRange:(TSUCellRect)arg2 ;
-(void)enumerateTilesAtNode:(TSTTableRBTreeNode_s*)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)enumerateTilesConcurrentlyUsingBlock:(/*^block*/id)arg1 andWaitForAsyncBlocks:(BOOL)arg2 ;
-(void)enumerateCellStoragesInRange:(TSUCellRect)arg1 withBlock:(/*^block*/id)arg2 ;
-(TSTTableDataList *)styleDataList;
-(TSTTableDataList *)multipleChoiceListFormatDataList;
-(TSTTableDataList *)stringDataList;
-(TSTTableDataList *)formulaErrorDataList;
-(TSTTableDataList *)importWarningSetDataList;
-(id)p_pasteboardCustomFormatList;
-(id)p_pasteboardCustomFormatMap;
-(void)p_updateTileStorageToCurrentVersion;
-(void)enumerateRowHeaderInfosWithBlock:(/*^block*/id)arg1 ;
-(void)enumerateColumnHeaderInfosWithBlock:(/*^block*/id)arg1 ;
-(void)enumerateTilesInRowRange:(NSRange)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)reorganizeValueForStorage:(TSTCellStorage*)arg1 outValue:(TSTCellReorganizeValue*)arg2 ;
-(void)gatherReorganizeValuesForColumn:(unsigned char)arg1 rowRange:(NSRange)arg2 outValues:(TSTCellReorganizeValue*)arg3 ;
-(void)makePasteboardCustomFormatList;
-(void)debugDump;
-(void)dealloc;
-(void)validate;
-(id)initWithOwner:(id)arg1 ;
@end

