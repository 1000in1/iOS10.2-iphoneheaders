/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:56:44 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/HDQueryServerDelegate.h>
#import <libobjc.A.dylib/HDDiagnosticObject.h>
#import <libobjc.A.dylib/HDProcessStateObserver.h>
#import <libobjc.A.dylib/HDUnitPreferencesManagerObserver.h>
#import <libobjc.A.dylib/HDDeepBreathingSessionServerDelegate.h>
#import <libobjc.A.dylib/HDServerPrivate.h>
#import <libobjc.A.dylib/HDServer.h>

@protocol HDServer <HDServerInterface>
@required
-(void)invalidate;
-(void)start;
-(id)firstPartyWorkoutSnapshot;
-(void)pauseActiveWorkoutsWithCompletion:(/*^block*/id)arg1;
-(void)deliverWorkoutSessionError:(id)arg1 forSessionUUID:(id)arg2;
-(void)deliverWorkoutSessionChangedToState:(long long)arg1 fromState:(long long)arg2 date:(id)arg3 forSessionUUID:(id)arg4;
-(void)deliverWorkoutEvent:(id)arg1 forSessionUUID:(id)arg2;

@end


@protocol OS_dispatch_source, OS_dispatch_queue;
@class NSMutableDictionary, NSMutableSet, NSObject, NSString, HDDaemon, HDProfile, HKServerConfiguration, HDClient, HDDatabase, HDDataCollectionManager, HDAuthorizationServer, HDFitnessFriendsServer, HDHealthServicesServer, HDMedicalIDServer, HDNanoSyncServer, HDUtilityServer, HDWorkoutServer;

@interface HDServer : NSObject <HDQueryServerDelegate, HDDiagnosticObject, HDProcessStateObserver, HDUnitPreferencesManagerObserver, HDDeepBreathingSessionServerDelegate, HDServerPrivate, HDServer> {

	NSMutableDictionary* _queryServersByUUID;
	NSMutableDictionary* _deepBreathingSessionServersByUUID;
	NSMutableSet* _activeSeriesSamples;
	NSMutableSet* _processStateObservingQueryServerUUIDs;
	BOOL _processStateSuspended;
	NSObject*<OS_dispatch_source> _clientTransactionTimer;
	NSString* _clientSourceVersion;
	HDDaemon* _daemon;
	HDProfile* _profile;
	HKServerConfiguration* _configuration;
	HDClient* _client;
	HDDatabase* _database;
	NSObject*<OS_dispatch_queue> _queue;
	HDDataCollectionManager* _dataCollectMgr;
	HDAuthorizationServer* _authorizationServer;
	NSString* _serverID;
	NSString* _clientDebuggingIdentifier;
	NSMutableSet* _subservers;
	HDFitnessFriendsServer* _fitnessFriendsServer;
	HDHealthServicesServer* _healthServicesServer;
	HDMedicalIDServer* _medicalIDServer;
	HDNanoSyncServer* _nanoSyncServer;
	HDUtilityServer* _utilityServer;
	HDWorkoutServer* _workoutServer;

}

@property (nonatomic,retain) HDClient * client;                                          //@synthesize client=_client - In the implementation block
@property (nonatomic,retain) HDDataCollectionManager * dataCollectMgr;                   //@synthesize dataCollectMgr=_dataCollectMgr - In the implementation block
@property (nonatomic,retain) HDAuthorizationServer * authorizationServer;                //@synthesize authorizationServer=_authorizationServer - In the implementation block
@property (nonatomic,retain) NSString * serverID;                                        //@synthesize serverID=_serverID - In the implementation block
@property (nonatomic,retain) NSString * clientDebuggingIdentifier;                       //@synthesize clientDebuggingIdentifier=_clientDebuggingIdentifier - In the implementation block
@property (nonatomic,retain) NSMutableSet * subservers;                                  //@synthesize subservers=_subservers - In the implementation block
@property (nonatomic,retain) HDFitnessFriendsServer * fitnessFriendsServer;              //@synthesize fitnessFriendsServer=_fitnessFriendsServer - In the implementation block
@property (nonatomic,retain) HDHealthServicesServer * healthServicesServer;              //@synthesize healthServicesServer=_healthServicesServer - In the implementation block
@property (nonatomic,retain) HDMedicalIDServer * medicalIDServer;                        //@synthesize medicalIDServer=_medicalIDServer - In the implementation block
@property (nonatomic,retain) HDNanoSyncServer * nanoSyncServer;                          //@synthesize nanoSyncServer=_nanoSyncServer - In the implementation block
@property (nonatomic,retain) HDUtilityServer * utilityServer;                            //@synthesize utilityServer=_utilityServer - In the implementation block
@property (nonatomic,retain) HDWorkoutServer * workoutServer;                            //@synthesize workoutServer=_workoutServer - In the implementation block
@property (nonatomic,__weak,readonly) HDDaemon * daemon;                                 //@synthesize daemon=_daemon - In the implementation block
@property (nonatomic,__weak,readonly) HDProfile * profile;                               //@synthesize profile=_profile - In the implementation block
@property (nonatomic,readonly) HKServerConfiguration * configuration;                    //@synthesize configuration=_configuration - In the implementation block
@property (nonatomic,readonly) HDDatabase * database;                                    //@synthesize database=_database - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> queue;                       //@synthesize queue=_queue - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(void)invalidate;
-(void)start;
-(HKServerConfiguration *)configuration;
-(NSObject*<OS_dispatch_queue>)queue;
-(HDDatabase *)database;
-(HDClient *)client;
-(HDDaemon *)daemon;
-(void)queryServer:(id)arg1 requestsAuthorizationForSamples:(id)arg2 completion:(/*^block*/id)arg3 ;
-(HDProfile *)profile;
-(void)_finishIfNeeded:(id)arg1 ;
-(void)_performIfAuthorizedToSaveObjects:(id)arg1 usingBlock:(/*^block*/id)arg2 errorHandler:(/*^block*/id)arg3 ;
-(void)_performIfAuthorizedToDeleteObjects:(id)arg1 usingBlock:(/*^block*/id)arg2 errorHandler:(/*^block*/id)arg3 ;
-(void)_finishSeriesBuilder:(id)arg1 ;
-(void)_saveLocationSeriesData:(id)arg1 withSeriesSample:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_finishLocationSeries:(id)arg1 withMetadata:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_discardLocationSeries:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)_entityForLocationSeriesSample:(id)arg1 database:(id)arg2 error:(id*)arg3 ;
-(id)firstPartyWorkoutSnapshot;
-(void)_serverActivityChanged;
-(void)remote_saveDataObjects:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)_saveDataObjects:(id)arg1 sourceEntity:(id)arg2 sourceVersion:(id)arg3 handler:(/*^block*/id)arg4 ;
-(void)remote_deleteDataObjects:(id)arg1 options:(unsigned long long)arg2 handler:(/*^block*/id)arg3 ;
-(void)pauseActiveWorkoutsWithCompletion:(/*^block*/id)arg1 ;
-(id)diagnosticDescription;
-(void)processSuspended:(id)arg1 ;
-(void)processResumed:(id)arg1 ;
-(void)unitPreferencesManagerDidUpdateUnitPreferences:(id)arg1 ;
-(id)_queryServersByUUID;
-(BOOL)queryServerShouldObserveInBackground:(id)arg1 ;
-(id)queryServer:(id)arg1 filterSamplesForReadAuthorization:(id)arg2 ;
-(id)initWithClient:(id)arg1 healthDaemon:(id)arg2 queue:(id)arg3 configuration:(id)arg4 ;
-(void)queryServerDidFinish:(id)arg1 ;
-(BOOL)queryServer:(id)arg1 isAuthorizedToReadType:(id)arg2 withRestrictedSourceIdentifier:(id*)arg3 authorizationAnchor:(id*)arg4 ;
-(BOOL)queryServer:(id)arg1 isAuthorizationStatusDeterminedForTypes:(id)arg2 error:(id*)arg3 ;
-(BOOL)queryServerClientIsInBackground:(id)arg1 ;
-(BOOL)queryServerClientHasActiveWorkout:(id)arg1 ;
-(void)setClient:(HDClient *)arg1 ;
-(void)deliverWorkoutSessionError:(id)arg1 forSessionUUID:(id)arg2 ;
-(void)deliverWorkoutSessionChangedToState:(long long)arg1 fromState:(long long)arg2 date:(id)arg3 forSessionUUID:(id)arg4 ;
-(void)deliverWorkoutEvent:(id)arg1 forSessionUUID:(id)arg2 ;
-(id)_sourceWithError:(id*)arg1 ;
-(void)_queue_deactivateDeepBreathingSessionServerWithUUID:(id)arg1 ;
-(void)_requireEntitlement:(id)arg1 usingBlock:(/*^block*/id)arg2 errorHandler:(/*^block*/id)arg3 ;
-(id)_sourceForClient:(id)arg1 error:(id*)arg2 ;
-(void)_requirePrivateHealthKitEntitlementUsingBlock:(/*^block*/id)arg1 errorHandler:(/*^block*/id)arg2 ;
-(BOOL)_clientHasPrivateHealthKitEntitlementWithError:(id*)arg1 ;
-(BOOL)_clientHasUtilityEntitlementWithError:(id*)arg1 ;
-(void)_openAppForAuthorizationForSession:(id)arg1 completion:(/*^block*/id)arg2 ;
-(/*^block*/id)_authorizationPromptHandler;
-(id)_clientRemoteObjectProxy;
-(BOOL)_queue_insertObjects:(id)arg1 sourceEntity:(id)arg2 sourceVersionOverride:(id)arg3 shouldJournal:(BOOL)arg4 error:(id*)arg5 ;
-(id)_objectsToInsertWithObjects:(id)arg1 error:(id*)arg2 ;
-(void)_saveValidatedDataObjects:(id)arg1 transactionIdentifier:(id)arg2 final:(BOOL)arg3 handler:(/*^block*/id)arg4 ;
-(BOOL)_insertedObjects:(id)arg1 containsQuantitySampleWithType:(id)arg2 ;
-(id)_queue_objectsByProvenanceForInsertion:(id)arg1 sourceEntity:(id)arg2 sourceVersionOverride:(id)arg3 error:(id*)arg4 ;
-(id)_clientSourceVersion;
-(/*^block*/id)_permissionBlockForRestrictedSourceEntity:(id)arg1 ;
-(void)_startQueryServer:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)_queue_registerForProcessStateUpdatesWithUUID:(id)arg1 ;
-(/*^block*/id)_objectAuthorizationPromptHandler;
-(void)_queue_unregisterFromProcessStateUpdatesWithUUID:(id)arg1 ;
-(void)_queue_serverActivityChanged;
-(void)_performIfAuthorizedToReadTypes:(id)arg1 usingBlock:(/*^block*/id)arg2 errorHandler:(/*^block*/id)arg3 ;
-(void)_cancelActiveClientTransaction;
-(void)_holdActiveClientTransactionWithCompletion:(/*^block*/id)arg1 ;
-(BOOL)_queue_isServerActive;
-(void)_queue_cancelActiveClientTransaction;
-(void)_queue_holdActiveClientTransactionWithCompletion:(/*^block*/id)arg1 ;
-(void)deepBreathingServerDidDeactivate:(id)arg1 ;
-(void)remote_proxyForFitnessFriendsServerWithCompletion:(/*^block*/id)arg1 ;
-(void)remote_proxyForHealthServicesServerWithCompletion:(/*^block*/id)arg1 ;
-(void)remote_proxyForMedicalIDServerWithCompletion:(/*^block*/id)arg1 ;
-(void)remote_proxyForNanoSyncServerWithCompletion:(/*^block*/id)arg1 ;
-(void)remote_proxyForUtilityServerWithCompletion:(/*^block*/id)arg1 ;
-(void)remote_proxyForWorkoutServerWithCompletion:(/*^block*/id)arg1 ;
-(void)remote_authorizationStatusForType:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_requestAuthorizationToShareTypes:(id)arg1 readTypes:(id)arg2 shouldPrompt:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(void)remote_handleAuthorizationForExtensionWithCompletion:(/*^block*/id)arg1 ;
-(void)remote_allAuthorizationRecordsForBundleIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_allAuthorizationRecordsForType:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_retrieveAllAuthorizationRecordsForDocumentType:(id)arg1 bundleIdentifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)remote_allObjectAuthorizationRecordsForSampleWithUUID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_setAuthorizationStatuses:(id)arg1 forBundleIdentifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)remote_setRequestedAuthorizationForBundleIdentifier:(id)arg1 shareTypes:(id)arg2 readTypes:(id)arg3 prompt:(BOOL)arg4 completion:(/*^block*/id)arg5 ;
-(void)remote_resetAuthorizationStatusForBundleIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_beginAuthorizationDelegateTransactionWithSessionIdentifier:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)remote_endAuthorizationDelegateTransactionWithSessionIdentifier:(id)arg1 error:(id)arg2 ;
-(void)remote_setObjectAuthorizationStatuses:(id)arg1 forBundleIdentifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)remote_resetObjectAuthorizationStatusForBundleIdentifier:(id)arg1 objectType:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)remote_resetObjectAuthorizationStatusForObjects:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_startQueryWithUUID:(id)arg1 serverDataObject:(id)arg2 queryClass:(Class)arg3 client:(id)arg4 handler:(/*^block*/id)arg5 ;
-(void)remote_saveDataObjects:(id)arg1 transactionIdentifier:(id)arg2 final:(BOOL)arg3 handler:(/*^block*/id)arg4 ;
-(void)remote_deleteDataObjectsOfType:(id)arg1 matchingFilter:(id)arg2 options:(unsigned long long)arg3 handler:(/*^block*/id)arg4 ;
-(void)_remote_attachDeepBreathingSessionServerWithClient:(id)arg1 sessionConfiguration:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)remote_saveLocationSeriesData:(id)arg1 withSeriesSample:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)remote_finishLocationSeries:(id)arg1 withMetadata:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)remote_discardLocationSeries:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_clientWillSuspendWithCompletion:(/*^block*/id)arg1 ;
-(void)remote_clientResumedWithCompletion:(/*^block*/id)arg1 ;
-(void)remote_setBackgroundDeliveryFrequency:(long long)arg1 forDataType:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)remote_closeTransactionWithDataType:(id)arg1 anchor:(id)arg2 ackTime:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)remote_hasSourceWithBundleIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_addSourceWithBundleIdentifier:(id)arg1 name:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)remote_allSourcesWithCompletion:(/*^block*/id)arg1 ;
-(void)remote_orderedSourcesForObjectType:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_updateOrderedSources:(id)arg1 forObjectType:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)remote_currentlyPairedWatchIdentifiersWithCompletion:(/*^block*/id)arg1 ;
-(void)remote_fetchDevicesMatchingProperty:(id)arg1 values:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)remote_deleteAllSamplesWithTypes:(id)arg1 sourceBundleIdentifier:(id)arg2 options:(unsigned long long)arg3 completion:(/*^block*/id)arg4 ;
-(void)remote_deleteSourceWithBundleIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_deleteObjectsWithUUIDs:(id)arg1 options:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)remote_suppressActivityAlertsForIdentifier:(id)arg1 suppressionReason:(long long)arg2 timeoutUntilDate:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)remote_invalidateActivityAlertSuppressionForIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_fetchCharacteristicWithDataType:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)remote_setCharacteristic:(id)arg1 forDataType:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)remote_getDefaultForKey:(id)arg1 withHandler:(/*^block*/id)arg2 ;
-(void)remote_setDefaultValue:(id)arg1 forKey:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)remote_removeDefaultForKey:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)remote_setHealthLiteValue:(id)arg1 forKey:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)remote_getHealthLiteValueForKey:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_getHealthDirectorySizeInBytesWithCompletion:(/*^block*/id)arg1 ;
-(void)remote_performMigrationWithCompletion:(/*^block*/id)arg1 ;
-(void)remote_submitMetricsIgnoringAnchor:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_registerKeepAliveWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_unregisterKeepAliveWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_setPreferredUnit:(id)arg1 forType:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)remote_fetchUnitPreferencesForTypes:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)remote_weeklySummaryInfoForDate:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)remote_splitTotalCalories:(double)arg1 timeInterval:(double)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)remote_fetchDaemonPreferenceForKey:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)remote_badgeHealthAppForEmergencyContactsConsolidationWithCompletion:(/*^block*/id)arg1 ;
-(HDDataCollectionManager *)dataCollectMgr;
-(void)setDataCollectMgr:(HDDataCollectionManager *)arg1 ;
-(HDAuthorizationServer *)authorizationServer;
-(void)setAuthorizationServer:(HDAuthorizationServer *)arg1 ;
-(NSString *)serverID;
-(void)setServerID:(NSString *)arg1 ;
-(NSString *)clientDebuggingIdentifier;
-(void)setClientDebuggingIdentifier:(NSString *)arg1 ;
-(NSMutableSet *)subservers;
-(void)setSubservers:(NSMutableSet *)arg1 ;
-(HDFitnessFriendsServer *)fitnessFriendsServer;
-(void)setFitnessFriendsServer:(HDFitnessFriendsServer *)arg1 ;
-(HDHealthServicesServer *)healthServicesServer;
-(void)setHealthServicesServer:(HDHealthServicesServer *)arg1 ;
-(HDMedicalIDServer *)medicalIDServer;
-(void)setMedicalIDServer:(HDMedicalIDServer *)arg1 ;
-(HDNanoSyncServer *)nanoSyncServer;
-(void)setNanoSyncServer:(HDNanoSyncServer *)arg1 ;
-(HDUtilityServer *)utilityServer;
-(void)setUtilityServer:(HDUtilityServer *)arg1 ;
-(HDWorkoutServer *)workoutServer;
-(void)setWorkoutServer:(HDWorkoutServer *)arg1 ;
@end

