/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:56:43 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class HDClient, HDProfile, NSObject, NSMutableArray, NSUUID;

@interface HDAuthorizationServer : NSObject {

	int _invalidated;
	HDClient* _client;
	HDProfile* _profile;
	NSObject*<OS_dispatch_queue> _queue;
	NSMutableArray* _authorizationRequestIdentifiers;
	NSUUID* _transactionSessionIdentifier;

}

@property (assign,nonatomic,__weak) HDProfile * profile;                                    //@synthesize profile=_profile - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                            //@synthesize queue=_queue - In the implementation block
@property (nonatomic,retain) NSMutableArray * authorizationRequestIdentifiers;              //@synthesize authorizationRequestIdentifiers=_authorizationRequestIdentifiers - In the implementation block
@property (nonatomic,retain) NSUUID * transactionSessionIdentifier;                         //@synthesize transactionSessionIdentifier=_transactionSessionIdentifier - In the implementation block
@property (assign,nonatomic) int invalidated;                                               //@synthesize invalidated=_invalidated - In the implementation block
@property (readonly) HDClient * client;                                                     //@synthesize client=_client - In the implementation block
-(void)invalidate;
-(void)_invalidate;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(HDClient *)client;
-(HDProfile *)profile;
-(void)setProfile:(HDProfile *)arg1 ;
-(BOOL)isAuthorizationStatusDeterminedForTypes:(id)arg1 error:(id*)arg2 ;
-(id)readAuthorizationWithTypes:(id)arg1 error:(id*)arg2 ;
-(int)invalidated;
-(void)setInvalidated:(int)arg1 ;
-(void)setAuthorizationStatuses:(id)arg1 forBundleIdentifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_performIfAuthorizedForTypes:(id)arg1 sharing:(BOOL)arg2 onQueue:(id)arg3 usingBlock:(/*^block*/id)arg4 errorHandler:(/*^block*/id)arg5 ;
-(BOOL)_shouldBypassAuthorization;
-(id)_authorizationStatusForTypes:(id)arg1 error:(id*)arg2 ;
-(id)clientSourceIdentifierWithError:(id*)arg1 ;
-(void)_queue_enqueueAuthorizationRequestForBundleIdentifier:(id)arg1 writeTypes:(id)arg2 readTypes:(id)arg3 authorizationNeededHandler:(/*^block*/id)arg4 requestCompletionHandler:(/*^block*/id)arg5 ;
-(void)handleAuthorizationRequestsForBundleIdentifier:(id)arg1 promptHandler:(/*^block*/id)arg2 requestCompletionHandler:(/*^block*/id)arg3 ;
-(id)initWithClient:(id)arg1 profile:(id)arg2 queue:(id)arg3 ;
-(void)performIfAuthorizedToReadTypes:(id)arg1 onQueue:(id)arg2 usingBlock:(/*^block*/id)arg3 errorHandler:(/*^block*/id)arg4 ;
-(void)performIfAuthorizedToSaveObjectsWithTypes:(id)arg1 onQueue:(id)arg2 usingBlock:(/*^block*/id)arg3 errorHandler:(/*^block*/id)arg4 ;
-(void)performIfAuthorizedToDeleteObjectsWithTypes:(id)arg1 onQueue:(id)arg2 usingBlock:(/*^block*/id)arg3 errorHandler:(/*^block*/id)arg4 ;
-(BOOL)isAuthorizedToReadType:(id)arg1 withRestrictedSourceIdentifier:(id*)arg2 authorizationAnchor:(id*)arg3 ;
-(id)filterSamplesForReadAuthorization:(id)arg1 ;
-(id)authorizationStatusForType:(id)arg1 error:(id*)arg2 ;
-(void)enqueueAuthorizationRequestToWriteTypes:(id)arg1 readTypes:(id)arg2 authorizationNeededHandler:(/*^block*/id)arg3 requestCompletionHandler:(/*^block*/id)arg4 ;
-(void)handleAuthorizationRequestsWithPromptHandler:(/*^block*/id)arg1 requestCompletionHandler:(/*^block*/id)arg2 ;
-(void)enqueueObjectAuthorizationRequestForSamples:(id)arg1 promptIfNeeded:(BOOL)arg2 authorizationNeededHandler:(/*^block*/id)arg3 completion:(/*^block*/id)arg4 ;
-(void)handleObjectAuthorizationRequestsWithPromptHandler:(/*^block*/id)arg1 completion:(/*^block*/id)arg2 ;
-(NSMutableArray *)authorizationRequestIdentifiers;
-(void)setAuthorizationRequestIdentifiers:(NSMutableArray *)arg1 ;
-(NSUUID *)transactionSessionIdentifier;
-(void)setTransactionSessionIdentifier:(NSUUID *)arg1 ;
-(void)_setAuthorizationStatusesEntitled:(id)arg1 forBundleIdentifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_queue_beginAuthorizationRequestDelegateTransactionWithSessionIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)allAuthorizationRecordsForBundleIdentifier:(id)arg1 error:(id*)arg2 ;
-(id)allAuthorizationRecordsForType:(id)arg1 error:(id*)arg2 ;
-(id)allDocumentAuthorizationRecordsForType:(id)arg1 bundleIdentifier:(id)arg2 error:(id*)arg3 ;
-(id)allObjectAuthorizationsForSampleWithUUID:(id)arg1 error:(id*)arg2 ;
-(void)requestAuthorizationForBundleIdentifier:(id)arg1 writeTypes:(id)arg2 readTypes:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)beginAuthorizationRequestDelegateTransactionWithRequestRecord:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)beginAuthorizationRequestDelegateTransactionWithSessionIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)endAuthorizationRequestDelegateTransactionWithSessionIdentifier:(id)arg1 error:(id)arg2 ;
-(BOOL)resetAuthorizationStatusesForObjects:(id)arg1 error:(id*)arg2 ;
-(BOOL)resetAuthorizationStatusForBundleIdentifier:(id)arg1 error:(id*)arg2 ;
-(void)updateDefaultAuthorizationStatusesWithCompletion:(/*^block*/id)arg1 ;
@end

