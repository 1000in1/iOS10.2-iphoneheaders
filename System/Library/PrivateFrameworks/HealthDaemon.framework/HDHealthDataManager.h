/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:56:43 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol HDHealthDataManager <NSObject>
@required
-(void)removeObserver:(id)arg1 forDataType:(id)arg2;
-(void)addObserver:(id)arg1 forDataType:(id)arg2;
-(BOOL)insertDataObjects:(id)arg1 withProvenance:(id)arg2 creationDate:(double)arg3 error:(id*)arg4;
-(BOOL)deleteDataObjects:(id)arg1 restrictedSourceEntity:(id)arg2 failIfNotFound:(BOOL)arg3 recursiveDeleteAuthorizationBlock:(/*^block*/id)arg4 error:(id*)arg5;
-(BOOL)insertDataObjects:(id)arg1 withProvenance:(id)arg2 creationDate:(double)arg3 skipInsertionFilter:(BOOL)arg4 error:(id*)arg5;
-(BOOL)deleteDataObjectsOfClass:(Class)arg1 predicate:(id)arg2 limit:(unsigned long long)arg3 deletedSampleCount:(unsigned long long*)arg4 notifyObservers:(BOOL)arg5 generateDeletedObjects:(BOOL)arg6 recursiveDeleteAuthorizationBlock:(/*^block*/id)arg7 error:(id*)arg8;
-(BOOL)insertDataObjects:(id)arg1 sourceEntity:(id)arg2 deviceEntity:(id)arg3 sourceVersion:(id)arg4 creationDate:(double)arg5 error:(id*)arg6;
-(BOOL)deleteSamplesWithTypes:(id)arg1 sourceID:(id)arg2 recursiveDeleteAuthorizationBlock:(/*^block*/id)arg3 error:(id*)arg4;
-(void)shouldNotifyForDataObjects:(id)arg1 provenance:(id)arg2 database:(id)arg3 anchor:(id)arg4;
-(BOOL)deleteSamplesWithSourceIdentifier:(id)arg1 error:(id*)arg2;
-(void)openObserverTransaction;
-(void)closeObserverTransaction;
-(void)shouldNotifyForDeletedSamplesOfTypes:(id)arg1 database:(id)arg2 anchor:(id)arg3;
-(BOOL)deleteSamplesWithUUIDs:(id)arg1 recursiveDeleteAuthorizationBlock:(/*^block*/id)arg2 error:(id*)arg3;
-(BOOL)deleteSamplesWithUUIDs:(id)arg1 generateDeletedObjects:(BOOL)arg2 database:(id)arg3 error:(id*)arg4;
-(BOOL)containsDataObject:(id)arg1;
-(void)addObserverForAllTypes:(id)arg1;
-(void)removeObserverForAllTypes:(id)arg1;
-(void)addObserver:(id)arg1 forDataType:(id)arg2 sourceBundleIdentifier:(id)arg3;
-(void)removeObserver:(id)arg1 forDataType:(id)arg2 sourceBundleIdentifier:(id)arg3;
-(void)setBackgroundObserverFrequency:(id)arg1 forDataType:(id)arg2 frequency:(long long)arg3 completion:(/*^block*/id)arg4;

@end

