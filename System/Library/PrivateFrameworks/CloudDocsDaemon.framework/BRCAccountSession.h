/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:56:10 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CloudDocsDaemon/CloudDocsDaemon-Structs.h>
#import <libobjc.A.dylib/BRCPQLDBCorruptionHandler.h>
#import <libobjc.A.dylib/BRCCloudDocsAppsObserver.h>
#import <libobjc.A.dylib/BRCIndexingArbiter.h>

@protocol OS_dispatch_source, OS_dispatch_queue;
@class NSMutableDictionary, BRCDeadlineScheduler, NSURL, NSObject, NSString, NSHashTable, BRCPQLConnection, BRCClientState, BRCServerPersistedState, NSMutableSet, BRCGlobalProgress, br_pacer, BRCAccountWaitOperation, BRCApplicationShortcutService, BRCContainerScheduler, BRCApplyScheduler, BRCVolume, BRCFSReader, BRCFSUploader, BRCFSDownloader, BRCFSWriter, BRCUserNotification, BRCNotificationManager, BRCStageRegistry, BRCDiskSpaceReclaimer, CDSession, BRCSpotlightIndexer, BRCThrottle;

@interface BRCAccountSession : NSObject <BRCPQLDBCorruptionHandler, BRCCloudDocsAppsObserver, BRCIndexingArbiter> {

	NSMutableDictionary* _syncContexts;
	BRCDeadlineScheduler* _defaultScheduler;
	NSURL* _dbURL;
	NSObject*<OS_dispatch_source> _dbWatcher;
	NSObject*<OS_dispatch_queue> _dbWatcherQueue;
	NSObject*<OS_dispatch_queue> _dbCorruptionQueue;
	int _cloudDocsFD;
	/*^block*/id _dbProfilingHook;
	NSString* _databaseID;
	NSHashTable* _miscOperations;
	BRCPQLConnection* _clientDB;
	BRCPQLConnection* _serverDB;
	BRCPQLConnection* _readOnlyDB;
	BRCClientState* _clientState;
	BRCServerPersistedState* _serverState;
	brc_mutex _zonesLock;
	NSMutableDictionary* _libraryRowIDsByMangledID;
	NSMutableDictionary* _appLibrariesByRowID;
	NSMutableDictionary* _serverZonesByZoneRowID;
	NSMutableDictionary* _sharedServerZonesByMangledID;
	NSMutableDictionary* _sharedClientZonesByMangledID;
	NSMutableDictionary* _privateServerZonesByID;
	NSMutableDictionary* _privateClientZonesByID;
	NSString* _accountID;
	NSMutableSet* _xpcClients;
	BOOL _resumed;
	BRCGlobalProgress* _globalProgress;
	unsigned long long _lastDiskSpaceCheckTime;
	unsigned long long _availableDiskSpace;
	unsigned long long _totalDiskSpace;
	BOOL _isGreedy;
	brc_mutex _zonesCreationLock;
	br_pacer* _reschedulePendingDiskItemsPacer;
	br_pacer* _updateDiskSpacePacer;
	BOOL _accountIsReady;
	BRCAccountWaitOperation* _accountWaitOperation;
	BOOL _isDBOpened;
	NSMutableDictionary* _rootsByFolderType;
	NSMutableDictionary* _fsEventsMonitors;
	BRCApplicationShortcutService* _shortcutService;
	BOOL _isCancelled;
	NSString* _appSupportDirPath;
	NSString* _cacheDirPath;
	NSString* _ubiquityTokenSalt;
	BRCContainerScheduler* _containerScheduler;
	BRCApplyScheduler* _applyScheduler;
	BRCVolume* _volume;
	BRCFSReader* _fsReader;
	BRCFSUploader* _fsUploader;
	BRCFSDownloader* _fsDownloader;
	BRCFSWriter* _fsWriter;
	BRCUserNotification* _userNotification;
	BRCNotificationManager* _notificationManager;
	BRCStageRegistry* _stageRegistry;
	BRCDiskSpaceReclaimer* _diskReclaimer;
	CDSession* _coreDuetSession;
	BRCSpotlightIndexer* _spotlightIndexer;
	BRCThrottle* _appLibraryScanThrottle;
	BRCThrottle* _appLibraryResetThrottle;
	BRCThrottle* _sharedAppLibraryResetThrottle;
	BRCThrottle* _appLibraryAliasRemovalThrottle;
	BRCThrottle* _lostItemThrottle;
	BRCThrottle* _operationFailureThrottle;
	BRCThrottle* _syncClientZoneThrottle;
	BRCThrottle* _syncClientZoneErrorThrottle;
	NSObject*<OS_dispatch_queue> _resetQueue;

}

@property (nonatomic,readonly) BRCClientState * clientState; 
@property (nonatomic,readonly) BRCServerPersistedState * serverState; 
@property (nonatomic,readonly) NSString * databaseID; 
@property (nonatomic,readonly) BRCPQLConnection * clientDB; 
@property (nonatomic,readonly) BRCPQLConnection * readOnlyDB; 
@property (nonatomic,readonly) BRCPQLConnection * serverDB; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) NSString * appSupportDirPath;                                  //@synthesize appSupportDirPath=_appSupportDirPath - In the implementation block
@property (nonatomic,retain) NSString * cacheDirPath;                                       //@synthesize cacheDirPath=_cacheDirPath - In the implementation block
@property (nonatomic,readonly) NSString * accountID;                                        //@synthesize accountID=_accountID - In the implementation block
@property (nonatomic,readonly) NSString * ubiquityTokenSalt;                                //@synthesize ubiquityTokenSalt=_ubiquityTokenSalt - In the implementation block
@property (nonatomic,readonly) BRCGlobalProgress * globalProgress;                          //@synthesize globalProgress=_globalProgress - In the implementation block
@property (nonatomic,readonly) BRCDeadlineScheduler * defaultScheduler;                     //@synthesize defaultScheduler=_defaultScheduler - In the implementation block
@property (nonatomic,readonly) BRCApplyScheduler * applyScheduler;                          //@synthesize applyScheduler=_applyScheduler - In the implementation block
@property (nonatomic,readonly) BRCContainerScheduler * containerScheduler;                  //@synthesize containerScheduler=_containerScheduler - In the implementation block
@property (nonatomic,readonly) BRCFSReader * fsReader;                                      //@synthesize fsReader=_fsReader - In the implementation block
@property (nonatomic,readonly) BRCFSUploader * fsUploader;                                  //@synthesize fsUploader=_fsUploader - In the implementation block
@property (nonatomic,readonly) BRCFSDownloader * fsDownloader;                              //@synthesize fsDownloader=_fsDownloader - In the implementation block
@property (nonatomic,readonly) BRCFSWriter * fsWriter;                                      //@synthesize fsWriter=_fsWriter - In the implementation block
@property (nonatomic,readonly) BRCVolume * volume;                                          //@synthesize volume=_volume - In the implementation block
@property (nonatomic,readonly) BRCNotificationManager * notificationManager;                //@synthesize notificationManager=_notificationManager - In the implementation block
@property (nonatomic,readonly) BRCStageRegistry * stageRegistry;                            //@synthesize stageRegistry=_stageRegistry - In the implementation block
@property (nonatomic,readonly) BRCDiskSpaceReclaimer * diskReclaimer;                       //@synthesize diskReclaimer=_diskReclaimer - In the implementation block
@property (nonatomic,readonly) BRCUserNotification * userNotification;                      //@synthesize userNotification=_userNotification - In the implementation block
@property (nonatomic,readonly) CDSession * coreDuetSession;                                 //@synthesize coreDuetSession=_coreDuetSession - In the implementation block
@property (nonatomic,readonly) BRCSpotlightIndexer * spotlightIndexer;                      //@synthesize spotlightIndexer=_spotlightIndexer - In the implementation block
@property (nonatomic,readonly) BOOL isCancelled;                                            //@synthesize isCancelled=_isCancelled - In the implementation block
@property (nonatomic,readonly) unsigned long long availableDiskSpace; 
@property (nonatomic,readonly) BOOL isGreedy; 
@property (nonatomic,readonly) BRCAccountWaitOperation * accountWaitOperation; 
@property (nonatomic,readonly) BOOL hasOptimizeStorageEnabled; 
@property (nonatomic,readonly) BRCThrottle * appLibraryScanThrottle;                        //@synthesize appLibraryScanThrottle=_appLibraryScanThrottle - In the implementation block
@property (nonatomic,readonly) BRCThrottle * appLibraryResetThrottle;                       //@synthesize appLibraryResetThrottle=_appLibraryResetThrottle - In the implementation block
@property (nonatomic,readonly) BRCThrottle * sharedAppLibraryResetThrottle;                 //@synthesize sharedAppLibraryResetThrottle=_sharedAppLibraryResetThrottle - In the implementation block
@property (nonatomic,readonly) BRCThrottle * appLibraryAliasRemovalThrottle;                //@synthesize appLibraryAliasRemovalThrottle=_appLibraryAliasRemovalThrottle - In the implementation block
@property (nonatomic,readonly) BRCThrottle * lostItemThrottle;                              //@synthesize lostItemThrottle=_lostItemThrottle - In the implementation block
@property (nonatomic,readonly) BRCThrottle * operationFailureThrottle;                      //@synthesize operationFailureThrottle=_operationFailureThrottle - In the implementation block
@property (nonatomic,readonly) BRCThrottle * syncClientZoneThrottle;                        //@synthesize syncClientZoneThrottle=_syncClientZoneThrottle - In the implementation block
@property (nonatomic,readonly) BRCThrottle * syncClientZoneErrorThrottle;                   //@synthesize syncClientZoneErrorThrottle=_syncClientZoneErrorThrottle - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> resetQueue;                     //@synthesize resetQueue=_resetQueue - In the implementation block
+(id)userIdentityForKey:(id)arg1 db:(id)arg2 ;
+(id)userIdentityForName:(id)arg1 db:(id)arg2 ;
+(id)sessionForDumpingDatabasesAtURL:(id)arg1 ;
-(BRCNotificationManager *)notificationManager;
-(id)init;
-(void)dealloc;
-(NSString *)description;
-(BOOL)isCancelled;
-(BRCVolume *)volume;
-(void)resume;
-(void)close;
-(NSString *)databaseID;
-(void)addOfflineServerZone:(id)arg1 ;
-(void)addOfflineClientZone:(id)arg1 ;
-(void)addOfflineAppLibrary:(id)arg1 ;
-(BRCPQLConnection *)clientDB;
-(id)resolvedOpenRelpathForPath:(id)arg1 mustExist:(BOOL)arg2 errcode:(int*)arg3 ;
-(id)roots;
-(void)dbBecameCorrupted:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BRCThrottle *)operationFailureThrottle;
-(BRCPQLConnection *)serverDB;
-(id)userKeyForName:(id)arg1 db:(id)arg2 ;
-(id)createUserKeyForName:(id)arg1 ;
-(id)getOrCreateSharedAppLibraryAndZones:(id)arg1 ownerName:(id)arg2 ;
-(BRCFSDownloader *)fsDownloader;
-(BRCFSUploader *)fsUploader;
-(id)userIdentityForKey:(id)arg1 ;
-(BRCGlobalProgress *)globalProgress;
-(id)itemByRowID:(unsigned long long)arg1 ;
-(void)enumeratePrivateAppLibraries:(/*^block*/id)arg1 ;
-(id)newConnectionWithLabel:(id)arg1 readonly:(BOOL)arg2 error:(id*)arg3 ;
-(void)closeAndResetLocalState;
-(void)setupDatabase;
-(id)newConnection:(id)arg1 ;
-(BOOL)_setupConnection:(id)arg1 databaseName:(id)arg2 flags:(int)arg3 error:(id*)arg4 ;
-(BOOL)_setupConnection:(id)arg1 databaseName:(id)arg2 readonly:(BOOL)arg3 error:(id*)arg4 ;
-(BOOL)_createAppLibrary:(id)arg1 ;
-(id)newSharedAppLibraryFromPQLResultSet:(id)arg1 error:(id*)arg2 ;
-(id)newPrivateAppLibraryFromPQLResultSet:(id)arg1 error:(id*)arg2 ;
-(BOOL)_createClientZone:(id)arg1 ownerName:(id)arg2 ;
-(id)newSharedClientZoneFromPQLResultSet:(id)arg1 error:(id*)arg2 ;
-(id)newSharedServerZoneFromPQLResultSet:(id)arg1 error:(id*)arg2 ;
-(id)newPrivateClientZoneFromPQLResultSet:(id)arg1 error:(id*)arg2 ;
-(id)newPrivateServerZoneFromPQLResultSet:(id)arg1 error:(id*)arg2 ;
-(id)newLocalItemFromPQLResultSet:(id)arg1 db:(id)arg2 error:(id*)arg3 ;
-(id)deviceKeyForName:(id)arg1 db:(id)arg2 ;
-(void)_setUserIdentity:(id)arg1 forName:(id)arg2 ;
-(PQLResultSet*)_privateClientZonesEnumerator:(id)arg1 ;
-(BOOL)saveClientZoneToDB:(id)arg1 ;
-(PQLResultSet*)_sharedClientZonesEnumerator:(id)arg1 ;
-(void)_registerLastBootIfNeeded:(id)arg1 table:(NSObject*)arg2 ;
-(BOOL)_stepBackupDetector:(backup_detector)arg1 newState:(backup_detector*)arg2 error:(id*)arg3 ;
-(void)_clearNeedsUpgradeErrorsIfNeeded:(id)arg1 brVersion:(id)arg2 ;
-(void)enumerateServerZones:(/*^block*/id)arg1 ;
-(BOOL)saveAppLibraryToDB:(id)arg1 ;
-(void)enumerateAppLibraries:(/*^block*/id)arg1 ;
-(BRCStageRegistry *)stageRegistry;
-(BRCSpotlightIndexer *)spotlightIndexer;
-(void)enumerateClientZones:(/*^block*/id)arg1 ;
-(BOOL)_checkIntegrity:(id)arg1 serverTruth:(BOOL)arg2 error:(id*)arg3 ;
-(BOOL)validateDatabase:(id)arg1 serverTruth:(BOOL)arg2 error:(id*)arg3 ;
-(void)_startWatcher;
-(BOOL)_openClientTruthConnectionWithError:(id*)arg1 ;
-(BOOL)_openServerTruthConnectionWithError:(id*)arg1 ;
-(void)enableDatabaseProfilingForDB:(id)arg1 ;
-(void)stopDBWatcher;
-(void)_dumpClientZoneBlockedState:(id)arg1 toContext:(id)arg2 ;
-(id)_sharedServerZoneByName:(id)arg1 ownerName:(id)arg2 db:(id)arg3 ;
-(id)_privateServerZoneByName:(id)arg1 db:(id)arg2 ;
-(void)disableDatabaseProfilingForDB:(id)arg1 ;
-(id)clientZonesMatchingSearchString:(id)arg1 error:(id*)arg2 ;
-(BOOL)_dumpClientZoneStatus:(id)arg1 toContext:(id)arg2 error:(id*)arg3 ;
-(PQLResultSet*)_sharedServerZonesEnumerator:(id)arg1 ;
-(PQLResultSet*)_privateServerZonesEnumerator:(id)arg1 ;
-(PQLResultSet*)_sharedAppLibrariesEnumerator:(id)arg1 ;
-(PQLResultSet*)_privateAppLibrariesEnumerator:(id)arg1 ;
-(BRCContainerScheduler *)containerScheduler;
-(BOOL)_dumpClientZone:(id)arg1 toContext:(id)arg2 error:(id*)arg3 ;
-(void)dumpXPCClientsToContext:(id)arg1 ;
-(void)dumpMiscOperationsToContext:(id)arg1 ;
-(void)enumerateSupportedFolderTypes:(/*^block*/id)arg1 ;
-(BRCPQLConnection *)readOnlyDB;
-(BOOL)_setupBackupDetector:(backup_detector*)arg1 error:(id*)arg2 ;
-(void)preventDatabaseFromBeingReused;
-(BOOL)saveServerZoneToDB:(id)arg1 ;
-(BOOL)createServerZone:(id)arg1 ;
-(BOOL)deleteServerZone:(id)arg1 ;
-(void)_enumerateAppLibraryRowIDs:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)_reserveRowIDForLibrary:(id)arg1 owner:(id)arg2 ;
-(BOOL)_deleteAppLibrary:(id)arg1 ;
-(BOOL)_createPrivateAppLibrary:(id)arg1 ;
-(BOOL)_createSharedAppLibrary:(id)arg1 ;
-(BOOL)_deleteClientZone:(id)arg1 ;
-(BOOL)_createPrivateClientZone:(id)arg1 ;
-(BOOL)_createSharedClientZone:(id)arg1 ownerName:(id)arg2 ;
-(id)_privateClientZoneByName:(id)arg1 db:(id)arg2 ;
-(PQLResultSet*)stagedItemsEnumerator;
-(PQLResultSet*)bouncedItemsEnumerator;
-(PQLResultSet*)itemsNeedingIndexingEnumeratorWithMinNotifRank:(unsigned long long)arg1 maxNotifRank:(unsigned long long)arg2 ;
-(id)pendingDownloadItemWithDocumentID:(unsigned)arg1 ;
-(id)createDeviceKeyForNameInServerDB:(id)arg1 ;
-(void)learnOwnerIdentityForShare:(id)arg1 forceUpdate:(BOOL)arg2 ;
-(id)userNameForKey:(id)arg1 db:(id)arg2 ;
-(BOOL)openDBWithError:(id*)arg1 ;
-(void)closeDBs;
-(BOOL)dumpStatusToFileHandle:(id)arg1 zoneName:(id)arg2 error:(id*)arg3 ;
-(BOOL)initializeOfflineDatabase:(id*)arg1 ;
-(BOOL)dumpDatabaseToFileHandle:(id)arg1 zoneName:(id)arg2 error:(id*)arg3 ;
-(BOOL)backupDatabaseToURL:(id)arg1 error:(id*)arg2 ;
-(NSString *)appSupportDirPath;
-(id)dirPathForSyncedFolderType:(unsigned long long)arg1 ;
-(id)initWithAccountID:(id)arg1 salt:(id)arg2 ;
-(void)destroyLocalDataWaitingForFilesToBeUnlinked:(BOOL)arg1 completionBlock:(/*^block*/id)arg2 ;
-(BRCFSReader *)fsReader;
-(BRCApplyScheduler *)applyScheduler;
-(id)fsEventsMonitors;
-(void)destroyLocalDataWithPristingContainerIDs:(id)arg1 ;
-(NSString *)ubiquityTokenSalt;
-(void)destroyLocalData;
-(id)appLibraryByMangledID:(id)arg1 ;
-(id)zoneHealthSyncContext;
-(id)getOrCreatePrivateAppLibraryAndZonesIfNecessary:(id)arg1 ;
-(id)privateClientZoneByID:(id)arg1 ;
-(int)resolvePathAdditionalMetadata:(id)arg1 appLibrary:(id*)arg2 clientZone:(id*)arg3 ;
-(id)defaultSyncContext;
-(BRCDeadlineScheduler *)defaultScheduler;
-(id)privateAppLibraryByID:(id)arg1 ;
-(NSString *)cacheDirPath;
-(BRCDiskSpaceReclaimer *)diskReclaimer;
-(void)enumeratePrivateClientZones:(/*^block*/id)arg1 ;
-(void)enumerateSharedClientZones:(/*^block*/id)arg1 ;
-(void)setAppSupportDirPath:(NSString *)arg1 ;
-(void)setCacheDirPath:(NSString *)arg1 ;
-(id)cloudDocsClientZone;
-(id)serverZoneByRowID:(id)arg1 ;
-(BRCFSWriter *)fsWriter;
-(void)_showiCloudDriveAppInstallationNotificationIfNeeded;
-(id)itemIDByRowID:(unsigned long long)arg1 ;
-(id)fsEventsMonitorForAppLibraryID:(id)arg1 ;
-(BOOL)hasOptimizeStorageEnabled;
-(unsigned long long)availableDiskSpace;
-(BOOL)isGreedy;
-(id)syncContextForAppLibrary:(id)arg1 createIfNeeded:(BOOL)arg2 ;
-(id)itemIDByRowID:(unsigned long long)arg1 db:(id)arg2 ;
-(id)itemByRowID:(unsigned long long)arg1 db:(id)arg2 ;
-(id)appLibraryByRowID:(id)arg1 ;
-(id)allSyncContexts;
-(NSObject*<OS_dispatch_queue>)resetQueue;
-(BRCThrottle *)sharedAppLibraryResetThrottle;
-(BRCThrottle *)appLibraryResetThrottle;
-(BRCThrottle *)appLibraryAliasRemovalThrottle;
-(id)syncContextForZone:(id)arg1 ;
-(BOOL)createAppLibraryOnDisk:(id)arg1 createdRoot:(BOOL*)arg2 createdDocuments:(BOOL*)arg3 rootFileID:(unsigned long long*)arg4 ;
-(BOOL)createSharedAppLibraryOnDiskWithMangledID:(id)arg1 createdRoot:(BOOL*)arg2 rootFileID:(unsigned long long*)arg3 ;
-(void)destroySharedClientZone:(id)arg1 ;
-(void)userDefaultsChanged;
-(void)markAccountMigrationComplete;
-(void)setNeedsPCSMigration:(BOOL)arg1 ;
-(BRCThrottle *)syncClientZoneThrottle;
-(BRCThrottle *)syncClientZoneErrorThrottle;
-(id)sharedSyncContext;
-(unsigned long long)totalEvictableSizeWithAccessTimeDelta:(double)arg1 ;
-(BOOL)PCSMigrationComplete;
-(id)fetchAccountWaitOperationWithAccountReady:(BOOL*)arg1 ;
-(BOOL)shouldPerformPCSMigration;
-(BRCAccountWaitOperation *)accountWaitOperation;
-(id)sharedAppLibraryByMangledID:(id)arg1 ;
-(BOOL)shouldIndexDocument:(id)arg1 ;
-(id)recentDocumentsService;
-(id)getOrCreatePrivateAppLibraryAndZonesIfNecessary:(id)arg1 appLibraryExists:(BOOL*)arg2 ;
-(id)serverZoneByName:(id)arg1 ownerName:(id)arg2 ;
-(id)syncContextForZone:(id)arg1 metadata:(BOOL)arg2 ;
-(id)privateServerZoneByID:(id)arg1 ;
-(void)performBlock:(/*^block*/id)arg1 whileRemovingPrivateClientZone:(id)arg2 ;
-(id)getOrReserveLibraryRowIDForLibrary:(id)arg1 ownerName:(id)arg2 ;
-(id)getOrCreateSharedAppLibraryAndZones:(id)arg1 ownerName:(id)arg2 needsActivate:(BOOL*)arg3 ;
-(id)sharedClientZoneByMangledID:(id)arg1 ;
-(id)privateAppLibraryByMangledID:(id)arg1 ;
-(BOOL)hasRootForSyncedFolderType:(unsigned long long)arg1 ;
-(id)rootForSyncedFolderType:(unsigned long long)arg1 ;
-(void)_resolvePathInMobileDocsRoot:(id)arg1 appLibrary:(id*)arg2 clientZone:(id*)arg3 ;
-(id)globalItemByFileID:(unsigned long long)arg1 ;
-(id)globalItemByDocumentID:(unsigned)arg1 ;
-(id)_clientZonesMatchingSearchString:(id)arg1 ;
-(id)singleClientZoneMatchingSearchString:(id)arg1 error:(id*)arg2 ;
-(void)availableDiskSpaceDidChange;
-(void)enumeratePrivateServerZones:(/*^block*/id)arg1 ;
-(id)privateClientZoneByMangledID:(id)arg1 ;
-(void)_setupSharedPackageExtensionsPlist;
-(void)_createAccountSupportPathIfNeeded:(id)arg1 protectParent:(BOOL)arg2 ;
-(void)_setupThrottles;
-(id)createRootForSyncedFolderType:(unsigned long long)arg1 ;
-(void)setRoot:(id)arg1 forSyncedFolderType:(unsigned long long)arg2 ;
-(id)createFSEventsMonitorForSyncedFolderType:(unsigned long long)arg1 ;
-(void)setFSEventsMonitor:(id)arg1 forSyncedFolderType:(unsigned long long)arg2 ;
-(void)_enumerateAccountHandlerSupportedFolderTypes:(/*^block*/id)arg1 ;
-(BOOL)_createAppLibraryRootsIfNeededWithError:(id*)arg1 ;
-(BOOL)createAppLibrariesIfNeededWithError:(id*)arg1 ;
-(unsigned long long)availableDiskSpaceUsingCache:(BOOL)arg1 schedulingPendingDiskItemsIfNeeded:(BOOL)arg2 ;
-(BOOL)_createAppLibraryRootIfNeededAtPath:(id)arg1 error:(id*)arg2 ;
-(void)closeXPCClientsSync;
-(id)_unloadClientZones;
-(BOOL)_recursivelyPrepareFolderForLogOutAtURL:(id)arg1 pruneEmptyFolders:(BOOL)arg2 pruneEmptyTopLevelFolder:(BOOL)arg3 maxDepth:(unsigned long long)arg4 ;
-(void)destroyLocalDataWaitingForFilesToBeUnlinked:(BOOL)arg1 pristineContainerIDs:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(id)serverZoneByID:(id)arg1 ;
-(void)__registerServerZone:(id)arg1 clientZone:(id)arg2 appLibrary:(id)arg3 isShared:(BOOL)arg4 ;
-(id)__getOrCreateServerZone:(id)arg1 ownerName:(id)arg2 ;
-(id)__getOrCreateClientZone:(id)arg1 ownerName:(id)arg2 withServerZone:(id)arg3 ;
-(id)__getOrCreateAppLibrary:(id)arg1 ownerName:(id)arg2 rowID:(id)arg3 createOnDisk:(BOOL)arg4 alreadyExists:(BOOL*)arg5 withClientZone:(id)arg6 createCZMMoved:(BOOL)arg7 ;
-(id)_getOrCreateAppLibraryAndZonesIfNecessary:(id)arg1 ownerName:(id)arg2 creationFlags:(unsigned*)arg3 ;
-(BOOL)hasFSEventsMonitorForSyncedFolderType:(unsigned long long)arg1 ;
-(void)enumerateFileTypesWithFilterBlock:(/*^block*/id)arg1 enumerationBlock:(/*^block*/id)arg2 ;
-(BOOL)applySyncPolicy:(long long)arg1 forSyncedFolderType:(unsigned long long)arg2 isInitialCreation:(BOOL)arg3 error:(id*)arg4 ;
-(void)setOptimizeStorageEnabled:(BOOL)arg1 ;
-(void)enumerateSharedAppLibraries:(/*^block*/id)arg1 ;
-(BOOL)enableSyncforSyncedFolderType:(unsigned long long)arg1 isInitialCreation:(BOOL)arg2 error:(id*)arg3 ;
-(BOOL)disableSyncforSyncedFolderType:(unsigned long long)arg1 isInitialCreation:(BOOL)arg2 error:(id*)arg3 ;
-(void)_loadClientZonesFromDisk;
-(id)fsEventsMonitorForSyncedFolderType:(unsigned long long)arg1 ;
-(void)removeRootForSyncedFolderType:(unsigned long long)arg1 ;
-(void)removeFSEventsMonitorForSyncedFolderType:(unsigned long long)arg1 ;
-(void)cloudDocsAppsListDidChange:(id)arg1 ;
-(void)registerClient:(id)arg1 ;
-(void)unregisterClient:(id)arg1 ;
-(void)addMiscOperation:(id)arg1 ;
-(void)resetThrottles;
-(id)serverZoneByMangledID:(id)arg1 ;
-(id)clientZoneByMangledID:(id)arg1 ;
-(id)privateServerZoneByMangledID:(id)arg1 ;
-(id)sharedServerZoneByMangledID:(id)arg1 ;
-(unsigned long long)availableDiskSpaceUsingCache:(BOOL)arg1 ;
-(unsigned long long)accountSize;
-(void)startDownloadsForGreediness;
-(BOOL)_setRootPathXattrValue:(id)arg1 forRootPath:(id)arg2 error:(id*)arg3 ;
-(BOOL)_getRootPathXattrValue:(id*)arg1 forRootPath:(id)arg2 error:(id*)arg3 ;
-(unsigned long long)syncedFolderTypeForURL:(id)arg1 ;
-(void)removeDesktopSymlink:(BOOL)arg1 andDocumentsSymlink:(BOOL)arg2 ;
-(void)_recreateSymlinkIfNecessaryForDocumentsPath:(id)arg1 folderName:(id)arg2 destinationPath:(id)arg3 ;
-(void)recreateDesktopSymlinksIfNecessary;
-(BOOL)shouldPathBeDesktopSymlink:(id)arg1 ;
-(BRCUserNotification *)userNotification;
-(CDSession *)coreDuetSession;
-(BRCThrottle *)appLibraryScanThrottle;
-(BRCThrottle *)lostItemThrottle;
-(id)_syncContextForContextIdentifier:(id)arg1 sourceAppIdentifier:(id)arg2 isShared:(BOOL)arg3 createIfNeeded:(BOOL)arg4 ;
-(id)syncContextForZone:(id)arg1 metadata:(BOOL)arg2 createIfNeeded:(BOOL)arg3 ;
-(id)syncContextForZone:(id)arg1 createIfNeeded:(BOOL)arg2 ;
-(id)globalItemByDocumentID:(unsigned)arg1 db:(id)arg2 ;
-(id)globalItemByFileID:(unsigned long long)arg1 db:(id)arg2 ;
-(id)_containerMetadataRecordsToSaveWithBatchSize:(unsigned long long)arg1 ;
-(NSString *)accountID;
-(BOOL)openWithError:(id*)arg1 ;
-(BRCServerPersistedState *)serverState;
-(BRCClientState *)clientState;
@end

