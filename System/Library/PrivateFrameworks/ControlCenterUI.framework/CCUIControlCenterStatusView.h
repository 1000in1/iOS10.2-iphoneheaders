/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:56:16 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/ControlCenterUI.framework/ControlCenterUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ControlCenterUI/ControlCenterUI-Structs.h>
#import <UIKit/UIView.h>
#import <libobjc.A.dylib/CCUIControlCenterObserver.h>

@protocol CCUIControlCenterStatusViewDelegate;
@class CCUIControlCenterLabel, NSMutableDictionary, NSMutableArray, CCUIControlCenterStatusUpdate, BSTimer, NSString;

@interface CCUIControlCenterStatusView : UIView <CCUIControlCenterObserver> {

	CCUIControlCenterLabel* _statusLabel;
	CCUIControlCenterLabel* _statusLabel2;
	int _statusState;
	NSMutableDictionary* _statusByReason;
	NSMutableArray* _statusReasonQueue;
	CCUIControlCenterStatusUpdate* _activeStatus;
	BSTimer* _statusTimer;
	id<CCUIControlCenterStatusViewDelegate> _delegate;

}

@property (assign,nonatomic,__weak) id<CCUIControlCenterStatusViewDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setDelegate:(id<CCUIControlCenterStatusViewDelegate>)arg1 ;
-(void)dealloc;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(id<CCUIControlCenterStatusViewDelegate>)delegate;
-(CGSize)intrinsicContentSize;
-(id)initWithDelegate:(id)arg1 ;
-(id)viewForFirstBaselineLayout;
-(void)_setStatusState:(int)arg1 ;
-(long long)_layoutStyle;
-(void)presentStatusUpdate:(id)arg1 ;
-(BOOL)_hasPendingStatus;
-(void)_animateNextStatus;
-(id)_popNextStatus;
-(id)_getNextStatusString;
-(void)_animateWithDuration:(double)arg1 delay:(double)arg2 animations:(/*^block*/id)arg3 ;
-(void)_animateWithDuration:(double)arg1 animations:(/*^block*/id)arg2 ;
-(void)_restartTimerWithInterval:(double)arg1 handler:(/*^block*/id)arg2 ;
-(void)_resetLabelState;
-(void)_rescindStatusUpdate:(id)arg1 ;
-(void)_evaluateStatusStateForNewStatus:(id)arg1 ;
-(id)_peekNextStatus;
-(void)controlCenterWillPresent;
-(void)controlCenterDidDismiss;
-(void)controlCenterWillBeginTransition;
-(void)controlCenterDidFinishTransition;
@end

