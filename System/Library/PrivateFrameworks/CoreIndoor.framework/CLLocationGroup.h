/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:56:21 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/CoreIndoor.framework/CoreIndoor
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <CoreIndoor/CoreIndoor-Structs.h>
@class NSString, ECEFCoordinate, GeographicCoordinate;

@interface CLLocationGroup : NSObject {

	NSString* _groupId;
	ECEFCoordinate* _centerECEF;
	GeographicCoordinate* _centerLatLon;
	double _tolerance;
	vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >* _locationIds;
	polygon<boost::geometry::model::d2::point_xy<double, boost::geometry::cs::cartesian>, true, true, std::vector, std::vector, std::allocator, std::allocator>* _vertices;

}

@property (readonly) NSString * groupId;                                                      //@synthesize groupId=_groupId - In the implementation block
@property (readonly) vector<std::__1::basic_string<char> locationIds;                         //@synthesize locationIds=_locationIds - In the implementation block
@property (readonly) ECEFCoordinate * centerECEF;                                             //@synthesize centerECEF=_centerECEF - In the implementation block
@property (readonly) GeographicCoordinate * centerLatLon;                                     //@synthesize centerLatLon=_centerLatLon - In the implementation block
@property (assign) polygon<boost::geometry::model::d2::point_xy<double vertices;              //@synthesize vertices=_vertices - In the implementation block
@property (readonly) double tolerance;                                                        //@synthesize tolerance=_tolerance - In the implementation block
+(id)average:(id)arg1 ;
+(vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >*)stringVectorFromNSArray:(id)arg1 ;
-(double)tolerance;
-(id)init;
-(polygon<boost::geometry::model::d2::point_xy<double)vertices;
-(void)setVertices:(polygon<boost::geometry::model::d2::point_xy<double)arg1 ;
-(double)distance:(id)arg1 ;
-(id)initWithGroupId:(id)arg1 locationIds:(id)arg2 vertices:(id)arg3 andTolerance:(double)arg4 ;
-(const vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >*)getLocationIds;
-(vector<std::__1::basic_string<char>)locationIds;
-(ECEFCoordinate *)centerECEF;
-(GeographicCoordinate *)centerLatLon;
-(NSString *)groupId;
@end

