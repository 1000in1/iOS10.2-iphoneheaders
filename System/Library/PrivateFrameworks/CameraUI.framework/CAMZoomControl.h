/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:56:02 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CameraUI/CameraUI-Structs.h>
#import <UIKit/UIControl.h>
#import <libobjc.A.dylib/CAMZoomButtonDelegate.h>

@protocol CAMZoomControlDelegate;
@class CAMZoomButton, CAMZoomDial, UIView, CAMZoomControlButtonMaskView, NSTimer, NSDate, NSString;

@interface CAMZoomControl : UIControl <CAMZoomButtonDelegate> {

	BOOL _zoomDialEnabled;
	BOOL __eligibleForTapInEmptySpace;
	BOOL __shouldShowZoomDial;
	id<CAMZoomControlDelegate> _delegate;
	long long _layoutStyle;
	long long _orientation;
	CAMZoomButton* __zoomButton;
	CAMZoomDial* __zoomDial;
	UIView* __dialClippingView;
	CAMZoomControlButtonMaskView* __buttonMaskView;
	double __previousTouchTime;
	NSTimer* __zoomDialVisibilityTimer;
	NSDate* __startTimeForHideAnimationInProgress;
	CGPoint __startTouchLocation;
	CGPoint __previousTouchLocation;
	UIEdgeInsets _contentInsets;

}

@property (nonatomic,readonly) CAMZoomButton * _zoomButton;                                                                                             //@synthesize _zoomButton=__zoomButton - In the implementation block
@property (nonatomic,readonly) CAMZoomDial * _zoomDial;                                                                                                 //@synthesize _zoomDial=__zoomDial - In the implementation block
@property (nonatomic,readonly) UIView * _dialClippingView;                                                                                              //@synthesize _dialClippingView=__dialClippingView - In the implementation block
@property (nonatomic,readonly) CAMZoomControlButtonMaskView * _buttonMaskView;                                                                          //@synthesize _buttonMaskView=__buttonMaskView - In the implementation block
@property (assign,setter=_setStartTouchLocation:,nonatomic) CGPoint _startTouchLocation;                                                                //@synthesize _startTouchLocation=__startTouchLocation - In the implementation block
@property (assign,setter=_setPreviousTouchLocation:,nonatomic) CGPoint _previousTouchLocation;                                                          //@synthesize _previousTouchLocation=__previousTouchLocation - In the implementation block
@property (assign,setter=_setPreviousTouchTime:,nonatomic) double _previousTouchTime;                                                                   //@synthesize _previousTouchTime=__previousTouchTime - In the implementation block
@property (assign,setter=_setEligibleForTapInEmptySpace:,getter=_isEligibleForTapInEmptySpace,nonatomic) BOOL _eligibleForTapInEmptySpace;              //@synthesize _eligibleForTapInEmptySpace=__eligibleForTapInEmptySpace - In the implementation block
@property (setter=_setZoomDialVisibilityTimer:,nonatomic,retain) NSTimer * _zoomDialVisibilityTimer;                                                    //@synthesize _zoomDialVisibilityTimer=__zoomDialVisibilityTimer - In the implementation block
@property (assign,setter=_setShouldShowZoomDial:,nonatomic) BOOL _shouldShowZoomDial;                                                                   //@synthesize _shouldShowZoomDial=__shouldShowZoomDial - In the implementation block
@property (setter=_setStartTimeForHideAnimationInProgress:,nonatomic,retain) NSDate * _startTimeForHideAnimationInProgress;                             //@synthesize _startTimeForHideAnimationInProgress=__startTimeForHideAnimationInProgress - In the implementation block
@property (assign,nonatomic,__weak) id<CAMZoomControlDelegate> delegate;                                                                                //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) long long layoutStyle;                                                                                                     //@synthesize layoutStyle=_layoutStyle - In the implementation block
@property (assign,nonatomic) UIEdgeInsets contentInsets;                                                                                                //@synthesize contentInsets=_contentInsets - In the implementation block
@property (assign,nonatomic) double minimumZoomFactor; 
@property (assign,nonatomic) double maximumZoomFactor; 
@property (assign,nonatomic) double zoomFactor; 
@property (assign,nonatomic) BOOL shouldShowLabelAt2x; 
@property (assign,nonatomic) BOOL shouldDisableValuesBelow2x; 
@property (assign,getter=isZoomDialEnabled,nonatomic) BOOL zoomDialEnabled;                                                                             //@synthesize zoomDialEnabled=_zoomDialEnabled - In the implementation block
@property (assign,nonatomic) long long orientation;                                                                                                     //@synthesize orientation=_orientation - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)layoutSubviews;
-(void)setDelegate:(id<CAMZoomControlDelegate>)arg1 ;
-(id)hitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
-(id<CAMZoomControlDelegate>)delegate;
-(void)setOrientation:(long long)arg1 ;
-(void)setOrientation:(long long)arg1 animated:(BOOL)arg2 ;
-(long long)orientation;
-(UIEdgeInsets)contentInsets;
-(void)setContentInsets:(UIEdgeInsets)arg1 ;
-(UIEdgeInsets)alignmentRectInsets;
-(void)cancelTrackingWithEvent:(id)arg1 ;
-(BOOL)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(BOOL)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(long long)layoutStyle;
-(void)setLayoutStyle:(long long)arg1 ;
-(id)initWithLayoutStyle:(long long)arg1 ;
-(CAMZoomDial *)_zoomDial;
-(double)minimumZoomFactor;
-(void)setMinimumZoomFactor:(double)arg1 ;
-(double)maximumZoomFactor;
-(void)setMaximumZoomFactor:(double)arg1 ;
-(void)_setZoomFactor:(double)arg1 shouldNotifyDelegate:(BOOL)arg2 ;
-(BOOL)shouldDisableValuesBelow2x;
-(CAMZoomButton *)_zoomButton;
-(BOOL)shouldShowLabelAt2x;
-(void)setShouldShowLabelAt2x:(BOOL)arg1 ;
-(void)setShouldDisableValuesBelow2x:(BOOL)arg1 ;
-(void)setZoomDialEnabled:(BOOL)arg1 animated:(BOOL)arg2 ;
-(void)_setShouldShowZoomDial:(BOOL)arg1 animationSpeed:(double)arg2 ;
-(void)_cancelDelayedZoomDialVisibilityChange;
-(void)_setStartTimeForHideAnimationInProgress:(id)arg1 ;
-(CAMZoomControlButtonMaskView *)_buttonMaskView;
-(void)_setEligibleForTapInEmptySpace:(BOOL)arg1 ;
-(BOOL)isZoomDialEnabled;
-(void)_setShouldShowZoomDial:(BOOL)arg1 animationSpeed:(double)arg2 afterDelay:(double)arg3 ;
-(void)_handleZoomDialVisibilityTimerFiredWithUserInfo:(id)arg1 ;
-(UIView *)_dialClippingView;
-(void)_updateMaskViewForZoomButtonHighlightingTransform;
-(double)_distanceFromDialClippingViewToPoint:(CGPoint)arg1 ;
-(double)_dampingFactorForDistanceFromDialForPoint:(CGPoint)arg1 ;
-(double)_dampingFactorForPerpendicularityFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 ;
-(double)_normalizeValue:(double)arg1 betweenMinimumValue:(double)arg2 maximumValue:(double)arg3 ;
-(double)_additionalAccelerationForMovementFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 deltaX:(double)arg3 ;
-(NSDate *)_startTimeForHideAnimationInProgress;
-(BOOL)_shouldShowZoomDial;
-(BOOL)_shouldInterceptTouchesForHidingZoomDial;
-(void)_setStartTouchLocation:(CGPoint)arg1 ;
-(void)_setPreviousTouchLocation:(CGPoint)arg1 ;
-(void)_setPreviousTouchTime:(double)arg1 ;
-(BOOL)_isWithinZoomButtonBoundsWithTouch:(id)arg1 ;
-(CGPoint)_startTouchLocation;
-(CGPoint)_previousTouchLocation;
-(double)_previousTouchTime;
-(double)_dampingFactorForMovementFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 ;
-(double)_accelerationForMovementFromPointFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 elapsedTime:(double)arg3 ;
-(BOOL)_isEligibleForTapInEmptySpace;
-(void)zoomButtonDidLayout;
-(void)setZoomDialEnabled:(BOOL)arg1 ;
-(void)_setShouldShowZoomDial:(BOOL)arg1 ;
-(void)setShouldShowZoomDial:(BOOL)arg1 animationSpeed:(double)arg2 afterDelay:(double)arg3 ;
-(NSTimer *)_zoomDialVisibilityTimer;
-(void)_setZoomDialVisibilityTimer:(id)arg1 ;
-(void)setZoomFactor:(double)arg1 ;
-(double)zoomFactor;
@end

