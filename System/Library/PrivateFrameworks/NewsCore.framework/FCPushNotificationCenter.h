/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:57:15 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/FCPushNotificationHandling.h>

@class FCCKDatabase, FCAsyncSerialQueue, NSMutableDictionary, NSMapTable, NSString;

@interface FCPushNotificationCenter : NSObject <FCPushNotificationHandling> {

	BOOL _syncingEnabled;
	FCCKDatabase* _privateDatabase;
	FCAsyncSerialQueue* _fetchQueue;
	NSMutableDictionary* _subscriptionsByID;
	NSMapTable* _recordZoneObservers;

}

@property (nonatomic,retain) FCCKDatabase * privateDatabase;                           //@synthesize privateDatabase=_privateDatabase - In the implementation block
@property (nonatomic,retain) FCAsyncSerialQueue * fetchQueue;                          //@synthesize fetchQueue=_fetchQueue - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * subscriptionsByID;                  //@synthesize subscriptionsByID=_subscriptionsByID - In the implementation block
@property (nonatomic,retain) NSMapTable * recordZoneObservers;                         //@synthesize recordZoneObservers=_recordZoneObservers - In the implementation block
@property (assign,getter=isSyncingEnabled,nonatomic) BOOL syncingEnabled;              //@synthesize syncingEnabled=_syncingEnabled - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)init;
-(void)removeRecordZoneObserver:(id)arg1 ;
-(BOOL)isSyncingEnabled;
-(FCCKDatabase *)privateDatabase;
-(void)setSyncingEnabled:(BOOL)arg1 ;
-(void)addObserver:(id)arg1 forChangesToRecordZone:(id)arg2 usingBlock:(/*^block*/id)arg3 ;
-(void)enableSyncing;
-(void)disableSyncing;
-(void)prepareForUse;
-(NSMapTable *)recordZoneObservers;
-(void)_handlePrivateDatabaseNotification:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_handleRecordZoneNotification:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)serverChangeTokenKey;
-(void)_fetchChangesForRecordZoneIDs:(id)arg1 ;
-(void)_deleteLocalDataForRecordZoneIDs:(id)arg1 ;
-(void)_saveDatabaseServerChangeToken:(id)arg1 ;
-(NSMutableDictionary *)subscriptionsByID;
-(void)setSubscriptionsByID:(NSMutableDictionary *)arg1 ;
-(FCAsyncSerialQueue *)fetchQueue;
-(void)fetchAllSubscriptionsInDatabase:(id)arg1 ;
-(void)deleteSubscriptionWithID:(id)arg1 inDatabase:(id)arg2 ;
-(void)handleRemoteNotification:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)initWithPrivateDatabase:(id)arg1 storeDirectory:(id)arg2 ;
-(id)subscriptionIDForRecordZoneWithName:(id)arg1 ;
-(void)removeAllRecordZoneSubscriptionsInDatabase:(id)arg1 ;
-(void)ensureSubscriptionExistsWithID:(id)arg1 database:(id)arg2 recordZone:(id)arg3 createBlock:(/*^block*/id)arg4 ;
-(void)setPrivateDatabase:(FCCKDatabase *)arg1 ;
-(void)setFetchQueue:(FCAsyncSerialQueue *)arg1 ;
-(void)setRecordZoneObservers:(NSMapTable *)arg1 ;
@end

