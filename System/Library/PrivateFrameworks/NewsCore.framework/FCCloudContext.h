/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:57:15 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/FCTestingContext.h>
#import <libobjc.A.dylib/FCContentContext.h>
#import <libobjc.A.dylib/FCPrivateDataContext.h>
#import <libobjc.A.dylib/FCCacheFlushing.h>

@protocol FCFlintHelper, FCContentContext, FCPrivateDataContext;
@class NSString, FCAppConfiguration, FCAssetManager, FCArticleController, FCTagController, FCFlintResourceManager, FCPersonalizationData, FCPrivateChannelMembershipController, FCReadingHistory, FCReadingList, FCSubscriptionList, FCUserInfo, FCTagSettings, FCSubscriptionController, FCFeedManager, FCNetworkBehaviorMonitor, FCClientEndpointConnection, FCCommandQueue, FCNotificationsEndpointConnection, FCNotificationController, FCPurchaseController;

@interface FCCloudContext : NSObject <FCTestingContext, FCContentContext, FCPrivateDataContext, FCCacheFlushing> {

	BOOL _deviceIsiPad;
	BOOL _runningPPT;
	FCSubscriptionController* _subscriptionController;
	FCFeedManager* _feedManager;
	FCNetworkBehaviorMonitor* _networkBehaviorMonitor;
	FCClientEndpointConnection* _endpointConnection;
	FCCommandQueue* _endpointCommandQueue;
	FCNotificationsEndpointConnection* _notificationsEndpointConnection;
	FCCommandQueue* _notificationsEndpointCommandQueue;
	FCNotificationController* _notificationController;
	FCPurchaseController* _purchaseController;
	id<FCFlintHelper> _flintHelper;
	id<FCContentContext> _contentContext;
	id<FCPrivateDataContext> _privateDataContext;

}

@property (nonatomic,retain) id<FCContentContext> contentContext;                                                      //@synthesize contentContext=_contentContext - In the implementation block
@property (nonatomic,retain) id<FCPrivateDataContext> privateDataContext;                                              //@synthesize privateDataContext=_privateDataContext - In the implementation block
@property (nonatomic,readonly) FCSubscriptionController * subscriptionController;                                      //@synthesize subscriptionController=_subscriptionController - In the implementation block
@property (nonatomic,readonly) FCNotificationController * notificationController;                                      //@synthesize notificationController=_notificationController - In the implementation block
@property (nonatomic,readonly) FCPurchaseController * purchaseController;                                              //@synthesize purchaseController=_purchaseController - In the implementation block
@property (nonatomic,readonly) FCFeedManager * feedManager;                                                            //@synthesize feedManager=_feedManager - In the implementation block
@property (nonatomic,readonly) FCNetworkBehaviorMonitor * networkBehaviorMonitor;                                      //@synthesize networkBehaviorMonitor=_networkBehaviorMonitor - In the implementation block
@property (assign,nonatomic,__weak) id<FCFlintHelper> flintHelper;                                                     //@synthesize flintHelper=_flintHelper - In the implementation block
@property (nonatomic,readonly) BOOL deviceIsiPad;                                                                      //@synthesize deviceIsiPad=_deviceIsiPad - In the implementation block
@property (nonatomic,readonly) FCClientEndpointConnection * endpointConnection;                                        //@synthesize endpointConnection=_endpointConnection - In the implementation block
@property (nonatomic,readonly) FCNotificationsEndpointConnection * notificationsEndpointConnection;                    //@synthesize notificationsEndpointConnection=_notificationsEndpointConnection - In the implementation block
@property (nonatomic,readonly) FCCommandQueue * endpointCommandQueue;                                                  //@synthesize endpointCommandQueue=_endpointCommandQueue - In the implementation block
@property (nonatomic,readonly) FCCommandQueue * notificationsEndpointCommandQueue;                                     //@synthesize notificationsEndpointCommandQueue=_notificationsEndpointCommandQueue - In the implementation block
@property (assign,getter=isRunningPPT,nonatomic) BOOL runningPPT;                                                      //@synthesize runningPPT=_runningPPT - In the implementation block
@property (nonatomic,readonly) BOOL hasBeenRateLimited; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy,readonly) NSString * contentStoreFrontID; 
@property (nonatomic,readonly) FCAppConfiguration * appConfiguration; 
@property (nonatomic,readonly) FCAssetManager * assetManager; 
@property (nonatomic,readonly) FCArticleController * articleController; 
@property (nonatomic,readonly) FCTagController * tagController; 
@property (nonatomic,readonly) FCFlintResourceManager * flintResourceManager; 
@property (nonatomic,copy,readonly) NSString * contentDirectory; 
@property (nonatomic,readonly) id<FCContentContextInternal> internalContentContext; 
@property (nonatomic,readonly) FCPersonalizationData * personalizationData; 
@property (nonatomic,readonly) FCPrivateChannelMembershipController * privateChannelMembershipController; 
@property (nonatomic,readonly) FCReadingHistory * readingHistory; 
@property (nonatomic,readonly) FCReadingList * readingList; 
@property (nonatomic,readonly) FCSubscriptionList * subscriptionList; 
@property (nonatomic,readonly) FCUserInfo * userInfo; 
@property (nonatomic,readonly) FCTagSettings * tagSettings; 
@property (nonatomic,readonly) id<FCPushNotificationHandling> privatePushNotificationHandler; 
@property (getter=isPrivateDataSyncingEnabled,nonatomic,readonly) BOOL privateDataSyncingEnabled; 
@property (nonatomic,copy,readonly) NSString * privateDataDirectory; 
@property (nonatomic,readonly) id<FCPrivateDataContextInternal> internalPrivateDataContext; 
+(void)initialize;
+(id)testingContext;
-(id)init;
-(FCUserInfo *)userInfo;
-(FCAssetManager *)assetManager;
-(FCPersonalizationData *)personalizationData;
-(NSString *)contentStoreFrontID;
-(FCNotificationsEndpointConnection *)notificationsEndpointConnection;
-(FCFeedManager *)feedManager;
-(FCAppConfiguration *)appConfiguration;
-(FCTagController *)tagController;
-(void)enableFlushingWithFlushingThreshold:(unsigned long long)arg1 ;
-(FCSubscriptionController *)subscriptionController;
-(id<FCContentContextInternal>)internalContentContext;
-(FCTagSettings *)tagSettings;
-(FCClientEndpointConnection *)endpointConnection;
-(FCReadingHistory *)readingHistory;
-(FCPurchaseController *)purchaseController;
-(FCSubscriptionList *)subscriptionList;
-(BOOL)isRunningPPT;
-(FCArticleController *)articleController;
-(FCReadingList *)readingList;
-(id<FCPrivateDataContextInternal>)internalPrivateDataContext;
-(FCNotificationController *)notificationController;
-(void)setContentContext:(id<FCContentContext>)arg1 ;
-(BOOL)isPrivateDataSyncingEnabled;
-(id)initWithContentContext:(id)arg1 privateDataContext:(id)arg2 networkBehaviorMonitor:(id)arg3 ;
-(id)initForTesting;
-(id<FCContentContext>)contentContext;
-(FCFlintResourceManager *)flintResourceManager;
-(NSString *)contentDirectory;
-(BOOL)hasBeenRateLimited;
-(id<FCPrivateDataContext>)privateDataContext;
-(FCPrivateChannelMembershipController *)privateChannelMembershipController;
-(id)privateStoreWithName:(id)arg1 version:(unsigned long long)arg2 options:(unsigned long long)arg3 ;
-(NSString *)privateDataDirectory;
-(id<FCPushNotificationHandling>)privatePushNotificationHandler;
-(void)clearCloudKitCaches;
-(id)insertTestArticle;
-(id)insertTestArticlesWithCount:(unsigned long long)arg1 ;
-(id)initWithContentHostDirectory:(id)arg1 privateDataHostDirectory:(id)arg2 privateDataActionProvider:(id)arg3 networkBehaviorMonitor:(id)arg4 desiredHeadlineFieldOptions:(unsigned long long)arg5 feedUsage:(long long)arg6 lockStoreFrontIfNeeded:(BOOL)arg7 deviceIsiPad:(BOOL)arg8 ;
-(id)notificationsController;
-(FCNetworkBehaviorMonitor *)networkBehaviorMonitor;
-(FCCommandQueue *)endpointCommandQueue;
-(FCCommandQueue *)notificationsEndpointCommandQueue;
-(void)getCoverImageForFeed:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)fetchEndOfArticleDataForHeadline:(id)arg1 initialRelatedHeadlineCount:(unsigned long long)arg2 initialPublisherHeadlineCount:(unsigned long long)arg3 totalRelatedHeadlineCount:(unsigned long long)arg4 totalPublisherHeadlineCount:(unsigned long long)arg5 fetchRelatedHeadline:(BOOL)arg6 fetchAllTopics:(BOOL)arg7 completion:(/*^block*/id)arg8 ;
-(id<FCFlintHelper>)flintHelper;
-(void)setFlintHelper:(id<FCFlintHelper>)arg1 ;
-(BOOL)deviceIsiPad;
-(void)setRunningPPT:(BOOL)arg1 ;
-(void)setPrivateDataContext:(id<FCPrivateDataContext>)arg1 ;
@end

