/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:57:15 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/FCTagsFetchOperationDelegate.h>

@class FCCKDatabase, FCAssetManager, FCTagRecordSource, NSCache, FCTagsSearchOperation, NSString;

@interface FCTagController : NSObject <FCTagsFetchOperationDelegate> {

	FCCKDatabase* _contentDatabase;
	FCAssetManager* _assetManager;
	FCTagRecordSource* _tagRecordSource;
	NSCache* _fastCache;
	FCTagsSearchOperation* _topicSearchOperation;
	FCTagsSearchOperation* _channelSearchOperation;

}

@property (nonatomic,retain) FCCKDatabase * contentDatabase;                              //@synthesize contentDatabase=_contentDatabase - In the implementation block
@property (nonatomic,retain) FCAssetManager * assetManager;                               //@synthesize assetManager=_assetManager - In the implementation block
@property (nonatomic,retain) FCTagRecordSource * tagRecordSource;                         //@synthesize tagRecordSource=_tagRecordSource - In the implementation block
@property (nonatomic,retain) NSCache * fastCache;                                         //@synthesize fastCache=_fastCache - In the implementation block
@property (nonatomic,retain) FCTagsSearchOperation * topicSearchOperation;                //@synthesize topicSearchOperation=_topicSearchOperation - In the implementation block
@property (nonatomic,retain) FCTagsSearchOperation * channelSearchOperation;              //@synthesize channelSearchOperation=_channelSearchOperation - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)isTagAllowed:(id)arg1 ;
+(BOOL)isTagAllowedInContentStoreFront:(id)arg1 ;
-(id)init;
-(FCAssetManager *)assetManager;
-(void)setAssetManager:(FCAssetManager *)arg1 ;
-(id)_cachedTagForTagID:(id)arg1 ;
-(id)_cachedTagsForTagIDs:(id)arg1 ;
-(FCTagRecordSource *)tagRecordSource;
-(void)fetchTagsForTagIDs:(id)arg1 maximumCachedAge:(double)arg2 qualityOfService:(long long)arg3 callbackQueue:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(id)fetchOperationForTagsWithIDs:(id)arg1 ;
-(void)_fetchTagsForTagIDs:(id)arg1 qualityOfService:(long long)arg2 callbackQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_fetchTagForTagID:(id)arg1 qualityOfService:(long long)arg2 callbackQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)tagsForTagIDs:(id)arg1 maximumCachedAge:(double)arg2 predicate:(/*^block*/id)arg3 ;
-(id)tagsForTagIDs:(id)arg1 predicate:(/*^block*/id)arg2 ;
-(NSCache *)fastCache;
-(void)refreshTagsBasedOnAgeForTagIDs:(id)arg1 ;
-(FCTagsSearchOperation *)topicSearchOperation;
-(FCCKDatabase *)contentDatabase;
-(void)setTopicSearchOperation:(FCTagsSearchOperation *)arg1 ;
-(FCTagsSearchOperation *)channelSearchOperation;
-(void)setChannelSearchOperation:(FCTagsSearchOperation *)arg1 ;
-(void)saveTagsToCache:(id)arg1 ;
-(void)tagsFetchOperation:(id)arg1 didFetchTagsByID:(id)arg2 ;
-(id)initWithContentDatabase:(id)arg1 assetManager:(id)arg2 tagRecordSource:(id)arg3 ;
-(id)cachedTagForID:(id)arg1 ;
-(id)cachedTagsForIDs:(id)arg1 ;
-(id)fetchOperationForTagsWithIDs:(id)arg1 includeChildren:(BOOL)arg2 ;
-(void)fetchTagForTagID:(id)arg1 maximumCachedAge:(double)arg2 qualityOfService:(long long)arg3 callbackQueue:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)fetchTagsForTagIDs:(id)arg1 qualityOfService:(long long)arg2 callbackQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)fetchTagsForTagIDs:(id)arg1 callbackQueue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)fetchTagForTagID:(id)arg1 qualityOfService:(long long)arg2 callbackQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)tagsForTagIDs:(id)arg1 ;
-(void)fetchTopicsForSearchString:(id)arg1 batchSize:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)fetchChannelsForSearchString:(id)arg1 batchSize:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)setContentDatabase:(FCCKDatabase *)arg1 ;
-(void)setTagRecordSource:(FCTagRecordSource *)arg1 ;
-(void)setFastCache:(NSCache *)arg1 ;
@end

