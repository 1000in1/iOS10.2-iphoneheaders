/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:57:16 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/FCCloudKitCacheClearing.h>

@protocol FCCKDatabaseDelegate, OS_dispatch_queue;
@class CKDatabase, NSArray, FCNetworkBehaviorMonitor, NSString, NSObject, NSMutableArray;

@interface FCCKDatabase : NSObject <FCCloudKitCacheClearing> {

	BOOL _hasBeenRateLimited;
	BOOL _preferAnonymousRequests;
	BOOL _ready;
	id<FCCKDatabaseDelegate> _delegate;
	CKDatabase* _database;
	NSArray* _middleware;
	FCNetworkBehaviorMonitor* _networkBehaviorMonitor;
	NSString* _containerIdentifier;
	NSObject*<OS_dispatch_queue> _queue;
	NSArray* _startUpMiddleware;
	NSArray* _operationMiddleware;
	NSArray* _recordMiddleware;
	NSMutableArray* _pendingOperations;
	long long _status;
	/*^block*/id _startUpCompletion;

}

@property (nonatomic,retain) CKDatabase * database;                                          //@synthesize database=_database - In the implementation block
@property (nonatomic,retain) NSString * containerIdentifier;                                 //@synthesize containerIdentifier=_containerIdentifier - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                             //@synthesize queue=_queue - In the implementation block
@property (nonatomic,retain) NSArray * middleware;                                           //@synthesize middleware=_middleware - In the implementation block
@property (nonatomic,retain) NSArray * startUpMiddleware;                                    //@synthesize startUpMiddleware=_startUpMiddleware - In the implementation block
@property (nonatomic,retain) NSArray * operationMiddleware;                                  //@synthesize operationMiddleware=_operationMiddleware - In the implementation block
@property (nonatomic,retain) NSArray * recordMiddleware;                                     //@synthesize recordMiddleware=_recordMiddleware - In the implementation block
@property (nonatomic,retain) NSMutableArray * pendingOperations;                             //@synthesize pendingOperations=_pendingOperations - In the implementation block
@property (assign,getter=isReady,nonatomic) BOOL ready;                                      //@synthesize ready=_ready - In the implementation block
@property (assign,nonatomic) long long status;                                               //@synthesize status=_status - In the implementation block
@property (nonatomic,copy) id startUpCompletion;                                             //@synthesize startUpCompletion=_startUpCompletion - In the implementation block
@property (assign,nonatomic,__weak) id<FCCKDatabaseDelegate> delegate;                       //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) long long containerEnvironment; 
@property (nonatomic,readonly) BOOL hasBeenRateLimited;                                      //@synthesize hasBeenRateLimited=_hasBeenRateLimited - In the implementation block
@property (nonatomic,retain) FCNetworkBehaviorMonitor * networkBehaviorMonitor;              //@synthesize networkBehaviorMonitor=_networkBehaviorMonitor - In the implementation block
@property (assign) BOOL preferAnonymousRequests;                                             //@synthesize preferAnonymousRequests=_preferAnonymousRequests - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)testingDatabase;
+(id)fc_databaseForPrivateCloudKitDatabase:(id)arg1 withNetworkBehaviorMonitor:(id)arg2 privateDataSyncingEnabled:(BOOL)arg3 ;
+(id)fc_privateDatabaseMiddlewareWithNetworkBehaviorMonitor:(id)arg1 privateDataSyncingEnabled:(BOOL)arg2 ;
+(id)fc_contentDatabaseMiddlewareWithNetworkBehaviorMonitor:(id)arg1 ;
+(id)fc_databaseForContentCloudKitDatabase:(id)arg1 withNetworkBehaviorMonitor:(id)arg2 ;
-(void)setDelegate:(id<FCCKDatabaseDelegate>)arg1 ;
-(id<FCCKDatabaseDelegate>)delegate;
-(BOOL)_isEnabled;
-(void)addOperation:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(long long)status;
-(void)setStatus:(long long)arg1 ;
-(NSString *)containerIdentifier;
-(void)setContainerIdentifier:(NSString *)arg1 ;
-(CKDatabase *)database;
-(void)setDatabase:(CKDatabase *)arg1 ;
-(void)saveRecordZone:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)fetchRecordZoneWithID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)deleteRecordWithID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setPreferAnonymousRequests:(BOOL)arg1 ;
-(BOOL)preferAnonymousRequests;
-(void)fetchChangesForRecordZoneID:(id)arg1 changeToken:(id)arg2 desiredKeys:(id)arg3 fetchAllChanges:(BOOL)arg4 qualityOfService:(long long)arg5 completionHandler:(/*^block*/id)arg6 ;
-(BOOL)hasBeenRateLimited;
-(void)clearCloudKitCaches;
-(FCNetworkBehaviorMonitor *)networkBehaviorMonitor;
-(void)fetchDatabaseChangesWithServerChangeToken:(id)arg1 fetchAllChanges:(BOOL)arg2 qualityOfService:(long long)arg3 completionQueue:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)fetchAllSubscriptionsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)saveSubscription:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)deleteSubscriptionWithID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(long long)containerEnvironment;
-(void)operationWasRateLimitedWithError:(id)arg1 ;
-(void)setNetworkBehaviorMonitor:(FCNetworkBehaviorMonitor *)arg1 ;
-(void)_cacheMiddleware;
-(void)_performStartUpWithCompletion:(/*^block*/id)arg1 ;
-(id)initWithDatabase:(id)arg1 middleware:(id)arg2 networkBehaviorMonitor:(id)arg3 startUp:(BOOL)arg4 ;
-(id)initWithDatabase:(id)arg1 middleware:(id)arg2 networkBehaviorMonitor:(id)arg3 ;
-(BOOL)_preflightOperation:(id)arg1 ;
-(void)_cancelOperation:(id)arg1 ;
-(void)_addOperation:(id)arg1 ;
-(NSMutableArray *)pendingOperations;
-(NSArray *)startUpMiddleware;
-(void)q_startUpWithMiddleware:(id)arg1 ;
-(void)q_finishStartUpWithResult:(long long)arg1 ;
-(void)setReady:(BOOL)arg1 ;
-(void)q_resumePendingOperations;
-(void)q_cancelPendingOperations;
-(id)startUpCompletion;
-(void)setStartUpCompletion:(id)arg1 ;
-(NSArray *)operationMiddleware;
-(void)_preflightRecordsInModifyOperation:(id)arg1 ;
-(void)_preflightRecordsInRecordZoneChangesOperation:(id)arg1 ;
-(void)_preflightRecordsInFetchOperation:(id)arg1 ;
-(void)_preflightRecordsInQueryOperation:(id)arg1 ;
-(id)_mapRecords:(id)arg1 client:(BOOL)arg2 ;
-(id)_clientRecord:(id)arg1 ;
-(NSArray *)middleware;
-(void)setStartUpMiddleware:(NSArray *)arg1 ;
-(void)setOperationMiddleware:(NSArray *)arg1 ;
-(void)setRecordMiddleware:(NSArray *)arg1 ;
-(id)_mapObjects:(id)arg1 withRecordMiddlewareBlock:(/*^block*/id)arg2 ;
-(NSArray *)recordMiddleware;
-(id)_serverRecord:(id)arg1 ;
-(void)setMiddleware:(NSArray *)arg1 ;
-(void)setPendingOperations:(NSMutableArray *)arg1 ;
-(void)fetchRecordsWithIDs:(id)arg1 desiredKeys:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)fetchRecordsWithIDs:(id)arg1 desiredKeys:(id)arg2 qualityOfService:(long long)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)saveRecord:(id)arg1 savePolicy:(long long)arg2 zoneBusyRetryCount:(unsigned long long)arg3 zoneBusyRetryMax:(unsigned long long)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)saveRecords:(id)arg1 savePolicy:(long long)arg2 progressHandler:(/*^block*/id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)performQuery:(id)arg1 inZoneWithID:(id)arg2 desiredKeys:(id)arg3 resultsLimit:(unsigned long long)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)deleteRecordWithID:(id)arg1 savePolicy:(long long)arg2 zoneBusyRetryCount:(unsigned long long)arg3 zoneBusyRetryMax:(unsigned long long)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)fetchRecordWithID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)fetchRecordWithID:(id)arg1 desiredKeys:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)saveRecord:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)saveRecord:(id)arg1 savePolicy:(long long)arg2 retryWhenZoneBusy:(BOOL)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)saveRecords:(id)arg1 progressHandler:(/*^block*/id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)performQuery:(id)arg1 desiredKeys:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)performQuery:(id)arg1 desiredKeys:(id)arg2 resultsLimit:(unsigned long long)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)performQuery:(id)arg1 inZoneWithID:(id)arg2 desiredKeys:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)performRecordIDsQuery:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)deleteRecordsWithIDs:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)deleteRecordWithID:(id)arg1 savePolicy:(long long)arg2 retryWhenZoneBusy:(BOOL)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)deleteRecordZoneWithID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)fetchChangesForRecordZoneIDs:(id)arg1 optionsByRecordZoneID:(id)arg2 fetchAllChanges:(BOOL)arg3 qualityOfService:(long long)arg4 completionHandler:(/*^block*/id)arg5 ;
-(BOOL)isReady;
@end

