/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:58:16 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKScreenCanvas.h>
#import <libobjc.A.dylib/VKMapModelDelegate.h>
#import <libobjc.A.dylib/VKInteractiveMap.h>

@protocol VKInteractiveMapDelegate;
@class NSArray, VKAnchorWrapper, VKMapModel, VKCamera, VKTimedAnimation, GEOResourceManifestConfiguration, VKSceneConfiguration, VKPolylineOverlayPainter, NSString;

@interface VKMapCanvas : VKScreenCanvas <VKMapModelDelegate, VKInteractiveMap> {

	VKMapModel* _map;
	CGSize _lastCanvasSize;
	VKCamera* _defaultTrackingCamera;
	float _lastValidCanvasSizeZoomLevel;
	BOOL _hasLastValidCanvasSizeZoomLevel;
	VKTimedAnimation* _horizontalOffsetAnimation;
	double _canonicalSkyHeight;
	id<VKInteractiveMapDelegate> _delegate;

}

@property (assign,nonatomic) BOOL shouldLoadFallbackTiles; 
@property (assign,nonatomic) BOOL shouldLoadMapMargin; 
@property (assign,nonatomic) id<VKInteractiveMapDelegate> delegate;                                           //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) GEOResourceManifestConfiguration * additionalManifestConfiguration; 
@property (assign,nonatomic) BOOL trafficEnabled; 
@property (assign,nonatomic) shared_ptr<gss::StylesheetManager<gss::PropertyID> >* styleManager; 
@property (nonatomic,readonly) VKSceneConfiguration * sceneConfiguration; 
@property (assign,nonatomic) long long mapType; 
@property (nonatomic,retain) VKCamera * defaultTrackingCamera;                                                //@synthesize defaultTrackingCamera=_defaultTrackingCamera - In the implementation block
@property (assign,nonatomic) BOOL labelMarkerSelectionEnabled; 
@property (nonatomic,retain) VKPolylineOverlayPainter * focusedLabelsPolylinePainter; 
@property (nonatomic,retain) id<GEORoutePreloadSession> routePreloadSession; 
@property (nonatomic,readonly) VKMapModel * map;                                                              //@synthesize map=_map - In the implementation block
@property (assign,nonatomic) id<VKRouteMatchedAnnotationPresentation> routeLineSplitAnnotation; 
@property (assign,nonatomic) double canonicalSkyHeight;                                                       //@synthesize canonicalSkyHeight=_canonicalSkyHeight - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) BOOL trafficIncidentsEnabled; 
@property (assign,nonatomic) long long shieldSize; 
@property (assign,nonatomic) long long navigationShieldSize; 
@property (assign,nonatomic) long long shieldIdiom; 
@property (assign,nonatomic) BOOL showsPointsOfInterest; 
@property (assign,nonatomic) BOOL showsBuildings; 
@property (assign,nonatomic) PolylineCoordinate routeUserOffset; 
@property (nonatomic,retain) NSArray * externalTrafficIncidents; 
@property (nonatomic,retain) NSArray * customFeatureDataSources; 
@property (assign,nonatomic) BOOL localizeLabels; 
@property (assign,nonatomic) unsigned char labelScaleFactor; 
@property (nonatomic,readonly) NSArray * rasterOverlays; 
@property (nonatomic,readonly) NSArray * visibleTileSets; 
@property (getter=isFullyDrawn,nonatomic,readonly) BOOL fullyDrawn; 
@property (nonatomic,readonly) VKAnchorWrapper * externalAnchors; 
+(BOOL)supportsMapType:(long long)arg1 scale:(int)arg2 manifestConfiguration:(id)arg3 ;
-(void)setNeedsDisplay;
-(void)setDelegate:(id<VKInteractiveMapDelegate>)arg1 ;
-(void)dealloc;
-(void)setHidden:(BOOL)arg1 ;
-(id<VKInteractiveMapDelegate>)delegate;
-(void)setContentsScale:(double)arg1 ;
-(VKMapModel *)map;
-(long long)mapType;
-(void)setMapType:(long long)arg1 ;
-(NSArray *)visibleTileSets;
-(id)detailedDescription;
-(id)detailedDescriptionDictionaryRepresentation;
-(void)setTrafficEnabled:(BOOL)arg1 ;
-(BOOL)trafficEnabled;
-(void)setStyleManager:(shared_ptr<gss::StylesheetManager<gss::PropertyID> >*)arg1 ;
-(void)forceSceneLoad;
-(void)setStylesheetName:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg1 ;
-(shared_ptr<gss::StylesheetManager<gss::PropertyID> >*)styleManager;
-(void)reloadStylesheet;
-(VehicleState)vehicleState;
-(void)setApplicationUILayout:(unsigned char)arg1 ;
-(unsigned char)applicationUILayout;
-(unsigned char)labelScaleFactor;
-(void)clearScene;
-(shared_ptr<md::LabelFeatureMarker>*)closestRoadMarkerForSelectionAtPoint:(CGPoint)arg1 ;
-(BOOL)shouldLoadFallbackTiles;
-(void)setShouldLoadMapMargin:(BOOL)arg1 ;
-(BOOL)shouldLoadMapMargin;
-(long long)navigationShieldSize;
-(void)setNavigationShieldSize:(long long)arg1 ;
-(long long)shieldIdiom;
-(void)setShieldIdiom:(long long)arg1 ;
-(void)setDesiredMapMode:(long long)arg1 immediate:(BOOL)arg2 ;
-(void)setCanonicalSkyHeight:(double)arg1 ;
-(double)_styleTransitionProgress;
-(void)setRoutePreloadSession:(id<GEORoutePreloadSession>)arg1 ;
-(id<GEORoutePreloadSession>)routePreloadSession;
-(NSArray *)externalTrafficIncidents;
-(void)setExternalTrafficIncidents:(NSArray *)arg1 ;
-(shared_ptr<md::LabelMarker>*)labelMarkerForCustomFeatureAnnotation:(id)arg1 dataSource:(id)arg2 ;
-(id)annotationMarkers;
-(void)setRouteUserOffset:(PolylineCoordinate)arg1 ;
-(void)setCurrentLocationText:(id)arg1 ;
-(VKPolylineOverlayPainter *)focusedLabelsPolylinePainter;
-(void)setFocusedLabelsPolylinePainter:(VKPolylineOverlayPainter *)arg1 ;
-(BOOL)isFullyDrawn;
-(void)goToTileX:(int)arg1 Y:(int)arg2 Z:(int)arg3 tileSize:(int)arg4 ;
-(void)setCameraHorizontalOffset:(double)arg1 duration:(double)arg2 timingFunction:(id)arg3 ;
-(void)resetRenderQueue:(shared_ptr<ggl::RenderQueue>*)arg1 ;
-(id)boundsForSelectedTransitLines;
-(void)preloadNavigationSceneResourcesWithDevice:(const shared_ptr<ggl::Device>*)arg1 ;
-(void)transitionToTracking:(BOOL)arg1 mapMode:(long long)arg2 startLocation:(CGSize)arg3 cameraController:(id)arg4 pounceCompletionHandler:(/*^block*/id)arg5 ;
-(CGPoint)convertCoordinateToCameraModelPoint:(CGSize)arg1 ;
-(CGPoint)convertCoordinateToPoint:(CGSize)arg1 ;
-(CGPoint)convertMapPointToPoint:(CGSize)arg1 ;
-(CGSize)convertPointToMapPoint:(CGPoint)arg1 ;
-(CGSize)convertPointToCoordinate:(CGPoint)arg1 ;
-(VKAnchorWrapper *)externalAnchors;
-(id)initWithTarget:(id)arg1 inBackground:(BOOL)arg2 manifestConfiguration:(id)arg3 locale:(id)arg4 ;
-(void)updateCameraForFrameResize;
-(void)endStyleAnimationGroup;
-(void)requestStylesheetAnimation:(id)arg1 targetMapDisplayStyle:(DisplayStyle)arg2 setupHandler:(/*^block*/id)arg3 ;
-(void)stylesheetAnimationDidEnd:(BOOL)arg1 ;
-(void)finishStyleBlend;
-(void)stylesheetAnimationDidProgress:(float)arg1 ;
-(void)beginStyleAnimationGroup;
-(DisplayStyle)sourceMapDisplayStyle;
-(void)resetTileContainers;
-(void)transferStateFromCanvas:(id)arg1 ;
-(id<VKRouteMatchedAnnotationPresentation>)routeLineSplitAnnotation;
-(NSArray *)rasterOverlays;
-(id)persistentOverlays;
-(void)setCustomFeatureDataSources:(NSArray *)arg1 ;
-(NSArray *)customFeatureDataSources;
-(PolylineCoordinate)routeUserOffset;
-(BOOL)labelMarkerSelectionEnabled;
-(void)didBeginTransitionToTransit;
-(void)debugHighlightObjectAtPoint:(CGPoint)arg1 highlightTarget:(unsigned char)arg2 ;
-(void)debugHighlightFeatureMarker:(const shared_ptr<md::FeatureMarker>*)arg1 ;
-(shared_ptr<gss::CartoStyle<gss::PropertyID> >*)styleForFeature:(const shared_ptr<md::FeatureMarker>*)arg1 ;
-(shared_ptr<md::FeatureMarker>*)featureMarkerAtScreenPoint:(CGPoint)arg1 ;
-(shared_ptr<md::FeatureMarker>*)buildingMarkerAtScreenPoint:(CGPoint)arg1 ;
-(vector<std::__1::shared_ptr<md::LabelFeatureMarker>, std::__1::allocator<std::__1::shared_ptr<md::LabelFeatureMarker> > >*)roadMarkersForSelectionAtScreenPoint:(CGPoint)arg1 ;
-(long long)currentMapMode;
-(void)stylesheetAnimationWillStartFromStyle:(DisplayStyle)arg1 toStyle:(DisplayStyle)arg2 ;
-(void)setStylesheetMapDisplayStyle:(DisplayStyle)arg1 ;
-(BOOL)supportsMapDisplayStyle:(DisplayStyle)arg1 ;
-(void)mapModel:(id)arg1 didUpdateContainsOverlay:(BOOL)arg2 ;
-(void)mapModelDidReloadStylesheet:(id)arg1 ;
-(void)mapModelStylesheetDidChange:(id)arg1 ;
-(id)mapModel:(id)arg1 painterForOverlay:(id)arg2 ;
-(void)mapModelDidBecomePartiallyDrawn:(id)arg1 ;
-(void)mapModelWillBecomeFullyDrawn:(id)arg1 ;
-(void)mapModelDidBecomeFullyDrawn:(id)arg1 hasFailedTiles:(BOOL)arg2 ;
-(void)mapModelDidStartLoadingTiles:(id)arg1 ;
-(void)mapModelDidFinishLoadingTiles:(id)arg1 ;
-(void)mapModelDidFailLoadingTiles:(id)arg1 withError:(id)arg2 ;
-(void)mapModel:(id)arg1 selectedLabelMarkerWillDisappear:(const shared_ptr<md::LabelMarker>*)arg2 ;
-(void)mapModel:(id)arg1 selectedLabelMarkerDidChangeState:(const shared_ptr<md::LabelMarker>*)arg2 ;
-(void)mapModelLabelsDidLayout:(id)arg1 ;
-(void)mapModel:(id)arg1 willTransitionFrom:(long long)arg2 to:(long long)arg3 duration:(double)arg4 ;
-(void)mapModelDidUpdateMinMaxZoomLevel:(id)arg1 ;
-(void)clearSceneIsEffectivelyHidden:(BOOL)arg1 ;
-(BOOL)currentSceneRequiresMSAA;
-(void)_updateViewTransform;
-(void)gglWillDrawWithTimestamp;
-(void)setShouldLimitTrackingCameraHeight:(BOOL)arg1 ;
-(void)setDefaultTrackingCamera:(VKCamera *)arg1 ;
-(void)cameraControllerDidChangeCameraState:(id)arg1 ;
-(void)cameraControllerRequestsLayout:(id)arg1 ;
-(void)cameraController:(id)arg1 willChangeRegionAnimated:(BOOL)arg2 ;
-(void)cameraController:(id)arg1 didChangeRegionAnimated:(BOOL)arg2 ;
-(void)cameraControllerDidFinishInitialTrackingAnimation:(id)arg1 ;
-(void)cameraController:(id)arg1 didBecomePitched:(BOOL)arg2 ;
-(void)cameraController:(id)arg1 canEnter3DModeDidChange:(BOOL)arg2 ;
-(id)cameraController:(id)arg1 presentationForAnnotation:(id)arg2 ;
-(void)cameraController:(id)arg1 canZoomInDidChange:(BOOL)arg2 ;
-(void)cameraController:(id)arg1 canZoomOutDidChange:(BOOL)arg2 ;
-(shared_ptr<gss::CartoStyle<gss::PropertyID> >*)styleAtScreenPoint:(CGPoint)arg1 ;
-(double)canonicalSkyHeight;
-(VKCamera *)defaultTrackingCamera;
-(/*^block*/id)annotationRectTest;
-(/*^block*/id)annotationCoordinateTest;
-(BOOL)shouldHideOffscreenSelectedAnnotation;
-(BOOL)showsPointsOfInterest;
-(void)setShowsPointsOfInterest:(BOOL)arg1 ;
-(BOOL)showsBuildings;
-(void)setShowsBuildings:(BOOL)arg1 ;
-(BOOL)isShowingNoDataPlaceholders;
-(void)setVehicleState:(VehicleState)arg1 ;
-(VKSceneConfiguration *)sceneConfiguration;
-(void)deselectLabelMarker;
-(void)selectLabelMarker:(const shared_ptr<md::LabelMarker>*)arg1 ;
-(void)removeAnnotationMarker:(id)arg1 ;
-(void)removeExternalAnchor:(id)arg1 ;
-(void)addAnnotationMarker:(id)arg1 ;
-(void)addExternalAnchor:(id)arg1 ;
-(void)removePersistentOverlay:(id)arg1 ;
-(void)addPersistentOverlay:(id)arg1 ;
-(void)setApplicationState:(unsigned char)arg1 ;
-(shared_ptr<md::LabelMarker>*)labelMarkerForSelectionAtPoint:(CGPoint)arg1 selectableLabelsOnly:(BOOL)arg2 ;
-(shared_ptr<md::LabelMarker>*)selectedLabelMarker;
-(void)setLabelMarkerSelectionEnabled:(BOOL)arg1 ;
-(id)consoleString:(BOOL)arg1 ;
-(vector<std::__1::shared_ptr<md::LabelMarker>, std::__1::allocator<std::__1::shared_ptr<md::LabelMarker> > >*)labelMarkers;
-(void)setShouldLoadFallbackTiles:(BOOL)arg1 ;
-(void)setRouteLineSplitAnnotation:(id<VKRouteMatchedAnnotationPresentation>)arg1 ;
-(void)_setStyleTransitionProgress:(double)arg1 targetStyle:(DisplayStyle)arg2 step:(long long)arg3 ;
-(void)setMapType:(long long)arg1 animated:(BOOL)arg2 ;
-(void)setLocalizeLabels:(BOOL)arg1 ;
-(BOOL)localizeLabels;
-(void)setTrafficIncidentsEnabled:(BOOL)arg1 ;
-(BOOL)trafficIncidentsEnabled;
-(void)removeCustomFeatureDataSource:(id)arg1 ;
-(void)addCustomFeatureDataSource:(id)arg1 ;
-(id)attributionsForCurrentRegion;
-(void)setAdditionalManifestConfiguration:(GEOResourceManifestConfiguration *)arg1 ;
-(GEOResourceManifestConfiguration *)additionalManifestConfiguration;
-(void)setShieldSize:(long long)arg1 ;
-(long long)shieldSize;
-(id)transitLineMarkersInCurrentViewport;
-(void)selectTransitLineMarker:(id)arg1 ;
-(void)deselectTransitLineMarker;
-(id)selectedTransitLineIDs;
-(void)addOverlay:(id)arg1 ;
-(void)removeOverlay:(id)arg1 ;
-(id)overlays;
-(void)addRasterOverlay:(id)arg1 ;
-(void)insertRasterOverlay:(id)arg1 belowOverlay:(id)arg2 ;
-(void)insertRasterOverlay:(id)arg1 aboveOverlay:(id)arg2 ;
-(void)removeRasterOverlay:(id)arg1 ;
-(unsigned char)targetDisplay;
-(void)setLabelScaleFactor:(unsigned char)arg1 ;
-(BOOL)isPointValidForGesturing:(CGPoint)arg1 ;
-(void)setTargetDisplay:(unsigned char)arg1 ;
-(id)transitLineMarkersForSelectionAtPoint:(CGPoint)arg1 ;
-(void)setRouteContext:(id)arg1 ;
-(shared_ptr<gss::StyleSheet<gss::PropertyID> >*)stylesheet;
@end

