/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:58:17 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKScreenCameraController.h>
#import <libobjc.A.dylib/VKGesturingCameraController.h>

@class NSString;

@interface VKGlobeCameraController : VKScreenCameraController <VKGesturingCameraController> {

	GlobeView* _globeView;
	CameraManager* _cameraManager;
	double _currentDoublePanPitch;
	BOOL _isPitching;
	BOOL _isRotating;
	BOOL _wasPitched;
	BOOL _couldEnter3DMode;
	int _flyoverMode;
	double _currentZoomLevel;
	double _maxZoomLevel;
	double _lastRotation;
	CGPoint _panStartScreenPoint;
	CGPoint _panLastScreenPoint;
	double _beganDoublePanPitch;

}

@property (assign,nonatomic) GlobeView* globeView;                  //@synthesize globeView=_globeView - In the implementation block
@property (assign,nonatomic) int flyoverMode;                       //@synthesize flyoverMode=_flyoverMode - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)init;
-(void)dealloc;
-(double)heading;
-(long long)tileSize;
-(id)mapRegion;
-(double)altitude;
-(id)viewportInfo;
-(CGSize)centerCoordinate;
-(void)updateState;
-(void)setMaxZoomLevel:(double)arg1 ;
-(double)pitch;
-(int)flyoverMode;
-(void)transitionToFlyoverMode:(int)arg1 animated:(BOOL)arg2 ;
-(void)setCenterCoordinate:(CGSize)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 animationStyle:(long long)arg6 timingCurve:(/*^block*/id)arg7 completion:(/*^block*/id)arg8 ;
-(double)maximumZoomLevel;
-(double)minimumZoomLevel;
-(double)distanceFromCenterCoordinate;
-(double)currentZoomLevel;
-(double)topDownMinimumZoomLevel;
-(void)tapZoom:(CGPoint)arg1 levels:(double)arg2 completionHandler:(/*^block*/id)arg3 ;
-(BOOL)snapMapIfNecessary:(BOOL)arg1 ;
-(void)setCenterCoordinate3D:(Position3d)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 animationStyle:(long long)arg6 timingCurve:(/*^block*/id)arg7 completion:(/*^block*/id)arg8 ;
-(void)setGlobeView:(GlobeView*)arg1 ;
-(void)updateFlyoverMode;
-(void)setCurrentZoomLevel:(double)arg1 ;
-(void)updateCameraManager;
-(void)flyoverTourAnimation:(id)arg1 animateToStart:(BOOL)arg2 labelChanged:(/*^block*/id)arg3 stateChange:(/*^block*/id)arg4 ;
-(void)stopFlyoverTourAnimation;
-(/*^block*/id)createMoveToZoomOutZoomInFrameFunction:(FrameLatLon)arg1 toLatLon:(FrameLatLon)arg2 ;
-(void)_updateGlobeFromCamera;
-(void)rotate:(double)arg1 atScreenPoint:(CGPoint)arg2 ;
-(void)pitch:(CGPoint)arg1 translation:(double)arg2 ;
-(void)rotateTo:(double)arg1 animated:(BOOL)arg2 ;
-(void)tiltTo:(double)arg1 animated:(BOOL)arg2 exaggerate:(BOOL)arg3 ;
-(void)zoomToDistance:(CGPoint)arg1 distance:(double)arg2 time:(double)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)zoomToDistance:(CGPoint)arg1 distance:(double)arg2 time:(double)arg3 ;
-(void)moveTo:(CGSize)arg1 zoom:(double)arg2 rotation:(double)arg3 tilt:(double)arg4 duration:(double)arg5 timingCurve:(/*^block*/id)arg6 completion:(/*^block*/id)arg7 ;
-(void)moveTo:(CGSize)arg1 height:(double)arg2 useHeight:(BOOL)arg3 zoom:(double)arg4 rotation:(double)arg5 tilt:(double)arg6 duration:(double)arg7 timingCurve:(/*^block*/id)arg8 completion:(/*^block*/id)arg9 ;
-(Matrix<double, 3, 1>)geocentricFromPosition:(PositionLatLonAlt)arg1 ;
-(void)moveToZoomOutZoomInTransition:(CGSize)arg1 height:(double)arg2 useHeight:(BOOL)arg3 zoom:(double)arg4 rotation:(double)arg5 tilt:(double)arg6 duration:(double)arg7 timingCurve:(/*^block*/id)arg8 completion:(/*^block*/id)arg9 ;
-(void)interruptFlyoverTourAnimation;
-(BOOL)isFlyoverTourStarted;
-(float)slowDownFactorFromLoadProgress;
-(void)adjustLoadingForAnimation:(float)arg1 progressFactor:(float)arg2 ;
-(PositionGeo3d)cameraPosition;
-(void)stopGlobeAnimations;
-(void)_updateIsPitched;
-(void)_updateCanEnter3DMode;
-(double)geocAngleBetween:(CGSize)arg1 andCoordinate:(CGSize)arg2 ;
-(double)earthRadiusAt:(double)arg1 ;
-(double)greatCircleMidPointLatitude:(double)arg1 deltaLongitude:(double)arg2 ;
-(double)widestLatitudeForMapRegion:(id)arg1 ;
-(double)zoomForMapRegion:(id)arg1 ;
-(CGSize)_centerCoordinateForMapRegion:(id)arg1 ;
-(double)_fovAdjustment;
-(GlobeView*)globeView;
-(void)setFlyoverMode:(int)arg1 ;
-(void)zoom:(double)arg1 withFocusPoint:(CGPoint)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)resumeFlyoverTourAnimation;
-(void)pauseFlyoverTourAnimation;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(/*^block*/id)arg5 ;
-(double)durationToAnimateToMapRegion:(id)arg1 ;
-(double)presentationYaw;
-(BOOL)canEnter3DMode;
-(BOOL)isPitched;
-(void)exit3DMode;
-(void)enter3DMode;
-(void)panWithOffset:(CGPoint)arg1 relativeToScreenPoint:(CGPoint)arg2 animated:(BOOL)arg3 duration:(double)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)setGesturing:(BOOL)arg1 ;
-(void)setYaw:(double)arg1 animated:(BOOL)arg2 ;
-(void)startTrackingAnnotation:(id)arg1 trackHeading:(BOOL)arg2 animated:(BOOL)arg3 ;
-(BOOL)restoreViewportFromInfo:(id)arg1 ;
-(void)updatePinchWithFocusPoint:(CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3 ;
-(void)startPinchingWithFocusPoint:(CGPoint)arg1 ;
-(void)stopPinchingWithFocusPoint:(CGPoint)arg1 ;
-(BOOL)isFullyPitched;
@end

