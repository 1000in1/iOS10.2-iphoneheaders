/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:58:18 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKModelObject.h>
#import <libobjc.A.dylib/VKMapLayer.h>

@class NSString;

@interface VKDebugModel : VKModelObject <VKMapLayer> {

	BOOL _geocentric;
	float _fontSize;
	shared_ptr<ggl::Debug::BasePipelineState>* _debugPipelineState;
	shared_ptr<ggl::DebugPoints::BasePipelineState>* _debugPointsPipelineState;
	unique_ptr<ggl::FragmentedPool<ggl::Debug::BasePipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::Debug::BasePipelineSetup> > >* _debugPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::DebugPoints::BasePipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::DebugPoints::BasePipelineSetup> > >* _debugPointsPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > >* _debugRenderItemPool;
	unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> >* _debugLinesRenderState;
	unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> >* _debugPointsRenderState;
	shared_ptr<ggl::Debug::BaseMesh>* _unitRectMesh;
	BOOL _needsReset;

}

@property (assign,nonatomic) BOOL geocentric;                       //@synthesize geocentric=_geocentric - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(void)reset;
-(void)didReceiveMemoryWarning:(BOOL)arg1 ;
-(BOOL)shouldLayoutWithoutStyleManager;
-(id)initWithTarget:(id)arg1 sharedResources:(id)arg2 ;
-(void)gglLayoutScene:(id)arg1 withContext:(LayoutContext*)arg2 renderQueue:(RenderQueue*)arg3 ;
-(unsigned long long)mapLayerPosition;
-(void)flushPools;
-(shared_ptr<ggl::Debug::BaseMesh>*)unitRectMesh;
-(void)resetPools:(LayoutContext*)arg1 ;
-(void)appendDebugTileCommandsToBuffer:(CommandBuffer*)arg1 forMapTile:(id)arg2 fromLayer:(unsigned long long)arg3 withContext:(LayoutContext*)arg4 withConsole:(DebugConsole*)arg5 ;
-(BOOL)geocentric;
-(void)setGeocentric:(BOOL)arg1 ;
@end

