/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:58:17 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKVectorMapModel.h>
#import <libobjc.A.dylib/VKMercatorTerrainHeightProvider.h>
#import <libobjc.A.dylib/VKMapLayer.h>

@protocol VKBuildingFootprintMapModelDelegate;
@class VK3DObjectSubMapModel, VKTimedAnimation, VKMercatorTerrainHeightCache, VKSkyModel, NSString;

@interface VKBuildingFootprintMapModel : VKVectorMapModel <VKMercatorTerrainHeightProvider, VKMapLayer> {

	unordered_map<VKVectorTile *, OccluderGroupList, std::__1::hash<VKVectorTile *>, std::__1::equal_to<VKVectorTile *>, std::__1::allocator<std::__1::pair<VKVectorTile *const, OccluderGroupList> > >* _currentOccluders;
	unordered_map<VKVectorTile *, OccluderGroupList, std::__1::hash<VKVectorTile *>, std::__1::equal_to<VKVectorTile *>, std::__1::allocator<std::__1::pair<VKVectorTile *const, OccluderGroupList> > >* _previousOccluders;
	RenderItemBatcher* _batcher;
	BOOL _shouldDraw3DBuildingsInVectorBuildingsRenderPass;
	BOOL _shouldDraw3DBuildingsIn3DBuildingsRenderPass;
	BOOL _initializedStyles;
	id<VKBuildingFootprintMapModelDelegate> _delegate;
	int _stencilRef;
	VK3DObjectSubMapModel* _landmarksModel;
	shared_ptr<gss::StylesheetManager<gss::PropertyID> >* _styleManager;
	float _brightness;
	int _targetBuildingMode;
	int _buildingMode;
	VKTimedAnimation* _styleChangeAnimation;
	VKTimedAnimation* _fadeBuildingAnimation;
	shared_ptr<ggl::BuildingFlatStroke::BuildingFlatStrokePipelineState>* _strokePipelineState;
	shared_ptr<ggl::BuildingFlat::CompressedMeshPipelineState>* _fillPipelineStateWithoutBlending;
	shared_ptr<ggl::BuildingFlat::CompressedMeshPipelineState>* _fillPipelineStateWithBlending;
	shared_ptr<ggl::BuildingFacadeDepth::BuildingPipelineState>* _buildingDepthPipelineState;
	shared_ptr<ggl::BuildingTopDepth::CompressedMeshPipelineState>* _buildingTopDepthPipelineState;
	shared_ptr<ggl::BuildingPointyRoofDepth::BuildingPipelineState>* _buildingPointyRoofDepthPipelineState;
	shared_ptr<ggl::DiffuseBuilding::BuildingPipelineState>* _diffuseBuildingPipelineStateWithoutBlending;
	shared_ptr<ggl::DiffuseBuildingTop::CompressedMeshPipelineState>* _diffuseTopPipelineStateWithoutBlending;
	shared_ptr<ggl::FoggedDiffuseBuilding::BuildingPipelineState>* _foggedDiffuseBuildingPipelineStateWithoutBlending;
	shared_ptr<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineState>* _foggedDiffuseTopPipelineStateWithoutBlending;
	shared_ptr<ggl::DiffuseBuildingPointyRoof::BuildingPipelineState>* _diffusePointyRoofPipelineStateWithoutBlending;
	shared_ptr<ggl::SpecularBuilding::BuildingPipelineState>* _specularBuildingPipelineStateWithoutBlending;
	shared_ptr<ggl::SpecularBuildingTop::CompressedMeshPipelineState>* _specularTopPipelineStateWithoutBlending;
	shared_ptr<ggl::FoggedSpecularBuilding::BuildingPipelineState>* _foggedSpecularBuildingPipelineStateWithoutBlending;
	shared_ptr<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineState>* _foggedSpecularTopPipelineStateWithoutBlending;
	shared_ptr<ggl::SpecularBuildingPointyRoof::BuildingPipelineState>* _specularPointyRoofPipelineStateWithoutBlending;
	shared_ptr<ggl::DiffuseBuilding::BuildingPipelineState>* _diffuseBuildingPipelineStateWithBlending;
	shared_ptr<ggl::DiffuseBuildingTop::CompressedMeshPipelineState>* _diffuseTopPipelineStateWithBlending;
	shared_ptr<ggl::FoggedDiffuseBuilding::BuildingPipelineState>* _foggedDiffuseBuildingPipelineStateWithBlending;
	shared_ptr<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineState>* _foggedDiffuseTopPipelineStateWithBlending;
	shared_ptr<ggl::DiffuseBuildingPointyRoof::BuildingPipelineState>* _diffusePointyRoofPipelineStateWithBlending;
	shared_ptr<ggl::SpecularBuilding::BuildingPipelineState>* _specularBuildingPipelineStateWithBlending;
	shared_ptr<ggl::SpecularBuildingTop::CompressedMeshPipelineState>* _specularTopPipelineStateWithBlending;
	shared_ptr<ggl::FoggedSpecularBuilding::BuildingPipelineState>* _foggedSpecularBuildingPipelineStateWithBlending;
	shared_ptr<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineState>* _foggedSpecularTopPipelineStateWithBlending;
	shared_ptr<ggl::SpecularBuildingPointyRoof::BuildingPipelineState>* _specularPointyRoofPipelineStateWithBlending;
	shared_ptr<ggl::BuildingShadow::MeshPipelineState>* _shadowPipelineState;
	shared_ptr<ggl::PrefilteredLine::PrefilteredLinePipelineState>* _stroke3DPipelineState;
	unique_ptr<ggl::FragmentedPool<ggl::BuildingFlatStroke::BuildingFlatStrokePipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingFlatStroke::BuildingFlatStrokePipelineSetup> > >* _strokePipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::BuildingFlat::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingFlat::CompressedMeshPipelineSetup> > >* _fillPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::BuildingFacadeDepth::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingFacadeDepth::BuildingPipelineSetup> > >* _buildingDepthPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::BuildingTopDepth::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingTopDepth::CompressedMeshPipelineSetup> > >* _buildingTopDepthPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::BuildingPointyRoofDepth::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingPointyRoofDepth::BuildingPipelineSetup> > >* _buildingPointyRoofDepthPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::DiffuseBuilding::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseBuilding::BuildingPipelineSetup> > >* _diffuseBuildingPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::DiffuseBuildingTop::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseBuildingTop::CompressedMeshPipelineSetup> > >* _diffuseTopPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::FoggedDiffuseBuilding::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedDiffuseBuilding::BuildingPipelineSetup> > >* _foggedDiffuseBuildingPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineSetup> > >* _foggedDiffuseTopPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::DiffuseBuildingPointyRoof::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseBuildingPointyRoof::BuildingPipelineSetup> > >* _diffusePointyRoofPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::SpecularBuilding::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularBuilding::BuildingPipelineSetup> > >* _specularBuildingPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::SpecularBuildingTop::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularBuildingTop::CompressedMeshPipelineSetup> > >* _specularTopPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::FoggedSpecularBuilding::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedSpecularBuilding::BuildingPipelineSetup> > >* _foggedSpecularBuildingPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineSetup> > >* _foggedSpecularTopPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::SpecularBuildingPointyRoof::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularBuildingPointyRoof::BuildingPipelineSetup> > >* _specularPointyRoofPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::BuildingShadow::MeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingShadow::MeshPipelineSetup> > >* _shadowPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::PrefilteredLine::PrefilteredLinePipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::PrefilteredLine::PrefilteredLinePipelineSetup> > >* _stroke3DPipelineSetupPool;
	shared_ptr<ggl::RenderState>* _strokeRenderState;
	shared_ptr<ggl::RenderState>* _fillRenderState;
	shared_ptr<ggl::RenderState>* _threeDRenderState;
	shared_ptr<ggl::RenderState>* _depthPassRenderState;
	shared_ptr<ggl::RenderState>* _threeDStrokeRenderState;
	shared_ptr<ggl::RenderState>* _shadowsRenderState;
	unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > >* _stroke3DRenderItemPool;
	unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > >* _buildingRenderItemPool;
	unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > >* _shadowRenderItemPool;
	ClearItem* _clearItem;
	shared_ptr<ggl::ConstantDataTyped<ggl::Building::Fade> >* _fadeConstantData;
	BOOL _fadeNeedsAlpha;
	float _buildingChangeoverZ;
	BOOL _supportsStrokes;
	BOOL _supports3DStrokes;
	BOOL _supportsBuildingShadows;
	BOOL _supports3DBuildings;
	BOOL _supportsPerFragmentLighting;
	BOOL _fogEnabled;
	BOOL _fadeTiles;
	VKMercatorTerrainHeightCache* _heightCache;
	VKSkyModel* _skyModel;

}

@property (nonatomic,retain) VK3DObjectSubMapModel * landmarksModel;                                          //@synthesize landmarksModel=_landmarksModel - In the implementation block
@property (assign,nonatomic) shared_ptr<gss::StylesheetManager<gss::PropertyID> >* styleManager; 
@property (nonatomic,readonly) VKMercatorTerrainHeightCache * heightCache;                                    //@synthesize heightCache=_heightCache - In the implementation block
@property (assign,getter=isFogEnabled,nonatomic) BOOL fogEnabled;                                             //@synthesize fogEnabled=_fogEnabled - In the implementation block
@property (assign,nonatomic) BOOL fadeTiles;                                                                  //@synthesize fadeTiles=_fadeTiles - In the implementation block
@property (assign,nonatomic) int buildingMode;                                                                //@synthesize buildingMode=_buildingMode - In the implementation block
@property (nonatomic,retain) VKSkyModel * skyModel;                                                           //@synthesize skyModel=_skyModel - In the implementation block
@property (assign,nonatomic) float buildingChangeoverZ;                                                       //@synthesize buildingChangeoverZ=_buildingChangeoverZ - In the implementation block
@property (assign,nonatomic) id<VKBuildingFootprintMapModelDelegate> delegate;                                //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setDelegate:(id<VKBuildingFootprintMapModelDelegate>)arg1 ;
-(void)dealloc;
-(id<VKBuildingFootprintMapModelDelegate>)delegate;
-(void)reset;
-(void)setActive:(BOOL)arg1 ;
-(void)didReceiveMemoryWarning:(BOOL)arg1 ;
-(void)setStyleManager:(shared_ptr<gss::StylesheetManager<gss::PropertyID> >*)arg1 ;
-(shared_ptr<gss::StylesheetManager<gss::PropertyID> >*)styleManager;
-(void)stylesheetDidChange;
-(id)initWithTarget:(id)arg1 sharedResources:(id)arg2 ;
-(void)gglLayoutScene:(id)arg1 withContext:(LayoutContext*)arg2 renderQueue:(RenderQueue*)arg3 ;
-(double)maxTileHeightAtPoint:(Mercator2<double>)arg1 ;
-(unsigned long long)mapLayerPosition;
-(void)reserveStencilRangeForScene:(id)arg1 withContext:(LayoutContext*)arg2 renderQueue:(RenderQueue*)arg3 ;
-(void)setBuildingChangeoverZ:(float)arg1 ;
-(void)setSkyModel:(VKSkyModel *)arg1 ;
-(void)setFogEnabled:(BOOL)arg1 ;
-(void)setFadeTiles:(BOOL)arg1 ;
-(VKMercatorTerrainHeightCache *)heightCache;
-(VKSkyModel *)skyModel;
-(BOOL)wantsCategorizedSourceTiles;
-(shared_ptr<md::FeatureMarker>*)featureMarkerInTile:(id)arg1 atPoint:(Matrix<double, 3, 1>*)arg2 ;
-(void)willStartDrawingTiles:(id)arg1 ;
-(void)willStopDrawingTiles:(id)arg1 ;
-(void)removePersistingExitingTiles:(id)arg1 ;
-(void)addTilesInScene:(id)arg1 toSet:(id)arg2 context:(LayoutContext*)arg3 ;
-(BOOL)fadeTiles;
-(double)heightAtPoint:(Matrix<double, 3, 1>)arg1 ;
-(shared_ptr<ggl::ConstantDataTyped<ggl::Building::Fade> >*)fadeConstantData;
-(BOOL)fadeNeedsAlpha;
-(void)_clearOccluders;
-(void)_updateStyles;
-(void)animateTiles:(id)arg1 fromAlpha:(float)arg2 toAlpha:(float)arg3 fromScale:(float)arg4 toScale:(float)arg5 ;
-(void)flushPools;
-(void)resetPools;
-(void)_updateBuildingModeForContext:(LayoutContext*)arg1 ;
-(void)generate2DBuildingRenderItemsIfNecessaryForScene:(id)arg1 withContext:(LayoutContext*)arg2 commandBuffer:(CommandBuffer*)arg3 ;
-(void)generate2DBuildingRenderItemsForScene:(id)arg1 withContext:(LayoutContext*)arg2 commandBuffer:(CommandBuffer*)arg3 ;
-(void)generate3DBuildingRenderItemsIfNecessaryForScene:(id)arg1 withContext:(LayoutContext*)arg2 commandBuffer:(CommandBuffer*)arg3 ;
-(void)generate3DBuildingRenderItemsForScene:(id)arg1 withContext:(LayoutContext*)arg2 commandBuffer:(CommandBuffer*)arg3 ;
-(void)updateFadeParametersWithLayoutContext:(LayoutContext*)arg1 ;
-(BuildingPipelineSetup*)getExtrusionDepthPipelineSetupForGroup:(id)arg1 viewConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> >*)arg2 context:(LayoutContext*)arg3 cameraPosition:(const Matrix<float, 3, 1>*)arg4 scale:(float)arg5 ;
-(BuildingPipelineSetup*)getExtrusionPipelineSetupForGroup:(id)arg1 viewConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> >*)arg2 texture:(Texture2D*)arg3 context:(LayoutContext*)arg4 cameraPosition:(const Matrix<float, 3, 1>*)arg5 scale:(float)arg6 ;
-(BuildingPipelineSetup*)getFoggedExtrusionPipelineSetupForGroup:(id)arg1 viewConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> >*)arg2 fogConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> >*)arg3 texture:(Texture2D*)arg4 context:(LayoutContext*)arg5 cameraPosition:(const Matrix<float, 3, 1>*)arg6 scale:(float)arg7 ;
-(CompressedMeshPipelineSetup*)getTopDepthPipelineSetupForGroup:(id)arg1 viewConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> >*)arg2 context:(LayoutContext*)arg3 cameraPosition:(const Matrix<float, 3, 1>*)arg4 scale:(float)arg5 ;
-(CompressedMeshPipelineSetup*)getDiffuseTopPipelineSetupForGroup:(id)arg1 viewConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> >*)arg2 context:(LayoutContext*)arg3 cameraPosition:(const Matrix<float, 3, 1>*)arg4 scale:(float)arg5 ;
-(CompressedMeshPipelineSetup*)getSpecularTopPipelineSetupForGroup:(id)arg1 viewConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> >*)arg2 context:(LayoutContext*)arg3 cameraPosition:(const Matrix<float, 3, 1>*)arg4 scale:(float)arg5 ;
-(CompressedMeshPipelineSetup*)getFoggedDiffuseTopPipelineSetupForGroup:(id)arg1 viewConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> >*)arg2 fogConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> >*)arg3 context:(LayoutContext*)arg4 cameraPosition:(const Matrix<float, 3, 1>*)arg5 scale:(float)arg6 ;
-(CompressedMeshPipelineSetup*)getFoggedSpecularTopPipelineSetupForGroup:(id)arg1 viewConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> >*)arg2 fogConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> >*)arg3 context:(LayoutContext*)arg4 cameraPosition:(const Matrix<float, 3, 1>*)arg5 scale:(float)arg6 ;
-(BuildingPipelineSetup*)getPointyRoofDepthPipelineSetupForGroup:(id)arg1 viewConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> >*)arg2 context:(LayoutContext*)arg3 cameraPosition:(const Matrix<float, 3, 1>*)arg4 scale:(float)arg5 ;
-(BuildingPipelineSetup*)getDiffusePointyRoofPipelineSetupForGroup:(id)arg1 viewConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> >*)arg2 fogConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> >*)arg3 context:(LayoutContext*)arg4 cameraPosition:(const Matrix<float, 3, 1>*)arg5 scale:(float)arg6 ;
-(BuildingPipelineSetup*)getSpecularPointyRoofPipelineSetupForGroup:(id)arg1 viewConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> >*)arg2 fogConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> >*)arg3 context:(LayoutContext*)arg4 cameraPosition:(const Matrix<float, 3, 1>*)arg5 scale:(float)arg6 ;
-(void)generateDiffuseRenderItemsForGroup:(id)arg1 viewConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> >*)arg2 fogConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> >*)arg3 flatQueries:(const vector<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> >, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > >*)arg4 pointyQueries:(const vector<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> >, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > >*)arg5 texture:(Texture2D*)arg6 context:(LayoutContext*)arg7 commandBuffer:(CommandBuffer*)arg8 cameraPosition:(const Matrix<float, 3, 1>*)arg9 alpha:(float)arg10 scale:(float)arg11 zoomLevel:(float)arg12 numTextures:(unsigned)arg13 cullingMask:(unsigned)arg14 ;
-(void)generateSpecularRenderItemsForGroup:(id)arg1 viewConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> >*)arg2 fogConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> >*)arg3 flatQueries:(const vector<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> >, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > >*)arg4 pointyQueries:(const vector<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> >, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > >*)arg5 texture:(Texture2D*)arg6 context:(LayoutContext*)arg7 commandBuffer:(CommandBuffer*)arg8 cameraPosition:(const Matrix<float, 3, 1>*)arg9 alpha:(float)arg10 scale:(float)arg11 zoomLevel:(float)arg12 numTextures:(unsigned)arg13 cullingMask:(unsigned)arg14 ;
-(void)generateRenderItemsForBuildingShadowsInScene:(id)arg1 withContext:(LayoutContext*)arg2 commandBuffer:(CommandBuffer*)arg3 drawOrder:(unsigned)arg4 ;
-(void)setBuildingMode:(int)arg1 animated:(BOOL)arg2 ;
-(BOOL)isFogEnabled;
-(int)buildingMode;
-(void)setBuildingMode:(int)arg1 ;
-(float)buildingChangeoverZ;
-(VK3DObjectSubMapModel *)landmarksModel;
-(void)setLandmarksModel:(VK3DObjectSubMapModel *)arg1 ;
@end

