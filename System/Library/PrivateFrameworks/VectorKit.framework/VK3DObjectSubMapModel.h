/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:58:17 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <VectorKit/VectorKit-Structs.h>
@class VKBuildingFootprintMapModel;

@interface VK3DObjectSubMapModel : NSObject {

	unique_ptr<ggl::FragmentedPool<ggl::LandmarkDepth::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::LandmarkDepth::BuildingPipelineSetup> > >* _depthPassPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::DiffuseLandmark::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseLandmark::BuildingPipelineSetup> > >* _diffuseObject3DPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::SpecularLandmark::LandmarkPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularLandmark::LandmarkPipelineSetup> > >* _specularObject3DPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::LandmarkFlat::LandmarkPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::LandmarkFlat::LandmarkPipelineSetup> > >* _object2DPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::FoggedDiffuseLandmark::LandmarkPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedDiffuseLandmark::LandmarkPipelineSetup> > >* _diffuseFoggedObject3DPipelineSetupPool;
	unique_ptr<ggl::FragmentedPool<ggl::FoggedSpecularLandmark::LandmarkPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedSpecularLandmark::LandmarkPipelineSetup> > >* _specularFoggedObject3DPipelineSetupPool;
	unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> >* _depthPassRenderState;
	unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> >* _object2DRenderState;
	unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> >* _object3DRenderState;
	unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > >* _objectRenderItemPool;
	shared_ptr<ggl::LandmarkFlat::LandmarkPipelineState>* _2DPipelineStateWithoutBlending;
	shared_ptr<ggl::LandmarkFlat::LandmarkPipelineState>* _2DPipelineStateWithBlending;
	shared_ptr<ggl::LandmarkDepth::BuildingPipelineState>* _depthPassPipelineState;
	shared_ptr<ggl::SpecularLandmark::LandmarkPipelineState>* _specular3DPipelineStateWithoutBlending;
	shared_ptr<ggl::FoggedSpecularLandmark::LandmarkPipelineState>* _specular3DFoggedPipelineStateWithoutBlending;
	shared_ptr<ggl::SpecularLandmark::LandmarkPipelineState>* _specular3DPipelineStateWithBlending;
	shared_ptr<ggl::FoggedSpecularLandmark::LandmarkPipelineState>* _specular3DFoggedPipelineStateWithBlending;
	shared_ptr<ggl::DiffuseLandmark::BuildingPipelineState>* _diffuse3DPipelineStateWithoutBlending;
	shared_ptr<ggl::FoggedDiffuseLandmark::LandmarkPipelineState>* _diffuse3DFoggedPipelineStateWithoutBlending;
	shared_ptr<ggl::DiffuseLandmark::BuildingPipelineState>* _diffuse3DPipelineStateWithBlending;
	shared_ptr<ggl::FoggedDiffuseLandmark::LandmarkPipelineState>* _diffuse3DFoggedPipelineStateWithBlending;
	BOOL _supportsPerFragmentLighting;
	BOOL _fogEnabled;
	VKBuildingFootprintMapModel* _buildingMapModel;

}

@property (assign,nonatomic) VKBuildingFootprintMapModel * buildingMapModel;              //@synthesize buildingMapModel=_buildingMapModel - In the implementation block
@property (assign,getter=isFogEnabled,nonatomic) BOOL fogEnabled;                         //@synthesize fogEnabled=_fogEnabled - In the implementation block
-(void)gglLayoutScene:(id)arg1 withContext:(LayoutContext*)arg2 renderQueue:(RenderQueue*)arg3 ;
-(void)setFogEnabled:(BOOL)arg1 ;
-(void)flushPools;
-(void)resetPools;
-(BOOL)isFogEnabled;
-(id)initWithBuildingMapModel:(id)arg1 target:(id)arg2 sharedResources:(id)arg3 ;
-(void)layoutFor2DWithContext:(LayoutContext*)arg1 commandBuffer:(CommandBuffer*)arg2 tiles:(id)arg3 ;
-(void)layoutFor3DWithContext:(LayoutContext*)arg1 commandBuffer:(CommandBuffer*)arg2 tiles:(id)arg3 ;
-(void)generateSpecularRenderItemsForGroup:(const shared_ptr<md::ObjectGroup>*)arg1 viewConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> >*)arg2 fogConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> >*)arg3 context:(LayoutContext*)arg4 commandBuffer:(CommandBuffer*)arg5 cameraPosition:(const Matrix<float, 3, 1>*)arg6 alpha:(float)arg7 scale:(float)arg8 zoomLevel:(float)arg9 ;
-(void)generateDiffuseRenderItemsForGroup:(const shared_ptr<md::ObjectGroup>*)arg1 viewConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> >*)arg2 fogConstantData:(const shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> >*)arg3 context:(LayoutContext*)arg4 commandBuffer:(CommandBuffer*)arg5 cameraPosition:(const Matrix<float, 3, 1>*)arg6 alpha:(float)arg7 scale:(float)arg8 zoomLevel:(float)arg9 ;
-(VKBuildingFootprintMapModel *)buildingMapModel;
-(void)setBuildingMapModel:(VKBuildingFootprintMapModel *)arg1 ;
@end

