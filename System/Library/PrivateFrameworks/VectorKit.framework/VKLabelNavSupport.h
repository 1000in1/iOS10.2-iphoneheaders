/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:58:17 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <VectorKit/VectorKit-Structs.h>
@class VKPolylineOverlayPainter, NSString, NSMutableSet, NSMutableArray, VKLabelNavRoadGraph, NSMutableDictionary;

@interface VKLabelNavSupport : NSObject {

	BOOL _needsLayout;
	BOOL _drawRoadSigns;
	VKPolylineOverlayPainter* _route;
	NSString* _currentLocationText;
	BOOL _isOnRoute;
	PolylineCoordinate _routeUserOffset;
	unsigned long long _stepIndex;
	BOOL _checkOnRouteLabelsAlignment;
	BOOL _disableTileParseForOneLayout;
	NSMutableSet* _tiles;
	NSMutableSet* _pendingTiles;
	NSMutableArray* _junctions;
	VKLabelNavRoadGraph* _roadGraph;
	vector<std::__1::shared_ptr<md::NavLabel>, std::__1::allocator<std::__1::shared_ptr<md::NavLabel> > >* _activeSigns;
	NSMutableArray* _fadingLabels;
	NSMutableDictionary* _visibleLabelsByName;
	NSMutableArray* _visibleLabels;
	unsigned long long _countVisibleOnRouteRoadSigns;
	unsigned long long _countVisibleOffRouteRoadSigns;
	unsigned long long _countVisibleRoadSigns;
	unsigned long long _maxVisibleOnRouteRoadSigns;
	unsigned long long _maxVisibleOffRouteRoadSigns;
	unsigned long long _maxVisibleRoadSigns;
	unsigned long long _maxOnRoadGraphRoadSigns;
	unsigned long long _minVisibleOffRoadGraphRoadSigns;
	unsigned long long _minVisibleProceedToRouteRoadSigns;
	BOOL _preferRightSideLabelPlacement;
	float _minSignOffsetDistance;
	NSMutableSet* _roadNamesInGuidance;
	NSMutableArray* _guidanceStepInfos;
	NSMutableArray* _routeRoadInfos;
	NSString* _currentRoadName;
	long long _currentRoadNameIndex;
	NSString* _currentShieldGroup;
	BOOL _checkIfRouteSubrangeChanged;
	BOOL _useRouteSubrange;
	PolylineCoordinate _routeSubrangeStart;
	PolylineCoordinate _routeSubrangeEnd;
	unique_ptr<VKLabelNavArtworkCache, std::__1::default_delete<VKLabelNavArtworkCache> >* _artworkCache;
	shared_ptr<md::NavCurrentRoadSign>* _currentRoadSign;
	BOOL _debugDisableRoadSignLimit;
	unsigned long long _debugCachedMaxVisibleOffRouteRoadSigns;
	unsigned long long _debugCachedMaxVisibleOnRouteRoadSigns;
	BOOL _debugEnableShieldsOnRouteLine;
	unsigned char _navMapMode;
	shared_ptr<gss::StylesheetManager<gss::PropertyID> >* _styleManager;
	BOOL _shouldLabelOppositeCarriageways;

}

@property (assign,nonatomic) BOOL drawRoadSigns;                                                          //@synthesize drawRoadSigns=_drawRoadSigns - In the implementation block
@property (nonatomic,retain) VKPolylineOverlayPainter * route;                                            //@synthesize route=_route - In the implementation block
@property (nonatomic,retain) NSString * currentLocationText;                                              //@synthesize currentLocationText=_currentLocationText - In the implementation block
@property (nonatomic,retain) NSString * currentRoadName;                                                  //@synthesize currentRoadName=_currentRoadName - In the implementation block
@property (nonatomic,retain) NSString * currentShieldGroup;                                               //@synthesize currentShieldGroup=_currentShieldGroup - In the implementation block
@property (assign,nonatomic) PolylineCoordinate routeUserOffset;                                          //@synthesize routeUserOffset=_routeUserOffset - In the implementation block
@property (nonatomic,readonly) const vector<std::__1::shared_ptr<md::NavLabel>* activeSigns;              //@synthesize activeSigns=_activeSigns - In the implementation block
@property (nonatomic,readonly) BOOL needsLayout;                                                          //@synthesize needsLayout=_needsLayout - In the implementation block
@property (nonatomic,readonly) NavCurrentRoadSign* currentRoadSign; 
@property (nonatomic,readonly) float currentRoadSignPixelHeight; 
@property (assign,nonatomic) BOOL debugDisableRoadSignLimit;                                              //@synthesize debugDisableRoadSignLimit=_debugDisableRoadSignLimit - In the implementation block
@property (assign,nonatomic) BOOL debugEnableShieldsOnRouteLine;                                          //@synthesize debugEnableShieldsOnRouteLine=_debugEnableShieldsOnRouteLine - In the implementation block
@property (assign,nonatomic) unsigned char navMapMode;                                                    //@synthesize navMapMode=_navMapMode - In the implementation block
-(id)init;
-(void)dealloc;
-(BOOL)needsLayout;
-(VKPolylineOverlayPainter *)route;
-(void)setRoute:(VKPolylineOverlayPainter *)arg1 ;
-(void)setStyleManager:(shared_ptr<gss::StylesheetManager<gss::PropertyID> >*)arg1 ;
-(void)setRouteUserOffset:(PolylineCoordinate)arg1 ;
-(void)setCurrentLocationText:(NSString *)arg1 ;
-(PolylineCoordinate)routeUserOffset;
-(void)stylesheetDidChange;
-(void)layoutWithNavContext:(NavContext*)arg1 ;
-(void)clearSceneIsMemoryWarning:(BOOL)arg1 ;
-(void)setDebugDisableRoadSignLimit:(BOOL)arg1 ;
-(void)setDebugEnableShieldsOnRouteLine:(BOOL)arg1 ;
-(void)grabTilesFromScene:(id)arg1 ;
-(float)currentRoadSignPixelHeight;
-(const vector<std::__1::shared_ptr<md::NavLabel>*)activeSigns;
-(unsigned char)computeRoutePositionForPOIAtPixel:(const Matrix<float, 2, 1>*)arg1 currentPosition:(unsigned char)arg2 context:(NavContext*)arg3 ;
-(unsigned char)navMapMode;
-(NavCurrentRoadSign*)currentRoadSign;
-(BOOL)isNavMode;
-(void)_reloadRouteJunctions;
-(void)_refreshGuidanceRoadNames;
-(void)_tryAddRoadSignForJunction:(id)arg1 navContext:(NavContext*)arg2 labelCollisionEnabled:(BOOL)arg3 ;
-(void)_createOrUpdateLabelForRoad:(id)arg1 isShield:(BOOL)arg2 navContext:(NavContext*)arg3 ;
-(void)_tryAddRoadSignForRoad:(id)arg1 isShield:(BOOL)arg2 navContext:(NavContext*)arg3 labelCollisionEnabled:(BOOL)arg4 ;
-(void)_tryAddLabel:(id)arg1 navContext:(NavContext*)arg2 labelCollisionEnabled:(BOOL)arg3 ;
-(BOOL)_collideLabel:(id)arg1 activeLabel:(id)arg2 labelsToRemove:(id)arg3 ;
-(void)_generateCurrentRoadSignWithContext:(NavContext*)arg1 ;
-(unsigned char)orientationForRoadSign:(id)arg1 roadLabel:(id)arg2 navContext:(NavContext*)arg3 ;
-(void)_addLabelsAtJunctions:(id)arg1 withContext:(NavContext*)arg2 maxLabelsToAdd:(unsigned long long)arg3 ;
-(void)_addLabelsForJunctions:(id)arg1 withContext:(NavContext*)arg2 maxLabelsToAdd:(unsigned long long)arg3 useAllJunctions:(BOOL)arg4 placeShieldsFrontToBack:(BOOL)arg5 ;
-(BOOL)_addJunctionsForTile:(id)arg1 ;
-(void)_updateUniqueOffRouteRoads;
-(void)_updateRoadStarts;
-(void)_updateRoadsInGuidance;
-(void)_updatePreferredLabelPlacements;
-(void)_initalizeCurrentRoadInfo;
-(void)_updateCurrentRoadInfo;
-(BOOL)_findRouteOverlappingJunctionFrom:(long long)arg1 routeJunctions:(vector<RouteJunctionInfo, std::__1::allocator<RouteJunctionInfo> >*)arg2 lookBackward:(BOOL)arg3 firstOverlap:(long long*)arg4 secondOverlap:(long long*)arg5 ;
-(BOOL)_updateActiveRouteRange;
-(BOOL)drawRoadSigns;
-(void)setDrawRoadSigns:(BOOL)arg1 ;
-(NSString *)currentLocationText;
-(NSString *)currentRoadName;
-(void)setCurrentRoadName:(NSString *)arg1 ;
-(NSString *)currentShieldGroup;
-(void)setCurrentShieldGroup:(NSString *)arg1 ;
-(BOOL)debugDisableRoadSignLimit;
-(BOOL)debugEnableShieldsOnRouteLine;
-(void)setNavMapMode:(unsigned char)arg1 ;
@end

