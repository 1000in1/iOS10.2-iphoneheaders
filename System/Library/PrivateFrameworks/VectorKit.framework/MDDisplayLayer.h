/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:58:18 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <libobjc.A.dylib/GGLRenderQueueSource.h>
#import <libobjc.A.dylib/GGLLayerDelegate.h>
#import <libobjc.A.dylib/MDRenderTarget.h>

@protocol GGLLayer, GGLRenderQueueSource;
@class CALayer, NSString;

@interface MDDisplayLayer : NSObject <GGLRenderQueueSource, GGLLayerDelegate, MDRenderTarget> {

	CALayer*<GGLLayer> _layer;
	id<GGLRenderQueueSource> _renderSource;
	RenderTargetFormat _format;
	shared_ptr<ggl::Device>* _device;
	Renderer* _renderer;
	mutex _debugConsoleManagerCreationLock;
	unique_ptr<md::DebugConsoleManager, std::__1::default_delete<md::DebugConsoleManager> >* _debugConsoleManager;
	unique_ptr<ggl::RenderTarget, std::__1::default_delete<ggl::RenderTarget> >* _renderTarget;
	unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer> >* _depthStencil;
	unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer> >* _msaaTexture;
	BOOL _useMultisampling;
	BOOL _requiresMultisampling;
	CGContextRef _snapshotContext;
	BOOL _readPixels;
	BOOL _shouldRasterize;
	CGRect _bounds;
	double _contentsScale;

}

@property (nonatomic,readonly) Device* device; 
@property (nonatomic,readonly) Renderer* renderer; 
@property (nonatomic,readonly) CALayer * layer;                                  //@synthesize layer=_layer - In the implementation block
@property (nonatomic,readonly) const RenderTargetFormat* format; 
@property (nonatomic,readonly) BOOL multiSample;                                 //@synthesize useMultisampling=_useMultisampling - In the implementation block
@property (assign,nonatomic) BOOL debugEnableMultisampling; 
@property (assign,nonatomic) id<GGLRenderQueueSource> renderSource;              //@synthesize renderSource=_renderSource - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) CGSize size; 
@property (nonatomic,readonly) double contentScale; 
@property (nonatomic,readonly) BOOL shouldRasterize;                             //@synthesize shouldRasterize=_shouldRasterize - In the implementation block
@property (nonatomic,readonly) CGSize sizeInPixels; 
@property (nonatomic,readonly) float averageFPS; 
-(CALayer *)layer;
-(void)setOpaque:(BOOL)arg1 ;
-(void)setNeedsDisplayOnBoundsChange:(BOOL)arg1 ;
-(CGSize)size;
-(void)setBackgroundColor:(CGColorRef)arg1 ;
-(void)dealloc;
-(void)setBounds:(CGRect)arg1 ;
-(void)didReceiveMemoryWarning;
-(const RenderTargetFormat*)format;
-(CGPoint)convertPoint:(CGPoint)arg1 toLayer:(id)arg2 ;
-(void)setContentsGravity:(id)arg1 ;
-(void)setContentsScale:(double)arg1 ;
-(BOOL)shouldRasterize;
-(void)forceLayout;
-(double)contentScale;
-(void)drawInContext:(CGContextRef)arg1 ;
-(CGSize)sizeInPixels;
-(void)didReadPixels:(shared_ptr<ggl::BitmapData>*)arg1 ;
-(RenderQueue*)renderQueue;
-(BOOL)debugEnableMultisampling;
-(void)setDebugEnableMultisampling:(BOOL)arg1 ;
-(void)onTimerFired:(double)arg1 ;
-(DebugConsole*)debugConsoleForId:(int)arg1 ;
-(Renderer*)renderer;
-(void)setRenderSource:(id<GGLRenderQueueSource>)arg1 ;
-(id)initWithContentScale:(double)arg1 shouldRasterize:(BOOL)arg2 ;
-(void)destroyLayer;
-(void)recreateLayer;
-(float)averageFPS;
-(BOOL)multiSample;
-(void)drawToTexture:(Texture*)arg1 withTimestamp:(double)arg2 ;
-(void)_createLayer;
-(void)_createRenderTarget:(Texture*)arg1 ;
-(void)drawToTexture:(Texture*)arg1 withTimestamp:(double)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)enablePerformanceHUD:(id)arg1 ;
-(void)disablePerformanceHUD:(id)arg1 ;
-(void)expandedPerformanceHUD:(id)arg1 ;
-(id<GGLRenderQueueSource>)renderSource;
-(Device*)device;
-(void)didEnterBackground;
-(void)didPresent;
@end

