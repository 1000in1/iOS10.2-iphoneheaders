/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:58:17 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol VKRouteLineObserverProtocol;
#import <VectorKit/VectorKit-Structs.h>
@class VKPolylineOverlay, NSSet, VKPolylineOverlayRenderRegion;

@interface VKRouteLine : NSObject {

	BOOL _matchToRoads;
	BOOL _hasNewRoadMatches;
	Box<double, 2> _bounds;
	Matrix<double, 4, 4> _inverseMatrix;
	VKPolylineOverlay* _overlay;
	double _boundsUnitsPerMeter;
	double _metersPerPoint;
	double _boundsInWorldUnit;
	double _simplificationEpsilonPoints;
	double _viewUnitsPerPoint;
	id<VKRouteLineObserverProtocol> _observer;
	vector<geo::fast_shared_ptr<md::RouteLineSection>, std::__1::allocator<geo::fast_shared_ptr<md::RouteLineSection> > >* _sections;
	fast_shared_ptr<md::RouteLineSection>* _userLocationSection;
	PolylineCoordinate _userLocationIndex;
	Matrix<float, 2, 1> _userLocation;
	double _lastUserLocationMatchTimestamp;
	double _lastTrafficTimeStamp;
	NSSet* _retainedTiles;
	VKPolylineOverlayRenderRegion* _renderRegion;

}

@property (assign) BOOL hasNewRoadMatches;                                                              //@synthesize hasNewRoadMatches=_hasNewRoadMatches - In the implementation block
@property (nonatomic,readonly) vector<geo::fast_shared_ptr<md::RouteLineSection> sections;              //@synthesize sections=_sections - In the implementation block
@property (nonatomic,readonly) Box<double bounds;                                                       //@synthesize bounds=_bounds - In the implementation block
@property (assign,nonatomic) VKPolylineOverlay * overlay;                                               //@synthesize overlay=_overlay - In the implementation block
@property (assign,nonatomic) id<VKRouteLineObserverProtocol> observer;                                  //@synthesize observer=_observer - In the implementation block
@property (nonatomic,readonly) BOOL needsUpdate; 
@property (assign,nonatomic) double simplificationEpsilonPoints;                                        //@synthesize simplificationEpsilonPoints=_simplificationEpsilonPoints - In the implementation block
-(Box<double)bounds;
-(void)dealloc;
-(VKPolylineOverlay *)overlay;
-(vector<geo::fast_shared_ptr<md::RouteLineSection>)sections;
-(void)setObserver:(id<VKRouteLineObserverProtocol>)arg1 ;
-(id<VKRouteLineObserverProtocol>)observer;
-(void)createMeshIfNecessary:(long long)arg1 ;
-(void)generateArrowsForManeuverDisplayMode:(int)arg1 routeLineWidth:(double)arg2 ;
-(void)forEachSection:(/*^block*/id)arg1 ;
-(BOOL)buildRouteLineForPainter:(id)arg1 keysInView:(id)arg2 tiles:(id)arg3 containerModel:(id)arg4 viewUnitsPerPoint:(double)arg5 force:(BOOL)arg6 selected:(BOOL)arg7 ;
-(void)setSimplificationEpsilonPoints:(double)arg1 ;
-(void)splitRouteLineAtAnnotation:(id)arg1 ;
-(void)_updateTilesCovered:(id)arg1 ;
-(BOOL)isTrafficUpToDate;
-(BOOL)isTrafficUptoDate:(double)arg1 ;
-(void)_updateBounds:(id)arg1 ;
-(BOOL)hasNewRoadMatches;
-(void)setHasNewRoadMatches:(BOOL)arg1 ;
-(double)simplificationEpsilonPoints;
-(void)setOverlay:(VKPolylineOverlay *)arg1 ;
-(BOOL)needsUpdate;
@end

