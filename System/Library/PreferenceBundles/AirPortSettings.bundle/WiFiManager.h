/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:55:40 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/PreferenceBundles/AirPortSettings.bundle/AirPortSettings
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AirPortSettings/AirPortSettings-Structs.h>
#import <libobjc.A.dylib/SFRemoteHotspotSessionDelegate.h>

@class NSString, NSArray, WiFiNetwork, NSDictionary, NSMutableDictionary, NSMutableArray, NSSet, NSMutableSet, SFRemoteHotspotSession, NWPathEvaluator;

@interface WiFiManager : NSObject <SFRemoteHotspotSessionDelegate> {

	WiFiManagerClientRef _manager;
	WiFiDeviceClientRef _device;
	SCDynamicStoreRef _store;
	SCPreferencesRef _prefs;
	NSString* _interfaceName;
	NSArray* _dynamicStoreKeys;
	NSString* _ipv4StateKey;
	NSString* _ipv6StateKey;
	WiFiNetwork* _current;
	WiFiNetworkRef _currentWiFiNetworkRef;
	NSDictionary* _currentNetworkScanDict;
	NSMutableDictionary* _configurationDict;
	NSMutableArray* _hotspotNetworks;
	NSMutableDictionary* _networks;
	NSMutableArray* _favorites;
	NSMutableArray* _favoritesArray;
	NSMutableDictionary* _customSettings;
	NSSet* _managedNetworkNames;
	NSMutableSet* _networksInCurrentScan;
	NSMutableArray* _hiddenFavoritesQueue;
	BOOL _isConnected;
	BOOL _enabled;
	int _autojoin;
	BOOL _wapiState;
	BOOL _associating;
	BOOL _joiningEnterprise;
	BOOL _joiningRemoteHotspot;
	long long _remoteHotspotScanAttempts;
	BOOL _isDirty;
	BOOL _shouldScan;
	BOOL _initialPowerOnScan;
	BOOL _haveValidIPv4Address;
	NSMutableArray* _scanList;
	int _rssiThreshold;
	int _scanningMode;
	WiFiNetwork* _joinNetwork;
	WiFiNetwork* _scanForHiddenNetwork;
	WiFiNetwork* _deferredJoin;
	unsigned _consecutiveScanFailures;
	unsigned _enterpriseAssociationAttempts;
	BOOL _settingScanResults;
	int _supportsWAPI;
	BOOL _globalProxyEnabled;
	BOOL _hs20Supported;
	BOOL _hs20ProfilesInstalled;
	NSMutableDictionary* _hs20LabelDict;
	NSMutableDictionary* _captivePlugInDict;
	SFRemoteHotspotSession* _remoteSession;
	BOOL _networkSyncingEnabled;
	BOOL _isQueryingKeychainSyncStatus;
	double _scanTimestamp;
	BOOL _disableWiFiHealthUI;
	BOOL _showKnownNetworksUI;
	BOOL _hasNoGatewayIP;
	BOOL _currentNetworkIsDirected;
	int _ipState;
	SCD_Struct_Wi5* _healthOverrides;
	NWPathEvaluator* _evaluator;
	NSString* _currentNetworkDirectedSSID;
	NSMutableArray* _healthSubtitleEventTracking;
	NSMutableDictionary* _ssidHashDictionary;

}

@property (assign,nonatomic) int ipState;                                               //@synthesize ipState=_ipState - In the implementation block
@property (assign,nonatomic) BOOL hasNoGatewayIP;                                       //@synthesize hasNoGatewayIP=_hasNoGatewayIP - In the implementation block
@property (assign,nonatomic) BOOL currentNetworkIsDirected;                             //@synthesize currentNetworkIsDirected=_currentNetworkIsDirected - In the implementation block
@property (nonatomic,retain) NSString * currentNetworkDirectedSSID;                     //@synthesize currentNetworkDirectedSSID=_currentNetworkDirectedSSID - In the implementation block
@property (assign,nonatomic) SCD_Struct_Wi5* healthOverrides;                           //@synthesize healthOverrides=_healthOverrides - In the implementation block
@property (nonatomic,retain) NSMutableArray * healthSubtitleEventTracking;              //@synthesize healthSubtitleEventTracking=_healthSubtitleEventTracking - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * ssidHashDictionary;                  //@synthesize ssidHashDictionary=_ssidHashDictionary - In the implementation block
@property (nonatomic,retain) NWPathEvaluator * evaluator;                               //@synthesize evaluator=_evaluator - In the implementation block
@property (assign) double scanTimestamp;                                                //@synthesize scanTimestamp=_scanTimestamp - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
+(void)releaseSharedInstance;
+(id)__scanChannelDictForChannelNumber:(id)arg1 supportedChannels:(id)arg2 ;
-(NWPathEvaluator *)evaluator;
-(void)setEvaluator:(NWPathEvaluator *)arg1 ;
-(id)init;
-(BOOL)enabled;
-(void)dealloc;
-(BOOL)setEnabled:(BOOL)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)_load;
-(BOOL)connected;
-(void)session:(id)arg1 updatedFoundDevices:(id)arg2 ;
-(id)currentNetwork:(BOOL)arg1 ;
-(BOOL)wifiIsTethering;
-(id)currentCachedNetwork;
-(BOOL)canSupportWAPI;
-(void)forgetNetwork:(id)arg1 ;
-(BOOL)isNetworkCloudSynced:(id)arg1 ;
-(BOOL)isCarplayOnlyNetwork:(id)arg1 ;
-(void)renewLease;
-(void)loadCustomSettingsForNetwork:(id)arg1 ;
-(BOOL)isManagedNetwork:(id)arg1 ;
-(BOOL)canForgetNetwork:(id)arg1 ;
-(BOOL)canSetAutoJoin:(id)arg1 ;
-(BOOL)canSetAutoLogin:(id)arg1 ;
-(BOOL)showWiFiHealth;
-(BOOL)networkSupportsWiFiHealth:(id)arg1 ;
-(id)currentNetworkHealthIssues;
-(void)processHealthEventType:(long long)arg1 issues:(id)arg2 ssid:(id)arg3 ;
-(BOOL)isCarplayAndUserConfiguredNetwork:(id)arg1 ;
-(BOOL)globalProxyEnabled;
-(void)saveCustomSettingsForNetwork:(id)arg1 ;
-(void)setAutoJoin:(BOOL)arg1 forNetwork:(id)arg2 ;
-(BOOL)isAutoJoinEnabledForNetwork:(id)arg1 ;
-(void)setAutoLogin:(BOOL)arg1 forNetwork:(id)arg2 ;
-(BOOL)autoLogin:(id)arg1 ;
-(void)loadConfiguration;
-(BOOL)showKnownNetworksUI;
-(id)knownNetworks;
-(void)disablePersonalHotspot;
-(void)disconnectFromCurrentNetwork;
-(BOOL)personalHotspotHasClients;
-(id)getCarNameFromCarplayNetwork:(id)arg1 ;
-(id)hotspotNetworks;
-(void)endHotspotScan;
-(BOOL)isNetworkRestrictionActive;
-(void)beginHotspotScan;
-(int)autojoinMode;
-(void)setAutojoinMode:(int)arg1 ;
-(BOOL)wapiState;
-(void)setWapiState:(BOOL)arg1 ;
-(void)beginCaptivePlugInScan;
-(void)endCaptivePlugInScan;
-(void)removeNetworkNamed:(id)arg1 ;
-(void)_loadFavorites;
-(void)_updateHiddenFavoritesQueue;
-(void)releaseResources:(BOOL)arg1 ;
-(void)cleanupNetworks;
-(void)setShouldScan:(BOOL)arg1 ;
-(BOOL)scanForNetwork:(id)arg1 ;
-(void)cancelEnterpriseTrust:(id)arg1 forUser:(BOOL)arg2 ;
-(void)startRemoteHotspotSession:(id)arg1 ;
-(BOOL)isInCarplaySession:(id)arg1 ;
-(void)joinNetwork:(id)arg1 isHidden:(BOOL)arg2 ;
-(void)joinNetwork:(id)arg1 ;
-(void)_setScanResults:(id)arg1 ;
-(void)performGasQueryForNetwork:(id)arg1 ;
-(void)attemptEnterpriseAssociation;
-(void)acceptEnterpriseTrust:(id)arg1 ;
-(void)cancelEnterpriseAssociation;
-(void)_initDynamicStoreMonitor;
-(void)_getCurrentNetworkInfo;
-(void)_loadHealthOverrides;
-(void)_copyAutojoinPropertiesToNetwork:(id)arg1 ;
-(BOOL)preferenceForKey:(id)arg1 wifiManager:(WiFiManagerClientRef)arg2 ;
-(BOOL)currentNetworkHasNoInternetConnection;
-(id)_scanListForChannels:(id)arg1 ;
-(id)_scanListForNetworks:(id)arg1 ;
-(id)_scanDictForChannels:(id)arg1 andNetworks:(id)arg2 ;
-(void)_addNetworkForDictionary:(id)arg1 ;
-(id)findEqualKnownWiFiNetworks:(id)arg1 ;
-(void)_cancelEnterpriseAssociation;
-(void)_associationAttemptFinishedWithError:(id)arg1 onNetwork:(WiFiNetworkRef)arg2 ;
-(BOOL)_scanForHiddenNetwork:(id)arg1 ;
-(void)setWiFiTetheringOff;
-(SCPreferencesRef)getSCRef;
-(BOOL)_forgetWiFiNetwork:(id)arg1 ;
-(BOOL)_forgetNetworkWithSSID:(id)arg1 ;
-(BOOL)isCaptive:(id)arg1 ;
-(BOOL)isPreferredAdhocNetwork:(id)arg1 ;
-(BOOL)isKnownHS20Network:(id)arg1 ;
-(id)findEqualKnownNetworks:(WiFiNetworkRef)arg1 ;
-(void)_setupNewSetForNetwork:(id)arg1 ;
-(void)_storeCustomSettingsForNetwork:(id)arg1 ;
-(void)_applySetForCurrentNetwork;
-(id)_loadCustomSettingsForNetwork:(id)arg1 ;
-(BOOL)haveValidIPv6;
-(void)_remoteHotspotJoinFailed;
-(id)labelForNetwork:(id)arg1 ;
-(BOOL)scanning;
-(id)currentNetworkInfo;
-(id)currentNetworkStrength;
-(BOOL)isPowerRestricted;
-(void)forgetNetworkName:(id)arg1 ;
-(void)movedKnownNetworkAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2 ;
-(id)findMatchingSSIDKnownNetworks:(id)arg1 ;
-(BOOL)haveValidIP;
-(BOOL)haveValidIPv4OrIPv6AddressForNetwork:(id)arg1 ;
-(BOOL)isAssociatingToNetwork:(id)arg1 ;
-(BOOL)isJoiningRemoteHotspotNetwork:(id)arg1 ;
-(BOOL)isJoiningRemoteHotspot;
-(BOOL)isAssociating;
-(BOOL)deviceSupportsHS20;
-(double)scanTimestamp;
-(void)setScanTimestamp:(double)arg1 ;
-(SCD_Struct_Wi5*)healthOverrides;
-(void)setHealthOverrides:(SCD_Struct_Wi5*)arg1 ;
-(int)ipState;
-(void)setIpState:(int)arg1 ;
-(BOOL)hasNoGatewayIP;
-(void)setHasNoGatewayIP:(BOOL)arg1 ;
-(BOOL)currentNetworkIsDirected;
-(void)setCurrentNetworkIsDirected:(BOOL)arg1 ;
-(NSString *)currentNetworkDirectedSSID;
-(void)setCurrentNetworkDirectedSSID:(NSString *)arg1 ;
-(NSMutableArray *)healthSubtitleEventTracking;
-(void)setHealthSubtitleEventTracking:(NSMutableArray *)arg1 ;
-(NSMutableDictionary *)ssidHashDictionary;
-(void)setSsidHashDictionary:(NSMutableDictionary *)arg1 ;
-(id)_interfaceName;
-(BOOL)forgetWiFiNetwork:(id)arg1 ;
-(void)_postEnterpriseNotification:(id)arg1 ;
-(void)_checkIsCurrentNetwork:(id)arg1 ;
-(void)_updateAutojoinInformation;
-(void)_loadCustomSettings;
-(void)_checkCloudNetworkSyncStatus;
-(void)_logScanResults:(id)arg1 ;
-(void)_checkForGasQueries;
-(void)_refreshHs20LabeledNetworks:(id)arg1 ;
-(void)_scanCompletedWithResults:(id)arg1 ;
-(id)_networkFromDictionary:(id)arg1 ;
-(void)_updateDynamicStoreKeys:(id)arg1 ;
-(void)_dynamicStoreChanged:(id)arg1 ;
-(void)_deleteSetForNetworkWithSSID:(id)arg1 ;
-(SCNetworkSetRef)_createNewSetForNetwork:(id)arg1 ;
-(SCNetworkSetRef)_defaultSetRetained;
-(SCNetworkSetRef)_setForNetwork:(id)arg1 ;
-(void)_applyCustomProxySettings:(id)arg1 forService:(SCNetworkServiceRef)arg2 setKeychain:(BOOL)arg3 ;
-(void)_resetDynamicStoreMonitor;
-(void)_delayedPerformSelector:(id)arg1 ;
-(id)_currentNetwork;
-(id)_arrayFromCommaSeparatedString:(id)arg1 ;
-(void)_enterpriseAssociationResult:(id)arg1 withInfo:(id)arg2 ;
-(void)_scanFailedWithError:(id)arg1 ;
-(void)_gasQueryCompletedWithResults:(id)arg1 ;
-(void)_setIPv4StateKey:(id)arg1 ;
-(void)_linkChangedWithDict:(id)arg1 ;
-(void)_linkChanged;
-(void)_linkQualityChanged:(id)arg1 ;
-(void)_powerChanged;
-(void)_deleteSetForNetwork:(id)arg1 ;
-(void)_postNotificationName:(id)arg1 ;
-(void)_delayedPerformSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 ;
-(id)availableNetworks;
-(SCDynamicStoreRef)store;
@end

