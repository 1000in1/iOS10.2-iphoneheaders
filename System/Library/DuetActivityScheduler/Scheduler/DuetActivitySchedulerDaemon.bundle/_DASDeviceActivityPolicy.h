/*
* This header is generated by classdump-dyld 1.0
* on Friday, January 27, 2017 at 2:54:35 PM Japan Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/DuetActivityScheduler/Scheduler/DuetActivitySchedulerDaemon.bundle/DuetActivitySchedulerDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <DuetActivitySchedulerDaemon/_DASActivityPolicyPredicting.h>

@class NSString, NSArray, _DKPredictor, _DKPredictionTimeline, NSDate, _CDContextualKeyPath;

@interface _DASDeviceActivityPolicy : NSObject <_DASActivityPolicyPredicting> {

	BOOL _considerAlwaysActive;
	NSString* _policyName;
	NSArray* _triggers;
	_DKPredictor* _predictor;
	_DKPredictionTimeline* _deviceActivityTimeline;
	NSDate* _lastPredictionTimelineUpdate;
	_CDContextualKeyPath* _inUseStatus;

}

@property (nonatomic,copy) NSString * policyName;                                //@synthesize policyName=_policyName - In the implementation block
@property (nonatomic,retain) NSArray * triggers;                                 //@synthesize triggers=_triggers - In the implementation block
@property (nonatomic,retain) _DKPredictor * predictor;                           //@synthesize predictor=_predictor - In the implementation block
@property (retain) _DKPredictionTimeline * deviceActivityTimeline;               //@synthesize deviceActivityTimeline=_deviceActivityTimeline - In the implementation block
@property (nonatomic,retain) NSDate * lastPredictionTimelineUpdate;              //@synthesize lastPredictionTimelineUpdate=_lastPredictionTimelineUpdate - In the implementation block
@property (nonatomic,retain) _CDContextualKeyPath * inUseStatus;                 //@synthesize inUseStatus=_inUseStatus - In the implementation block
@property (assign,nonatomic) BOOL considerAlwaysActive;                          //@synthesize considerAlwaysActive=_considerAlwaysActive - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)policyInstance;
+(void)printLowLikelihoodRegions;
-(void)setPolicyName:(NSString *)arg1 ;
-(void)setInUseStatus:(_CDContextualKeyPath *)arg1 ;
-(NSString *)policyName;
-(id)initializeTriggers;
-(BOOL)indicatesDeterioratingConditionsForTrigger:(id)arg1 withState:(id)arg2 ;
-(BOOL)appliesToActivity:(id)arg1 ;
-(double)scoreForActivity:(id)arg1 atDate:(id)arg2 ;
-(_DKPredictionTimeline *)deviceActivityTimeline;
-(void)setDeviceActivityTimeline:(_DKPredictionTimeline *)arg1 ;
-(double)weightForActivity:(id)arg1 ;
-(id)responseForActivity:(id)arg1 withState:(id)arg2 ;
-(BOOL)shouldLogScoreToPowerLog;
-(double)predictedScoreForActivity:(id)arg1 atDate:(id)arg2 ;
-(NSDate *)lastPredictionTimelineUpdate;
-(BOOL)considerAlwaysActive;
-(void)setConsiderAlwaysActive:(BOOL)arg1 ;
-(_CDContextualKeyPath *)inUseStatus;
-(void)setLastPredictionTimelineUpdate:(NSDate *)arg1 ;
-(id)init;
-(void)setPredictor:(_DKPredictor *)arg1 ;
-(_DKPredictor *)predictor;
-(NSArray *)triggers;
-(void)setTriggers:(NSArray *)arg1 ;
@end

